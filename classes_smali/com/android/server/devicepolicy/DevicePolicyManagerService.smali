.class public Lcom/android/server/devicepolicy/DevicePolicyManagerService;
.super Lcom/android/server/devicepolicy/BaseIDevicePolicyManager;
.source "DevicePolicyManagerService.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;,
        Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyConstantsObserver;,
        Lcom/android/server/devicepolicy/DevicePolicyManagerService$SetupContentObserver;,
        Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;,
        Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;,
        Lcom/android/server/devicepolicy/DevicePolicyManagerService$RestrictionsListener;,
        Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;,
        Lcom/android/server/devicepolicy/DevicePolicyManagerService$Lifecycle;,
        Lcom/android/server/devicepolicy/DevicePolicyManagerService$Stats;
    }
.end annotation


# static fields
.field private static final AB_DEVICE_KEY:Ljava/lang/String; = "ro.build.ab_update"

.field private static final ACTION_EXPIRED_PASSWORD_NOTIFICATION:Ljava/lang/String; = "com.android.server.ACTION_EXPIRED_PASSWORD_NOTIFICATION"

.field private static final ATTR_ALIAS:Ljava/lang/String; = "alias"

.field private static final ATTR_APPLICATION_RESTRICTIONS_MANAGER:Ljava/lang/String; = "application-restrictions-manager"

.field private static final ATTR_DELEGATED_CERT_INSTALLER:Ljava/lang/String; = "delegated-cert-installer"

.field private static final ATTR_DEVICE_PAIRED:Ljava/lang/String; = "device-paired"

.field private static final ATTR_DEVICE_PROVISIONING_CONFIG_APPLIED:Ljava/lang/String; = "device-provisioning-config-applied"

.field private static final ATTR_DISABLED:Ljava/lang/String; = "disabled"

.field private static final ATTR_ID:Ljava/lang/String; = "id"

.field private static final ATTR_NAME:Ljava/lang/String; = "name"

.field private static final ATTR_PERMISSION_POLICY:Ljava/lang/String; = "permission-policy"

.field private static final ATTR_PERMISSION_PROVIDER:Ljava/lang/String; = "permission-provider"

.field private static final ATTR_PROVISIONING_STATE:Ljava/lang/String; = "provisioning-state"

.field private static final ATTR_SETUP_COMPLETE:Ljava/lang/String; = "setup-complete"

.field private static final ATTR_VALUE:Ljava/lang/String; = "value"

.field private static final DA_DISALLOWED_POLICIES:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field private static final DELEGATIONS:[Ljava/lang/String;

.field private static final DEVICE_ADMIN_DEACTIVATE_TIMEOUT:I = 0x2710

.field private static final DEVICE_OWNER_DELEGATIONS:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private static final DEVICE_POLICIES_XML:Ljava/lang/String; = "device_policies.xml"

.field private static final DO_NOT_ASK_CREDENTIALS_ON_BOOT_XML:Ljava/lang/String; = "do-not-ask-credentials-on-boot"

.field private static final ENABLE_LOCK_GUARD:Z = true

.field private static final EXCLUSIVE_DELEGATIONS:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private static final EXPIRATION_GRACE_PERIOD_MS:J

.field private static final GLOBAL_SETTINGS_DEPRECATED:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private static final GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field protected static final LOG_TAG:Ljava/lang/String; = "DevicePolicyManager"

.field private static final LOG_TAG_DEVICE_OWNER:Ljava/lang/String; = "device-owner"

.field private static final LOG_TAG_PROFILE_OWNER:Ljava/lang/String; = "profile-owner"

.field private static final MINIMUM_STRONG_AUTH_TIMEOUT_MS:J

.field private static final MS_PER_DAY:J

.field private static final PROFILE_KEYGUARD_FEATURES:I = 0x1b8

.field private static final PROFILE_KEYGUARD_FEATURES_PROFILE_ONLY:I = 0x8

.field private static final PROPERTY_DEVICE_OWNER_PRESENT:Ljava/lang/String; = "ro.device_owner"

.field private static final REQUEST_EXPIRE_PASSWORD:I = 0x15c3

.field private static final SECURE_SETTINGS_DEVICEOWNER_WHITELIST:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private static final SECURE_SETTINGS_WHITELIST:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private static final STATUS_BAR_DISABLE2_MASK:I = 0x1

.field private static final STATUS_BAR_DISABLE_MASK:I = 0x2070000

.field private static final SYSTEM_SETTINGS_WHITELIST:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private static final TAG_ACCEPTED_CA_CERTIFICATES:Ljava/lang/String; = "accepted-ca-certificate"

.field private static final TAG_ADMIN_BROADCAST_PENDING:Ljava/lang/String; = "admin-broadcast-pending"

.field private static final TAG_AFFILIATION_ID:Ljava/lang/String; = "affiliation-id"

.field private static final TAG_CURRENT_INPUT_METHOD_SET:Ljava/lang/String; = "current-ime-set"

.field private static final TAG_INITIALIZATION_BUNDLE:Ljava/lang/String; = "initialization-bundle"

.field private static final TAG_LAST_BUG_REPORT_REQUEST:Ljava/lang/String; = "last-bug-report-request"

.field private static final TAG_LAST_NETWORK_LOG_RETRIEVAL:Ljava/lang/String; = "last-network-log-retrieval"

.field private static final TAG_LAST_SECURITY_LOG_RETRIEVAL:Ljava/lang/String; = "last-security-log-retrieval"

.field private static final TAG_LOCK_TASK_COMPONENTS:Ljava/lang/String; = "lock-task-component"

.field private static final TAG_LOCK_TASK_FEATURES:Ljava/lang/String; = "lock-task-features"

.field private static final TAG_OWNER_INSTALLED_CA_CERT:Ljava/lang/String; = "owner-installed-ca-cert"

.field private static final TAG_PASSWORD_TOKEN_HANDLE:Ljava/lang/String; = "password-token"

.field private static final TAG_PASSWORD_VALIDITY:Ljava/lang/String; = "password-validity"

.field private static final TAG_STATUS_BAR:Ljava/lang/String; = "statusbar"

.field private static final TAG_TRANSFER_OWNERSHIP_BUNDLE:Ljava/lang/String; = "transfer-ownership-bundle"

.field private static final TRANSFER_OWNERSHIP_PARAMETERS_XML:Ljava/lang/String; = "transfer-ownership-parameters.xml"

.field private static final UNATTENDED_MANAGED_KIOSK_MS:I = 0x7530

.field private static final VERBOSE_LOG:Z


# instance fields
.field final mBackgroundHandler:Landroid/os/Handler;

.field private final mCertificateMonitor:Lcom/android/server/devicepolicy/CertificateMonitor;

.field private mConstants:Lcom/android/server/devicepolicy/DevicePolicyConstants;

.field private final mConstantsObserver:Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyConstantsObserver;

.field final mContext:Landroid/content/Context;

.field private final mDeviceAdminServiceController:Lcom/android/server/devicepolicy/DeviceAdminServiceController;

.field final mHandler:Landroid/os/Handler;

.field final mHasFeature:Z

.field final mHasTelephonyFeature:Z

.field final mIPackageManager:Landroid/content/pm/IPackageManager;

.field final mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

.field final mIsWatch:Z

.field final mLocalService:Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;

.field private final mLockDoNoUseDirectly:Ljava/lang/Object;

.field private final mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

.field private mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = {
            "getLockObject()"
        }
    .end annotation
.end field

.field private final mOverlayPackagesProvider:Lcom/android/server/devicepolicy/OverlayPackagesProvider;

.field final mOwners:Lcom/android/server/devicepolicy/Owners;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field private final mPackagesToRemove:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Landroid/util/Pair<",
            "Ljava/lang/String;",
            "Ljava/lang/Integer;",
            ">;>;"
        }
    .end annotation
.end field

.field private final mPolicyCache:Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;

.field final mReceiver:Landroid/content/BroadcastReceiver;

.field private final mRemoteBugreportConsentReceiver:Landroid/content/BroadcastReceiver;

.field private final mRemoteBugreportFinishedReceiver:Landroid/content/BroadcastReceiver;

.field private final mRemoteBugreportServiceIsActive:Ljava/util/concurrent/atomic/AtomicBoolean;

.field private final mRemoteBugreportSharingAccepted:Ljava/util/concurrent/atomic/AtomicBoolean;

.field private final mRemoteBugreportTimeoutRunnable:Ljava/lang/Runnable;

.field private final mSecurityLogMonitor:Lcom/android/server/devicepolicy/SecurityLogMonitor;

.field private final mSetupContentObserver:Lcom/android/server/devicepolicy/DevicePolicyManagerService$SetupContentObserver;

.field private final mStatLogger:Lcom/android/internal/util/StatLogger;

.field final mTelephonyManager:Landroid/telephony/TelephonyManager;

.field private final mToken:Landroid/os/Binder;

.field final mTransferOwnershipMetadataManager:Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field final mUsageStatsManagerInternal:Landroid/app/usage/UsageStatsManagerInternal;

.field final mUserData:Landroid/util/SparseArray;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = {
            "getLockObject()"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;",
            ">;"
        }
    .end annotation
.end field

.field final mUserManager:Landroid/os/UserManager;

.field final mUserManagerInternal:Landroid/os/UserManagerInternal;

.field final mUserPasswordMetrics:Landroid/util/SparseArray;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = {
            "getLockObject()"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Landroid/app/admin/PasswordMetrics;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method private static synthetic $closeResource(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V
    .registers 3
    .param p0, "x0"  # Ljava/lang/Throwable;
    .param p1, "x1"  # Ljava/lang/AutoCloseable;

    .line 5898
    if-eqz p0, :cond_b

    :try_start_2
    invoke-interface {p1}, Ljava/lang/AutoCloseable;->close()V
    :try_end_5
    .catchall {:try_start_2 .. :try_end_5} :catchall_6

    goto :goto_e

    :catchall_6
    move-exception v0

    invoke-virtual {p0, v0}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    goto :goto_e

    :cond_b
    invoke-interface {p1}, Ljava/lang/AutoCloseable;->close()V

    :goto_e
    return-void
.end method

.method static constructor <clinit>()V
    .registers 16

    .line 352
    sget-object v0, Ljava/util/concurrent/TimeUnit;->DAYS:Ljava/util/concurrent/TimeUnit;

    const-wide/16 v1, 0x1

    invoke-virtual {v0, v1, v2}, Ljava/util/concurrent/TimeUnit;->toMillis(J)J

    move-result-wide v3

    sput-wide v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->MS_PER_DAY:J

    .line 354
    sget-wide v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->MS_PER_DAY:J

    const-wide/16 v5, 0x5

    mul-long/2addr v3, v5

    sput-wide v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->EXPIRATION_GRACE_PERIOD_MS:J

    .line 371
    const-string v5, "delegation-cert-install"

    const-string v6, "delegation-app-restrictions"

    const-string v7, "delegation-block-uninstall"

    const-string v8, "delegation-enable-system-app"

    const-string v9, "delegation-keep-uninstalled-packages"

    const-string v10, "delegation-package-access"

    const-string v11, "delegation-permission-grant"

    const-string v12, "delegation-install-existing-package"

    const-string v13, "delegation-keep-uninstalled-packages"

    const-string v14, "delegation-network-logging"

    const-string v15, "delegation-cert-selection"

    filled-new-array/range {v5 .. v15}, [Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DELEGATIONS:[Ljava/lang/String;

    .line 386
    const-string v0, "delegation-network-logging"

    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v3

    sput-object v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DEVICE_OWNER_DELEGATIONS:Ljava/util/List;

    .line 391
    const-string v3, "delegation-cert-selection"

    filled-new-array {v0, v3}, [Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    sput-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->EXCLUSIVE_DELEGATIONS:Ljava/util/List;

    .line 420
    new-instance v0, Landroid/util/ArraySet;

    invoke-direct {v0}, Landroid/util/ArraySet;-><init>()V

    sput-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SECURE_SETTINGS_WHITELIST:Ljava/util/Set;

    .line 421
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SECURE_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string v3, "default_input_method"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 422
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SECURE_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string/jumbo v3, "skip_first_use_hints"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 423
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SECURE_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string/jumbo v3, "install_non_market_apps"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 425
    new-instance v0, Landroid/util/ArraySet;

    invoke-direct {v0}, Landroid/util/ArraySet;-><init>()V

    sput-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SECURE_SETTINGS_DEVICEOWNER_WHITELIST:Ljava/util/Set;

    .line 426
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SECURE_SETTINGS_DEVICEOWNER_WHITELIST:Ljava/util/Set;

    sget-object v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SECURE_SETTINGS_WHITELIST:Ljava/util/Set;

    invoke-interface {v0, v3}, Ljava/util/Set;->addAll(Ljava/util/Collection;)Z

    .line 427
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SECURE_SETTINGS_DEVICEOWNER_WHITELIST:Ljava/util/Set;

    const-string/jumbo v3, "location_mode"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 429
    new-instance v0, Landroid/util/ArraySet;

    invoke-direct {v0}, Landroid/util/ArraySet;-><init>()V

    sput-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;

    .line 430
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string v3, "adb_enabled"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 431
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string v3, "auto_time"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 432
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string v3, "auto_time_zone"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 433
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string v3, "data_roaming"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 434
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string/jumbo v3, "usb_mass_storage_enabled"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 435
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string/jumbo v3, "wifi_sleep_policy"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 436
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string/jumbo v3, "stay_on_while_plugged_in"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 437
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string/jumbo v3, "wifi_device_owner_configs_lockdown"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 438
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string/jumbo v3, "private_dns_mode"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 439
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string/jumbo v3, "private_dns_specifier"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 441
    new-instance v0, Landroid/util/ArraySet;

    invoke-direct {v0}, Landroid/util/ArraySet;-><init>()V

    sput-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_DEPRECATED:Ljava/util/Set;

    .line 442
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_DEPRECATED:Ljava/util/Set;

    const-string v3, "bluetooth_on"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 443
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_DEPRECATED:Ljava/util/Set;

    const-string v3, "development_settings_enabled"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 444
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_DEPRECATED:Ljava/util/Set;

    const-string/jumbo v3, "mode_ringer"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 445
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_DEPRECATED:Ljava/util/Set;

    const-string/jumbo v3, "network_preference"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 446
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_DEPRECATED:Ljava/util/Set;

    const-string/jumbo v3, "wifi_on"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 448
    new-instance v0, Landroid/util/ArraySet;

    invoke-direct {v0}, Landroid/util/ArraySet;-><init>()V

    sput-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SYSTEM_SETTINGS_WHITELIST:Ljava/util/Set;

    .line 449
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SYSTEM_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string/jumbo v3, "screen_brightness"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 450
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SYSTEM_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string/jumbo v3, "screen_brightness_mode"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 451
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SYSTEM_SETTINGS_WHITELIST:Ljava/util/Set;

    const-string/jumbo v3, "screen_off_timeout"

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 453
    new-instance v0, Landroid/util/ArraySet;

    invoke-direct {v0}, Landroid/util/ArraySet;-><init>()V

    sput-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DA_DISALLOWED_POLICIES:Ljava/util/Set;

    .line 454
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DA_DISALLOWED_POLICIES:Ljava/util/Set;

    const/16 v3, 0x8

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 455
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DA_DISALLOWED_POLICIES:Ljava/util/Set;

    const/16 v3, 0x9

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 456
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DA_DISALLOWED_POLICIES:Ljava/util/Set;

    const/4 v3, 0x6

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 457
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DA_DISALLOWED_POLICIES:Ljava/util/Set;

    const/4 v3, 0x0

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v0, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 477
    sget-object v0, Ljava/util/concurrent/TimeUnit;->HOURS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v1, v2}, Ljava/util/concurrent/TimeUnit;->toMillis(J)J

    move-result-wide v0

    sput-wide v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->MINIMUM_STRONG_AUTH_TIMEOUT_MS:J

    return-void
.end method

.method public constructor <init>(Landroid/content/Context;)V
    .registers 3
    .param p1, "context"  # Landroid/content/Context;

    .line 2201
    new-instance v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-direct {v0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;-><init>(Landroid/content/Context;)V

    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;)V

    .line 2202
    return-void
.end method

.method constructor <init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;)V
    .registers 10
    .param p1, "injector"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 2205
    invoke-direct {p0}, Lcom/android/server/devicepolicy/BaseIDevicePolicyManager;-><init>()V

    .line 504
    new-instance v0, Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;

    invoke-direct {v0}, Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;-><init>()V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mPolicyCache:Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;

    .line 510
    new-instance v0, Landroid/util/ArraySet;

    invoke-direct {v0}, Landroid/util/ArraySet;-><init>()V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mPackagesToRemove:Ljava/util/Set;

    .line 519
    new-instance v0, Landroid/os/Binder;

    invoke-direct {v0}, Landroid/os/Binder;-><init>()V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mToken:Landroid/os/Binder;

    .line 543
    new-instance v0, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>()V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportServiceIsActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 544
    new-instance v0, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>()V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportSharingAccepted:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 559
    new-instance v0, Lcom/android/internal/util/StatLogger;

    const-string v1, "LockGuard.guard()"

    filled-new-array {v1}, [Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/android/internal/util/StatLogger;-><init>([Ljava/lang/String;)V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mStatLogger:Lcom/android/internal/util/StatLogger;

    .line 563
    const/4 v0, 0x7

    const/4 v1, 0x1

    invoke-static {v0, v1}, Lcom/android/server/LockGuard;->installNewLock(IZ)Ljava/lang/Object;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockDoNoUseDirectly:Ljava/lang/Object;

    .line 590
    new-instance v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$1;

    invoke-direct {v0, p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$1;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportTimeoutRunnable:Ljava/lang/Runnable;

    .line 600
    new-instance v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$2;

    invoke-direct {v0, p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$2;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportFinishedReceiver:Landroid/content/BroadcastReceiver;

    .line 612
    new-instance v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$3;

    invoke-direct {v0, p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$3;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportConsentReceiver:Landroid/content/BroadcastReceiver;

    .line 736
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserData:Landroid/util/SparseArray;

    .line 739
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserPasswordMetrics:Landroid/util/SparseArray;

    .line 746
    new-instance v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$4;

    invoke-direct {v0, p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$4;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mReceiver:Landroid/content/BroadcastReceiver;

    .line 2206
    iput-object p1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 2207
    iget-object v0, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/content/Context;

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 2208
    new-instance v0, Landroid/os/Handler;

    invoke-virtual {p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getMyLooper()Landroid/os/Looper;

    move-result-object v1

    invoke-static {v1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/Looper;

    invoke-direct {v0, v1}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHandler:Landroid/os/Handler;

    .line 2210
    new-instance v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyConstantsObserver;

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHandler:Landroid/os/Handler;

    invoke-direct {v0, p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyConstantsObserver;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mConstantsObserver:Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyConstantsObserver;

    .line 2211
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mConstantsObserver:Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyConstantsObserver;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyConstantsObserver;->register()V

    .line 2212
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->loadConstants()Lcom/android/server/devicepolicy/DevicePolicyConstants;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mConstants:Lcom/android/server/devicepolicy/DevicePolicyConstants;

    .line 2214
    invoke-virtual {p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->newOwners()Lcom/android/server/devicepolicy/Owners;

    move-result-object v0

    invoke-static {v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/devicepolicy/Owners;

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 2216
    invoke-virtual {p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getUserManager()Landroid/os/UserManager;

    move-result-object v0

    invoke-static {v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/UserManager;

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    .line 2217
    invoke-virtual {p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getUserManagerInternal()Landroid/os/UserManagerInternal;

    move-result-object v0

    invoke-static {v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/UserManagerInternal;

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    .line 2218
    nop

    .line 2219
    invoke-virtual {p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getUsageStatsManagerInternal()Landroid/app/usage/UsageStatsManagerInternal;

    move-result-object v0

    .line 2218
    invoke-static {v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/usage/UsageStatsManagerInternal;

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUsageStatsManagerInternal:Landroid/app/usage/UsageStatsManagerInternal;

    .line 2220
    invoke-virtual {p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-static {v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/content/pm/IPackageManager;

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    .line 2221
    invoke-virtual {p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getTelephonyManager()Landroid/telephony/TelephonyManager;

    move-result-object v0

    invoke-static {v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/telephony/TelephonyManager;

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mTelephonyManager:Landroid/telephony/TelephonyManager;

    .line 2223
    new-instance v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;

    invoke-direct {v0, p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLocalService:Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;

    .line 2224
    invoke-virtual {p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->newLockPatternUtils()Lcom/android/internal/widget/LockPatternUtils;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    .line 2227
    new-instance v0, Lcom/android/server/devicepolicy/SecurityLogMonitor;

    invoke-direct {v0, p0}, Lcom/android/server/devicepolicy/SecurityLogMonitor;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSecurityLogMonitor:Lcom/android/server/devicepolicy/SecurityLogMonitor;

    .line 2229
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->hasFeature()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    .line 2230
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    .line 2231
    const-string v1, "android.hardware.type.watch"

    invoke-virtual {v0, v1}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIsWatch:Z

    .line 2232
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    .line 2233
    const-string v1, "android.hardware.telephony"

    invoke-virtual {v0, v1}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasTelephonyFeature:Z

    .line 2234
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mBackgroundHandler:Landroid/os/Handler;

    .line 2237
    new-instance v0, Lcom/android/server/devicepolicy/CertificateMonitor;

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mBackgroundHandler:Landroid/os/Handler;

    invoke-direct {v0, p0, v1, v2}, Lcom/android/server/devicepolicy/CertificateMonitor;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mCertificateMonitor:Lcom/android/server/devicepolicy/CertificateMonitor;

    .line 2239
    new-instance v0, Lcom/android/server/devicepolicy/DeviceAdminServiceController;

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mConstants:Lcom/android/server/devicepolicy/DevicePolicyConstants;

    invoke-direct {v0, p0, v1}, Lcom/android/server/devicepolicy/DeviceAdminServiceController;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Lcom/android/server/devicepolicy/DevicePolicyConstants;)V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mDeviceAdminServiceController:Lcom/android/server/devicepolicy/DeviceAdminServiceController;

    .line 2241
    new-instance v0, Lcom/android/server/devicepolicy/OverlayPackagesProvider;

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v0, v1}, Lcom/android/server/devicepolicy/OverlayPackagesProvider;-><init>(Landroid/content/Context;)V

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOverlayPackagesProvider:Lcom/android/server/devicepolicy/OverlayPackagesProvider;

    .line 2243
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->newTransferOwnershipMetadataManager()Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mTransferOwnershipMetadataManager:Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager;

    .line 2245
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_14a

    .line 2247
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSetupContentObserver:Lcom/android/server/devicepolicy/DevicePolicyManagerService$SetupContentObserver;

    .line 2248
    return-void

    .line 2251
    :cond_14a
    new-instance v0, Landroid/content/IntentFilter;

    invoke-direct {v0}, Landroid/content/IntentFilter;-><init>()V

    .line 2252
    .local v0, "filter":Landroid/content/IntentFilter;
    const-string v1, "android.intent.action.BOOT_COMPLETED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2253
    const-string v1, "com.android.server.ACTION_EXPIRED_PASSWORD_NOTIFICATION"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2254
    const-string v1, "android.intent.action.USER_ADDED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2255
    const-string v1, "android.intent.action.USER_REMOVED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2256
    const-string v1, "android.intent.action.USER_STARTED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2257
    const-string v1, "android.intent.action.USER_STOPPED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2258
    const-string v1, "android.intent.action.USER_SWITCHED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2259
    const-string v1, "android.intent.action.USER_UNLOCKED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2260
    const/16 v1, 0x3e8

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->setPriority(I)V

    .line 2261
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mReceiver:Landroid/content/BroadcastReceiver;

    sget-object v3, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const/4 v5, 0x0

    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHandler:Landroid/os/Handler;

    move-object v4, v0

    invoke-virtual/range {v1 .. v6}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 2262
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    move-object v0, v1

    .line 2263
    const-string v1, "android.intent.action.PACKAGE_CHANGED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2264
    const-string v1, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2265
    const-string v1, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2266
    const-string v1, "android.intent.action.PACKAGE_ADDED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2267
    const-string/jumbo v1, "package"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V

    .line 2268
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mReceiver:Landroid/content/BroadcastReceiver;

    sget-object v4, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const/4 v6, 0x0

    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHandler:Landroid/os/Handler;

    move-object v5, v0

    invoke-virtual/range {v2 .. v7}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 2269
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    move-object v0, v1

    .line 2270
    const-string v1, "android.intent.action.MANAGED_PROFILE_ADDED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2271
    const-string v1, "android.intent.action.TIME_SET"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2272
    const-string v1, "android.intent.action.DATE_CHANGED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2273
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mReceiver:Landroid/content/BroadcastReceiver;

    sget-object v4, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHandler:Landroid/os/Handler;

    move-object v5, v0

    invoke-virtual/range {v2 .. v7}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 2275
    const-class v1, Landroid/app/admin/DevicePolicyManagerInternal;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLocalService:Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;

    invoke-static {v1, v2}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 2277
    new-instance v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$SetupContentObserver;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHandler:Landroid/os/Handler;

    invoke-direct {v1, p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$SetupContentObserver;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Landroid/os/Handler;)V

    iput-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSetupContentObserver:Lcom/android/server/devicepolicy/DevicePolicyManagerService$SetupContentObserver;

    .line 2279
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    new-instance v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$RestrictionsListener;

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$RestrictionsListener;-><init>(Landroid/content/Context;)V

    invoke-virtual {v1, v2}, Landroid/os/UserManagerInternal;->addUserRestrictionsListener(Landroid/os/UserManagerInternal$UserRestrictionsListener;)V

    .line 2280
    return-void
.end method

.method static synthetic access$000(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)Ljava/util/concurrent/atomic/AtomicBoolean;
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportServiceIsActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    return-object v0
.end method

.method static synthetic access$100(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V
    .registers 1
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->onBugreportFailed()V

    return-void
.end method

.method static synthetic access$1000(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V
    .registers 1
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybePauseDeviceWideLoggingLocked()V

    return-void
.end method

.method static synthetic access$1100(Lcom/android/server/devicepolicy/DevicePolicyManagerService;I)Z
    .registers 3
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # I

    .line 296
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isUserAffiliatedWithDeviceLocked(I)Z

    move-result v0

    return v0
.end method

.method static synthetic access$1200(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V
    .registers 1
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->discardDeviceWideLogsLocked()V

    return-void
.end method

.method static synthetic access$1300(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V
    .registers 1
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeResumeDeviceWideLoggingLocked()V

    return-void
.end method

.method static synthetic access$1400(Lcom/android/server/devicepolicy/DevicePolicyManagerService;I)V
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # I

    .line 296
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeSendAdminEnabledBroadcastLocked(I)V

    return-void
.end method

.method static synthetic access$1500(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Ljava/lang/String;I)V
    .registers 3
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # Ljava/lang/String;
    .param p2, "x2"  # I

    .line 296
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->handlePackagesChanged(Ljava/lang/String;I)V

    return-void
.end method

.method static synthetic access$1600(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V
    .registers 1
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearWipeProfileNotification()V

    return-void
.end method

.method static synthetic access$1700(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Z)V
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # Z

    .line 296
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateSystemUpdateFreezePeriodsRecord(Z)V

    return-void
.end method

.method static synthetic access$1800(Landroid/content/Context;)Ljava/lang/String;
    .registers 2
    .param p0, "x0"  # Landroid/content/Context;

    .line 296
    invoke-static {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getManagedProvisioningPackage(Landroid/content/Context;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$1900(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Landroid/content/ComponentName;I)V
    .registers 3
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # Landroid/content/ComponentName;
    .param p2, "x2"  # I

    .line 296
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeAdminArtifacts(Landroid/content/ComponentName;I)V

    return-void
.end method

.method static synthetic access$200(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Landroid/content/Intent;)V
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # Landroid/content/Intent;

    .line 296
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->onBugreportFinished(Landroid/content/Intent;)V

    return-void
.end method

.method static synthetic access$2000(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Ljava/lang/String;I)V
    .registers 3
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # Ljava/lang/String;
    .param p2, "x2"  # I

    .line 296
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removePackageIfRequired(Ljava/lang/String;I)V

    return-void
.end method

.method static synthetic access$2200(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Ljava/lang/String;Landroid/os/IBinder;)V
    .registers 3
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # Ljava/lang/String;
    .param p2, "x2"  # Landroid/os/IBinder;

    .line 296
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendPrivateKeyAliasResponse(Ljava/lang/String;Landroid/os/IBinder;)V

    return-void
.end method

.method static synthetic access$2400(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V
    .registers 1
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDeviceOwnerSystemPropertyLocked()V

    return-void
.end method

.method static synthetic access$2500(Lcom/android/server/devicepolicy/DevicePolicyManagerService;I)V
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # I

    .line 296
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    return-void
.end method

.method static synthetic access$2602(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Lcom/android/server/devicepolicy/DevicePolicyConstants;)Lcom/android/server/devicepolicy/DevicePolicyConstants;
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # Lcom/android/server/devicepolicy/DevicePolicyConstants;

    .line 296
    iput-object p1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mConstants:Lcom/android/server/devicepolicy/DevicePolicyConstants;

    return-object p1
.end method

.method static synthetic access$2700(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)Lcom/android/server/devicepolicy/DevicePolicyConstants;
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->loadConstants()Lcom/android/server/devicepolicy/DevicePolicyConstants;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$2800(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Landroid/content/ComponentName;II)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .registers 5
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # Landroid/content/ComponentName;
    .param p2, "x2"  # I
    .param p3, "x3"  # I

    .line 296
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminWithPolicyForUidLocked(Landroid/content/ComponentName;II)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$2900(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Landroid/content/ComponentName;I)Landroid/content/Intent;
    .registers 4
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # Landroid/content/ComponentName;
    .param p2, "x2"  # I

    .line 296
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->createShowAdminSupportIntent(Landroid/content/ComponentName;I)Landroid/content/Intent;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$300(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V
    .registers 1
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->onBugreportSharingAccepted()V

    return-void
.end method

.method static synthetic access$3000(Lcom/android/server/devicepolicy/DevicePolicyManagerService;I)V
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # I

    .line 296
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateMaximumTimeToLockLocked(I)V

    return-void
.end method

.method static synthetic access$3100(Lcom/android/server/devicepolicy/DevicePolicyManagerService;I)V
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # I

    .line 296
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordQualityCacheForUserGroup(I)V

    return-void
.end method

.method static synthetic access$3200(Lcom/android/server/devicepolicy/DevicePolicyManagerService;I)Z
    .registers 3
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # I

    .line 296
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSeparateProfileChallengeEnabled(I)Z

    move-result v0

    return v0
.end method

.method static synthetic access$3300(Lcom/android/server/devicepolicy/DevicePolicyManagerService;I)Z
    .registers 3
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # I

    .line 296
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->canUserHaveUntrustedCredentialReset(I)Z

    move-result v0

    return v0
.end method

.method static synthetic access$3400(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mPolicyCache:Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;

    return-object v0
.end method

.method static synthetic access$3500(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Ljava/lang/String;I)V
    .registers 3
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # Ljava/lang/String;
    .param p2, "x2"  # I

    .line 296
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->startUninstallIntent(Ljava/lang/String;I)V

    return-void
.end method

.method static synthetic access$400(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V
    .registers 1
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->onBugreportSharingDeclined()V

    return-void
.end method

.method static synthetic access$500(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)Landroid/content/BroadcastReceiver;
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportConsentReceiver:Landroid/content/BroadcastReceiver;

    return-object v0
.end method

.method static synthetic access$600(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)Z
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isNetworkLoggingEnabledInternalLocked()Z

    move-result v0

    return v0
.end method

.method static synthetic access$700(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Z)V
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # Z

    .line 296
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setNetworkLoggingActiveInternal(Z)V

    return-void
.end method

.method static synthetic access$800(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)Ljava/lang/String;
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;

    .line 296
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerRemoteBugreportUri()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$900(Lcom/android/server/devicepolicy/DevicePolicyManagerService;I)V
    .registers 2
    .param p0, "x0"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .param p1, "x1"  # I

    .line 296
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->handlePasswordExpirationNotification(I)V

    return-void
.end method

.method private areAllUsersAffiliatedWithDeviceLocked()Z
    .registers 10

    .line 12636
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 12638
    .local v0, "ident":J
    :try_start_6
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Landroid/os/UserManager;->getUsers(Z)Ljava/util/List;

    move-result-object v2

    .line 12639
    .local v2, "userInfos":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    const/4 v4, 0x0

    move v5, v4

    .local v5, "i":I
    :goto_f
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v6

    if-ge v5, v6, :cond_48

    .line 12640
    invoke-interface {v2, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/content/pm/UserInfo;

    iget v6, v6, Landroid/content/pm/UserInfo;->id:I

    .line 12641
    .local v6, "userId":I
    invoke-direct {p0, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isUserAffiliatedWithDeviceLocked(I)Z

    move-result v7

    if-nez v7, :cond_45

    .line 12642
    const-string v3, "DevicePolicyManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "User id "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v8, " not affiliated."

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v3, v7}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3e
    .catchall {:try_start_6 .. :try_end_3e} :catchall_4f

    .line 12643
    nop

    .line 12647
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 12643
    return v4

    .line 12639
    .end local v6  # "userId":I
    :cond_45
    add-int/lit8 v5, v5, 0x1

    goto :goto_f

    .line 12647
    .end local v2  # "userInfos":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    .end local v5  # "i":I
    :cond_48
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 12648
    nop

    .line 12650
    return v3

    .line 12647
    :catchall_4f
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private canPOorDOCallResetPassword(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;I)Z
    .registers 5
    .param p1, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .param p2, "userId"  # I

    .line 4989
    iget-object v0, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v0}, Landroid/app/admin/DeviceAdminInfo;->getPackageName()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTargetSdk(Ljava/lang/String;I)I

    move-result v0

    const/16 v1, 0x1a

    if-ge v0, v1, :cond_10

    const/4 v0, 0x1

    goto :goto_11

    :cond_10
    const/4 v0, 0x0

    :goto_11
    return v0
.end method

.method private canProfileOwnerAccessDeviceIds(I)Z
    .registers 4
    .param p1, "userId"  # I

    .line 7905
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7906
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p1}, Lcom/android/server/devicepolicy/Owners;->canProfileOwnerAccessDeviceIds(I)Z

    move-result v1

    monitor-exit v0

    return v1

    .line 7907
    :catchall_d
    move-exception v1

    monitor-exit v0
    :try_end_f
    .catchall {:try_start_5 .. :try_end_f} :catchall_d

    throw v1
.end method

.method private canUserBindToDeviceOwnerLocked(I)Z
    .registers 5
    .param p1, "userId"  # I

    .line 13108
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_33

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v0

    if-ne p1, v0, :cond_12

    goto :goto_33

    .line 13113
    :cond_12
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0, p1}, Lcom/android/server/devicepolicy/Owners;->hasProfileOwner(I)Z

    move-result v0

    if-eqz v0, :cond_32

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 13114
    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerPackageName()Ljava/lang/String;

    move-result-object v0

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v2, p1}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerPackage(I)Ljava/lang/String;

    move-result-object v2

    .line 13113
    invoke-static {v0, v2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_2d

    goto :goto_32

    .line 13119
    :cond_2d
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isUserAffiliatedWithDeviceLocked(I)Z

    move-result v0

    return v0

    .line 13115
    :cond_32
    :goto_32
    return v1

    .line 13109
    :cond_33
    :goto_33
    return v1
.end method

.method private canUserHaveUntrustedCredentialReset(I)Z
    .registers 6
    .param p1, "userId"  # I

    .line 4994
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 4996
    :try_start_5
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    iget-object v1, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_f
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_2d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4997
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    const/4 v3, -0x1

    invoke-virtual {p0, v2, v3, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isActiveAdminWithPolicyForUserLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;II)Z

    move-result v3

    if-nez v3, :cond_23

    .line 4999
    goto :goto_f

    .line 5001
    :cond_23
    invoke-direct {p0, v2, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->canPOorDOCallResetPassword(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;I)Z

    move-result v3

    if-eqz v3, :cond_2c

    .line 5002
    const/4 v1, 0x1

    monitor-exit v0

    return v1

    .line 5004
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_2c
    goto :goto_f

    .line 5005
    :cond_2d
    const/4 v1, 0x0

    monitor-exit v0

    return v1

    .line 5006
    :catchall_30
    move-exception v1

    monitor-exit v0
    :try_end_32
    .catchall {:try_start_5 .. :try_end_32} :catchall_30

    throw v1
.end method

.method private canUserUseLockTaskLocked(I)Z
    .registers 6
    .param p1, "userId"  # I

    .line 8756
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isUserAffiliatedWithDeviceLocked(I)Z

    move-result v0

    const/4 v1, 0x1

    if-eqz v0, :cond_8

    .line 8757
    return v1

    .line 8761
    :cond_8
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v0

    const/4 v2, 0x0

    if-eqz v0, :cond_12

    .line 8762
    return v2

    .line 8765
    :cond_12
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwner(I)Landroid/content/ComponentName;

    move-result-object v0

    .line 8766
    .local v0, "profileOwner":Landroid/content/ComponentName;
    if-nez v0, :cond_19

    .line 8767
    return v2

    .line 8771
    :cond_19
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v3

    if-eqz v3, :cond_20

    .line 8772
    return v2

    .line 8775
    :cond_20
    return v1
.end method

.method private checkActiveAdminPrecondition(Landroid/content/ComponentName;Landroid/app/admin/DeviceAdminInfo;Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;)V
    .registers 7
    .param p1, "adminReceiver"  # Landroid/content/ComponentName;
    .param p2, "info"  # Landroid/app/admin/DeviceAdminInfo;
    .param p3, "policy"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    .line 3911
    if-eqz p2, :cond_59

    .line 3914
    invoke-virtual {p2}, Landroid/app/admin/DeviceAdminInfo;->getActivityInfo()Landroid/content/pm/ActivityInfo;

    move-result-object v0

    iget-object v0, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v0}, Landroid/content/pm/ApplicationInfo;->isInternal()Z

    move-result v0

    if-eqz v0, :cond_42

    .line 3918
    invoke-virtual {p2}, Landroid/app/admin/DeviceAdminInfo;->getActivityInfo()Landroid/content/pm/ActivityInfo;

    move-result-object v0

    iget-object v0, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v0}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v0

    if-nez v0, :cond_2b

    .line 3922
    iget-object v0, p3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRemovingAdmins:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_23

    .line 3926
    return-void

    .line 3923
    :cond_23
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Trying to set an admin which is being removed"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3919
    :cond_2b
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Instant apps cannot be device admins: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3915
    :cond_42
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Only apps in internal storage can be active admin: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3912
    :cond_59
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad admin: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private checkCallerIsCurrentUserOrProfile()Z
    .registers 10

    .line 9387
    const-string v0, "DevicePolicyManager"

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    .line 9388
    .local v1, "callingUserId":I
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2

    .line 9391
    .local v2, "token":J
    :try_start_c
    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v4
    :try_end_10
    .catchall {:try_start_c .. :try_end_10} :catchall_5f

    .line 9393
    .local v4, "callingUser":Landroid/content/pm/UserInfo;
    const/4 v5, 0x0

    :try_start_11
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v6

    invoke-interface {v6}, Landroid/app/IActivityManager;->getCurrentUser()Landroid/content/pm/UserInfo;

    move-result-object v6
    :try_end_1b
    .catch Landroid/os/RemoteException; {:try_start_11 .. :try_end_1b} :catch_52
    .catchall {:try_start_11 .. :try_end_1b} :catchall_5f

    .line 9397
    .local v6, "currentUser":Landroid/content/pm/UserInfo;
    nop

    .line 9399
    :try_start_1c
    invoke-virtual {v4}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v7

    if-eqz v7, :cond_34

    iget v7, v4, Landroid/content/pm/UserInfo;->profileGroupId:I

    iget v8, v6, Landroid/content/pm/UserInfo;->id:I

    if-eq v7, v8, :cond_34

    .line 9400
    const-string v7, "Cannot set permitted input methods for managed profile of a user that isn\'t the foreground user."

    invoke-static {v0, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2d
    .catchall {:try_start_1c .. :try_end_2d} :catchall_5f

    .line 9402
    nop

    .line 9410
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9402
    return v5

    .line 9404
    :cond_34
    :try_start_34
    invoke-virtual {v4}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v7

    if-nez v7, :cond_4a

    iget v7, v6, Landroid/content/pm/UserInfo;->id:I

    if-eq v1, v7, :cond_4a

    .line 9405
    const-string v7, "Cannot set permitted input methods of a user that isn\'t the foreground user."

    invoke-static {v0, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_43
    .catchall {:try_start_34 .. :try_end_43} :catchall_5f

    .line 9407
    nop

    .line 9410
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9407
    return v5

    .line 9410
    .end local v4  # "callingUser":Landroid/content/pm/UserInfo;
    .end local v6  # "currentUser":Landroid/content/pm/UserInfo;
    :cond_4a
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9411
    nop

    .line 9412
    const/4 v0, 0x1

    return v0

    .line 9394
    .restart local v4  # "callingUser":Landroid/content/pm/UserInfo;
    :catch_52
    move-exception v6

    .line 9395
    .local v6, "e":Landroid/os/RemoteException;
    :try_start_53
    const-string v7, "Failed to talk to activity managed."

    invoke-static {v0, v7, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_58
    .catchall {:try_start_53 .. :try_end_58} :catchall_5f

    .line 9396
    nop

    .line 9410
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9396
    return v5

    .line 9410
    .end local v4  # "callingUser":Landroid/content/pm/UserInfo;
    .end local v6  # "e":Landroid/os/RemoteException;
    :catchall_5f
    move-exception v0

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0
.end method

.method private checkDeviceOwnerProvisioningPreCondition(I)I
    .registers 6
    .param p1, "deviceOwnerUserId"  # I

    .line 11979
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 11981
    const/4 v1, 0x0

    const/4 v2, 0x0

    const/4 v3, 0x1

    :try_start_8
    invoke-direct {p0, v1, p1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkDeviceOwnerProvisioningPreConditionLocked(Landroid/content/ComponentName;IZZ)I

    move-result v1

    monitor-exit v0

    return v1

    .line 11984
    :catchall_e
    move-exception v1

    monitor-exit v0
    :try_end_10
    .catchall {:try_start_8 .. :try_end_10} :catchall_e

    throw v1
.end method

.method private checkDeviceOwnerProvisioningPreConditionLocked(Landroid/content/ComponentName;IZZ)I
    .registers 8
    .param p1, "owner"  # Landroid/content/ComponentName;
    .param p2, "deviceOwnerUserId"  # I
    .param p3, "isAdb"  # Z
    .param p4, "hasIncompatibleAccountsOrNonAdb"  # Z

    .line 11934
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v0

    const/4 v1, 0x1

    if-eqz v0, :cond_a

    .line 11935
    return v1

    .line 11937
    :cond_a
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0, p2}, Lcom/android/server/devicepolicy/Owners;->hasProfileOwner(I)Z

    move-result v0

    if-eqz v0, :cond_14

    .line 11938
    const/4 v0, 0x2

    return v0

    .line 11940
    :cond_14
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    new-instance v2, Landroid/os/UserHandle;

    invoke-direct {v2, p2}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {v0, v2}, Landroid/os/UserManager;->isUserRunning(Landroid/os/UserHandle;)Z

    move-result v0

    if-nez v0, :cond_23

    .line 11941
    const/4 v0, 0x3

    return v0

    .line 11943
    :cond_23
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIsWatch:Z

    const/4 v2, 0x0

    if-eqz v0, :cond_31

    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasPaired(I)Z

    move-result v0

    if-eqz v0, :cond_31

    .line 11944
    const/16 v0, 0x8

    return v0

    .line 11946
    :cond_31
    if-eqz p3, :cond_54

    .line 11948
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIsWatch:Z

    if-nez v0, :cond_3d

    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasUserSetupCompleted(I)Z

    move-result v0

    if-eqz v0, :cond_53

    .line 11949
    :cond_3d
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userManagerIsSplitSystemUser()Z

    move-result v0

    if-nez v0, :cond_53

    .line 11950
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v0}, Landroid/os/UserManager;->getUserCount()I

    move-result v0

    if-le v0, v1, :cond_4f

    .line 11951
    const/4 v0, 0x5

    return v0

    .line 11953
    :cond_4f
    if-eqz p4, :cond_53

    .line 11954
    const/4 v0, 0x6

    return v0

    .line 11960
    :cond_53
    return v2

    .line 11962
    :cond_54
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userManagerIsSplitSystemUser()Z

    move-result v0

    if-nez v0, :cond_68

    .line 11964
    if-eqz p2, :cond_60

    .line 11965
    const/4 v0, 0x7

    return v0

    .line 11968
    :cond_60
    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasUserSetupCompleted(I)Z

    move-result v0

    if-eqz v0, :cond_68

    .line 11969
    const/4 v0, 0x4

    return v0

    .line 11974
    :cond_68
    return v2
.end method

.method private checkManagedProfileProvisioningPreCondition(Ljava/lang/String;I)I
    .registers 10
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "callingUserId"  # I

    .line 11988
    const-string/jumbo v0, "no_remove_managed_profile"

    const-string/jumbo v1, "no_add_managed_profile"

    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasFeatureManagedUsers()Z

    move-result v2

    if-nez v2, :cond_f

    .line 11989
    const/16 v0, 0x9

    return v0

    .line 11991
    :cond_f
    if-nez p2, :cond_1c

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 11992
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userManagerIsSplitSystemUser()Z

    move-result v2

    if-eqz v2, :cond_1c

    .line 11994
    const/16 v0, 0xe

    return v0

    .line 11996
    :cond_1c
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwner(I)Landroid/content/ComponentName;

    move-result-object v2

    if-eqz v2, :cond_24

    .line 11998
    const/4 v0, 0x2

    return v0

    .line 12001
    :cond_24
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2

    .line 12003
    .local v2, "ident":J
    :try_start_2a
    invoke-static {p2}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v4

    .line 12004
    .local v4, "callingUserHandle":Landroid/os/UserHandle;
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getOwnerComponent(Ljava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v5

    .line 12005
    .local v5, "ownerAdmin":Landroid/content/ComponentName;
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v6, v1, v4}, Landroid/os/UserManager;->hasUserRestriction(Ljava/lang/String;Landroid/os/UserHandle;)Z

    move-result v6

    if-eqz v6, :cond_4a

    .line 12008
    if-eqz v5, :cond_42

    invoke-direct {p0, v5, v1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdminAffectedByRestriction(Landroid/content/ComponentName;Ljava/lang/String;I)Z

    move-result v1
    :try_end_40
    .catchall {:try_start_2a .. :try_end_40} :catchall_74

    if-eqz v1, :cond_4a

    .line 12010
    :cond_42
    const/16 v0, 0xf

    .line 12027
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 12010
    return v0

    .line 12013
    :cond_4a
    const/4 v1, 0x1

    .line 12014
    .local v1, "canRemoveProfile":Z
    :try_start_4b
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v6, v0, v4}, Landroid/os/UserManager;->hasUserRestriction(Ljava/lang/String;Landroid/os/UserHandle;)Z

    move-result v6

    if-eqz v6, :cond_5c

    .line 12017
    if-eqz v5, :cond_5b

    invoke-direct {p0, v5, v0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdminAffectedByRestriction(Landroid/content/ComponentName;Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_5c

    .line 12020
    :cond_5b
    const/4 v1, 0x0

    .line 12023
    :cond_5c
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v0, p2, v1}, Landroid/os/UserManager;->canAddMoreManagedProfiles(IZ)Z

    move-result v0
    :try_end_62
    .catchall {:try_start_4b .. :try_end_62} :catchall_74

    if-nez v0, :cond_6c

    .line 12024
    const/16 v0, 0xb

    .line 12027
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 12024
    return v0

    .line 12027
    .end local v1  # "canRemoveProfile":Z
    .end local v4  # "callingUserHandle":Landroid/os/UserHandle;
    .end local v5  # "ownerAdmin":Landroid/content/ComponentName;
    :cond_6c
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 12028
    nop

    .line 12029
    const/4 v0, 0x0

    return v0

    .line 12027
    :catchall_74
    move-exception v0

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0
.end method

.method private checkManagedShareableDeviceProvisioningPreCondition(I)I
    .registers 3
    .param p1, "callingUserId"  # I

    .line 12079
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userManagerIsSplitSystemUser()Z

    move-result v0

    if-nez v0, :cond_b

    .line 12081
    const/16 v0, 0xc

    return v0

    .line 12083
    :cond_b
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkDeviceOwnerProvisioningPreCondition(I)I

    move-result v0

    return v0
.end method

.method private checkManagedUserProvisioningPreCondition(I)I
    .registers 4
    .param p1, "callingUserId"  # I

    .line 12058
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasFeatureManagedUsers()Z

    move-result v0

    if-nez v0, :cond_9

    .line 12059
    const/16 v0, 0x9

    return v0

    .line 12061
    :cond_9
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userManagerIsSplitSystemUser()Z

    move-result v0

    if-nez v0, :cond_14

    .line 12063
    const/16 v0, 0xc

    return v0

    .line 12065
    :cond_14
    if-nez p1, :cond_19

    .line 12067
    const/16 v0, 0xa

    return v0

    .line 12069
    :cond_19
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasUserSetupCompleted(I)Z

    move-result v0

    if-eqz v0, :cond_21

    .line 12070
    const/4 v0, 0x4

    return v0

    .line 12072
    :cond_21
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIsWatch:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_2f

    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasPaired(I)Z

    move-result v0

    if-eqz v0, :cond_2f

    .line 12073
    const/16 v0, 0x8

    return v0

    .line 12075
    :cond_2f
    return v1
.end method

.method private checkPackagesInPermittedListOrSystem(Ljava/util/List;Ljava/util/List;I)Z
    .registers 14
    .param p3, "userIdToCheck"  # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;I)Z"
        }
    .end annotation

    .line 9194
    .local p1, "enabledPackages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .local p2, "permittedList":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 9198
    .local v0, "id":J
    :try_start_6
    invoke-direct {p0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v2

    .line 9199
    .local v2, "user":Landroid/content/pm/UserInfo;
    invoke-virtual {v2}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v3

    if-eqz v3, :cond_13

    .line 9200
    iget v3, v2, Landroid/content/pm/UserInfo;->profileGroupId:I

    move p3, v3

    .line 9203
    :cond_13
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_17
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    const/4 v5, 0x1

    if-eqz v4, :cond_4f

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;
    :try_end_24
    .catchall {:try_start_6 .. :try_end_24} :catchall_56

    .line 9204
    .local v4, "enabledPackage":Ljava/lang/String;
    const/4 v6, 0x0

    .line 9206
    .local v6, "systemService":Z
    const/4 v7, 0x0

    :try_start_26
    iget-object v8, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const/16 v9, 0x2000

    invoke-interface {v8, v4, v9, p3}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v8

    .line 9209
    .local v8, "applicationInfo":Landroid/content/pm/ApplicationInfo;
    iget v9, v8, Landroid/content/pm/ApplicationInfo;->flags:I
    :try_end_30
    .catch Landroid/os/RemoteException; {:try_start_26 .. :try_end_30} :catch_37
    .catchall {:try_start_26 .. :try_end_30} :catchall_56

    and-int/2addr v9, v5

    if-eqz v9, :cond_34

    goto :goto_35

    :cond_34
    move v5, v7

    :goto_35
    move v6, v5

    .line 9212
    .end local v8  # "applicationInfo":Landroid/content/pm/ApplicationInfo;
    goto :goto_3f

    .line 9210
    :catch_37
    move-exception v5

    .line 9211
    .local v5, "e":Landroid/os/RemoteException;
    :try_start_38
    const-string v8, "DevicePolicyManager"

    const-string v9, "Can\'t talk to package managed"

    invoke-static {v8, v9, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9213
    .end local v5  # "e":Landroid/os/RemoteException;
    :goto_3f
    if-nez v6, :cond_4e

    invoke-interface {p2, v4}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v5
    :try_end_45
    .catchall {:try_start_38 .. :try_end_45} :catchall_56

    if-nez v5, :cond_4e

    .line 9214
    nop

    .line 9218
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9214
    return v7

    .line 9216
    .end local v4  # "enabledPackage":Ljava/lang/String;
    .end local v6  # "systemService":Z
    :cond_4e
    goto :goto_17

    .line 9218
    .end local v2  # "user":Landroid/content/pm/UserInfo;
    :cond_4f
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9219
    nop

    .line 9220
    return v5

    .line 9218
    :catchall_56
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private checkProvisioningPreConditionSkipPermission(Ljava/lang/String;Ljava/lang/String;)I
    .registers 9
    .param p1, "action"  # Ljava/lang/String;
    .param p2, "packageName"  # Ljava/lang/String;

    .line 11908
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_7

    .line 11909
    const/16 v0, 0xd

    return v0

    .line 11912
    :cond_7
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 11913
    .local v0, "callingUserId":I
    if-eqz p1, :cond_5e

    .line 11914
    const/4 v1, -0x1

    invoke-virtual {p1}, Ljava/lang/String;->hashCode()I

    move-result v2

    const/4 v3, 0x3

    const/4 v4, 0x2

    const/4 v5, 0x1

    sparse-switch v2, :sswitch_data_76

    :cond_1a
    goto :goto_42

    :sswitch_1b
    const-string v2, "android.app.action.PROVISION_MANAGED_SHAREABLE_DEVICE"

    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1a

    move v1, v3

    goto :goto_42

    :sswitch_25
    const-string v2, "android.app.action.PROVISION_MANAGED_PROFILE"

    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1a

    const/4 v1, 0x0

    goto :goto_42

    :sswitch_2f
    const-string v2, "android.app.action.PROVISION_MANAGED_USER"

    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1a

    move v1, v4

    goto :goto_42

    :sswitch_39
    const-string v2, "android.app.action.PROVISION_MANAGED_DEVICE"

    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1a

    move v1, v5

    :goto_42
    if-eqz v1, :cond_59

    if-eq v1, v5, :cond_54

    if-eq v1, v4, :cond_4f

    if-ne v1, v3, :cond_5e

    .line 11922
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkManagedShareableDeviceProvisioningPreCondition(I)I

    move-result v1

    return v1

    .line 11920
    :cond_4f
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkManagedUserProvisioningPreCondition(I)I

    move-result v1

    return v1

    .line 11918
    :cond_54
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkDeviceOwnerProvisioningPreCondition(I)I

    move-result v1

    return v1

    .line 11916
    :cond_59
    invoke-direct {p0, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkManagedProfileProvisioningPreCondition(Ljava/lang/String;I)I

    move-result v1

    return v1

    .line 11925
    :cond_5e
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown provisioning action "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    nop

    :sswitch_data_76
    .sparse-switch
        -0x36de2734 -> :sswitch_39
        -0x1ea9303f -> :sswitch_2f
        -0x1450e22d -> :sswitch_25
        0x25a9feb2 -> :sswitch_1b
    .end sparse-switch
.end method

.method private checkUserProvisioningStateTransition(II)V
    .registers 6
    .param p1, "currentState"  # I
    .param p2, "newState"  # I

    .line 8323
    if-eqz p1, :cond_12

    const/4 v0, 0x1

    if-eq p1, v0, :cond_e

    const/4 v0, 0x2

    if-eq p1, v0, :cond_e

    const/4 v0, 0x4

    if-ne p1, v0, :cond_15

    .line 8341
    if-nez p2, :cond_15

    .line 8342
    return-void

    .line 8333
    :cond_e
    const/4 v0, 0x3

    if-ne p2, v0, :cond_15

    .line 8334
    return-void

    .line 8326
    :cond_12
    if-eqz p2, :cond_15

    .line 8327
    return-void

    .line 8351
    :cond_15
    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Cannot move to user provisioning state ["

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, "] from state ["

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, "]"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private cleanUpOldUsers()V
    .registers 8

    .line 3689
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 3690
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerKeys()Ljava/util/Set;

    move-result-object v1

    .line 3691
    .local v1, "usersWithProfileOwners":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    new-instance v2, Landroid/util/ArraySet;

    invoke-direct {v2}, Landroid/util/ArraySet;-><init>()V

    .line 3692
    .local v2, "usersWithData":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_11
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserData:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-ge v3, v4, :cond_29

    .line 3693
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserData:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v2, v4}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 3692
    add-int/lit8 v3, v3, 0x1

    goto :goto_11

    .line 3695
    .end local v3  # "i":I
    :cond_29
    monitor-exit v0
    :try_end_2a
    .catchall {:try_start_5 .. :try_end_2a} :catchall_6e

    .line 3696
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v0}, Landroid/os/UserManager;->getUsers()Ljava/util/List;

    move-result-object v0

    .line 3698
    .local v0, "allUsers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    new-instance v3, Landroid/util/ArraySet;

    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    .line 3699
    .local v3, "deletedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    invoke-interface {v3, v1}, Ljava/util/Set;->addAll(Ljava/util/Collection;)Z

    .line 3700
    invoke-interface {v3, v2}, Ljava/util/Set;->addAll(Ljava/util/Collection;)Z

    .line 3701
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_3f
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_55

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/content/pm/UserInfo;

    .line 3702
    .local v5, "userInfo":Landroid/content/pm/UserInfo;
    iget v6, v5, Landroid/content/pm/UserInfo;->id:I

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    invoke-interface {v3, v6}, Ljava/util/Set;->remove(Ljava/lang/Object;)Z

    .line 3703
    .end local v5  # "userInfo":Landroid/content/pm/UserInfo;
    goto :goto_3f

    .line 3704
    :cond_55
    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_59
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_6d

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Integer;

    .line 3705
    .local v5, "userId":Ljava/lang/Integer;
    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    move-result v6

    invoke-virtual {p0, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeUserData(I)V

    .line 3706
    .end local v5  # "userId":Ljava/lang/Integer;
    goto :goto_59

    .line 3707
    :cond_6d
    return-void

    .line 3695
    .end local v0  # "allUsers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    .end local v1  # "usersWithProfileOwners":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    .end local v2  # "usersWithData":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    .end local v3  # "deletedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    :catchall_6e
    move-exception v1

    :try_start_6f
    monitor-exit v0
    :try_end_70
    .catchall {:try_start_6f .. :try_end_70} :catchall_6e

    throw v1
.end method

.method private clearDeviceOwnerLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;I)V
    .registers 8
    .param p1, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .param p2, "userId"  # I

    .line 8031
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mDeviceAdminServiceController:Lcom/android/server/devicepolicy/DeviceAdminServiceController;

    const-string v1, "clear-device-owner"

    invoke-virtual {v0, p2, v1}, Lcom/android/server/devicepolicy/DeviceAdminServiceController;->stopServiceForOwner(ILjava/lang/String;)V

    .line 8033
    const/4 v0, 0x0

    if-eqz p1, :cond_1f

    .line 8034
    iput-boolean v0, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCamera:Z

    .line 8035
    const/4 v1, 0x0

    iput-object v1, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->userRestrictions:Landroid/os/Bundle;

    .line 8036
    iget-object v1, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->defaultEnabledRestrictionsAlreadySet:Ljava/util/Set;

    invoke-interface {v1}, Ljava/util/Set;->clear()V

    .line 8037
    iput-boolean v0, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->forceEphemeralUsers:Z

    .line 8038
    iput-boolean v0, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->isNetworkLoggingEnabled:Z

    .line 8039
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    iget-boolean v2, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->forceEphemeralUsers:Z

    invoke-virtual {v1, v2}, Landroid/os/UserManagerInternal;->setForceEphemeralUsers(Z)V

    .line 8041
    :cond_1f
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 8042
    .local v1, "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iput-boolean v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mCurrentInputMethodSet:Z

    .line 8043
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 8044
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 8045
    .local v2, "systemPolicyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    const-wide/16 v3, -0x1

    iput-wide v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastSecurityLogRetrievalTime:J

    .line 8046
    iput-wide v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastBugReportRequestTime:J

    .line 8047
    iput-wide v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastNetworkLogsRetrievalTime:J

    .line 8048
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 8049
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearUserPoliciesLocked(I)V

    .line 8050
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearOverrideApnUnchecked()V

    .line 8052
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/Owners;->clearDeviceOwner()V

    .line 8053
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/Owners;->writeDeviceOwner()V

    .line 8054
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateDeviceOwnerLocked()V

    .line 8056
    invoke-static {p2}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v3

    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearDeviceOwnerUserRestrictionLocked(Landroid/os/UserHandle;)V

    .line 8057
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogSetLoggingEnabledProperty(Z)V

    .line 8058
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSecurityLogMonitor:Lcom/android/server/devicepolicy/SecurityLogMonitor;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/SecurityLogMonitor;->stop()V

    .line 8059
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setNetworkLoggingActiveInternal(Z)V

    .line 8060
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->deleteTransferOwnershipBundleLocked(I)V

    .line 8063
    :try_start_61
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIBackupManager()Landroid/app/backup/IBackupManager;

    move-result-object v3

    if-eqz v3, :cond_73

    .line 8065
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIBackupManager()Landroid/app/backup/IBackupManager;

    move-result-object v3

    const/4 v4, 0x1

    invoke-interface {v3, v0, v4}, Landroid/app/backup/IBackupManager;->setBackupServiceActive(IZ)V
    :try_end_73
    .catch Landroid/os/RemoteException; {:try_start_61 .. :try_end_73} :catch_75

    .line 8069
    :cond_73
    nop

    .line 8070
    return-void

    .line 8067
    :catch_75
    move-exception v0

    .line 8068
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v3, Ljava/lang/IllegalStateException;

    const-string v4, "Failed reactivating backup service."

    invoke-direct {v3, v4, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v3
.end method

.method private clearDeviceOwnerUserRestrictionLocked(Landroid/os/UserHandle;)V
    .registers 5
    .param p1, "userHandle"  # Landroid/os/UserHandle;

    .line 4041
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    const-string/jumbo v1, "no_add_user"

    invoke-virtual {v0, v1, p1}, Landroid/os/UserManager;->hasUserRestriction(Ljava/lang/String;Landroid/os/UserHandle;)Z

    move-result v0

    if-eqz v0, :cond_11

    .line 4042
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2, p1}, Landroid/os/UserManager;->setUserRestriction(Ljava/lang/String;ZLandroid/os/UserHandle;)V

    .line 4044
    :cond_11
    return-void
.end method

.method private clearOverrideApnUnchecked()V
    .registers 4

    .line 8023
    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setOverrideApnsEnabledUnchecked(Z)V

    .line 8024
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getOverrideApnsUnchecked()Ljava/util/List;

    move-result-object v0

    .line 8025
    .local v0, "apns":Ljava/util/List;, "Ljava/util/List<Landroid/telephony/data/ApnSetting;>;"
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_9
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1f

    .line 8026
    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/telephony/data/ApnSetting;

    invoke-virtual {v2}, Landroid/telephony/data/ApnSetting;->getId()I

    move-result v2

    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeOverrideApnUnchecked(I)Z

    .line 8025
    add-int/lit8 v1, v1, 0x1

    goto :goto_9

    .line 8028
    .end local v1  # "i":I
    :cond_1f
    return-void
.end method

.method private clearUserPoliciesLocked(I)V
    .registers 6
    .param p1, "userId"  # I

    .line 8220
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    .line 8221
    .local v0, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    const/4 v1, 0x0

    iput v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPermissionPolicy:I

    .line 8223
    iget-object v2, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v2}, Landroid/util/ArrayMap;->clear()V

    .line 8224
    iput-boolean v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mStatusBarDisabled:Z

    .line 8225
    iput v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserProvisioningState:I

    .line 8226
    iget-object v2, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAffiliationIds:Ljava/util/Set;

    invoke-interface {v2}, Ljava/util/Set;->clear()V

    .line 8227
    iget-object v2, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskPackages:Ljava/util/List;

    invoke-interface {v2}, Ljava/util/List;->clear()V

    .line 8228
    iget-object v2, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskPackages:Ljava/util/List;

    invoke-direct {p0, v2, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateLockTaskPackagesLocked(Ljava/util/List;I)V

    .line 8229
    iput v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskFeatures:I

    .line 8230
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 8233
    :try_start_24
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const/4 v3, 0x4

    invoke-interface {v2, v3, v1, p1}, Landroid/content/pm/IPackageManager;->updatePermissionFlagsForAllApps(III)V

    .line 8236
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushUserRestrictions(I)V
    :try_end_2d
    .catch Landroid/os/RemoteException; {:try_start_24 .. :try_end_2d} :catch_2e

    .line 8239
    goto :goto_2f

    .line 8237
    :catch_2e
    move-exception v1

    .line 8240
    :goto_2f
    return-void
.end method

.method private clearWipeProfileNotification()V
    .registers 3

    .line 6619
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getNotificationManager()Landroid/app/NotificationManager;

    move-result-object v0

    const/16 v1, 0x3e9

    invoke-virtual {v0, v1}, Landroid/app/NotificationManager;->cancel(I)V

    .line 6620
    return-void
.end method

.method private createCrossUserServiceIntent(Landroid/content/Intent;Ljava/lang/String;I)Landroid/content/Intent;
    .registers 8
    .param p1, "rawIntent"  # Landroid/content/Intent;
    .param p2, "expectedPackageName"  # Ljava/lang/String;
    .param p3, "targetUserId"  # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;,
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 13438
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 13440
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;

    move-result-object v1

    .line 13438
    const/4 v2, 0x0

    invoke-interface {v0, p1, v1, v2, p3}, Landroid/content/pm/IPackageManager;->resolveService(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ResolveInfo;

    move-result-object v0

    .line 13443
    .local v0, "info":Landroid/content/pm/ResolveInfo;
    if-eqz v0, :cond_5e

    iget-object v1, v0, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;

    if-nez v1, :cond_18

    goto :goto_5e

    .line 13448
    :cond_18
    iget-object v1, v0, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;

    iget-object v1, v1, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_47

    .line 13452
    iget-object v1, v0, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;

    iget-boolean v1, v1, Landroid/content/pm/ServiceInfo;->exported:Z

    if-eqz v1, :cond_3d

    iget-object v1, v0, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;

    iget-object v1, v1, Landroid/content/pm/ServiceInfo;->permission:Ljava/lang/String;

    const-string v2, "android.permission.BIND_DEVICE_ADMIN"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_35

    goto :goto_3d

    .line 13453
    :cond_35
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Service must be protected by BIND_DEVICE_ADMIN permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 13459
    :cond_3d
    :goto_3d
    iget-object v1, v0, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;

    invoke-virtual {v1}, Landroid/content/pm/ServiceInfo;->getComponentName()Landroid/content/ComponentName;

    move-result-object v1

    invoke-virtual {p1, v1}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 13460
    return-object p1

    .line 13449
    :cond_47
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Only allow to bind service in "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 13444
    :cond_5e
    :goto_5e
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Fail to look up the service: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " or user "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " is not running"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "DevicePolicyManager"

    invoke-static {v2, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 13446
    const/4 v1, 0x0

    return-object v1
.end method

.method private createShowAdminSupportIntent(Landroid/content/ComponentName;I)Landroid/content/Intent;
    .registers 5
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "userId"  # I

    .line 11432
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.settings.SHOW_ADMIN_SUPPORT_DETAILS"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 11433
    .local v0, "intent":Landroid/content/Intent;
    const-string v1, "android.intent.extra.USER_ID"

    invoke-virtual {v0, v1, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 11434
    const-string v1, "android.app.extra.DEVICE_ADMIN"

    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    .line 11435
    const/high16 v1, 0x10000000

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 11436
    return-object v0
.end method

.method private deleteTransferOwnershipMetadataFileLocked()V
    .registers 2

    .line 13884
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mTransferOwnershipMetadataManager:Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager;->deleteMetadataFile()V

    .line 13885
    return-void
.end method

.method private deviceHasKeyguard()Z
    .registers 5

    .line 14372
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v0}, Landroid/os/UserManager;->getUsers()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_a
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_23

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/UserInfo;

    .line 14373
    .local v1, "userInfo":Landroid/content/pm/UserInfo;
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    iget v3, v1, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {v2, v3}, Lcom/android/internal/widget/LockPatternUtils;->isSecure(I)Z

    move-result v2

    if-eqz v2, :cond_22

    .line 14374
    const/4 v0, 0x1

    return v0

    .line 14376
    .end local v1  # "userInfo":Landroid/content/pm/UserInfo;
    :cond_22
    goto :goto_a

    .line 14377
    :cond_23
    const/4 v0, 0x0

    return v0
.end method

.method private discardDeviceWideLogsLocked()V
    .registers 2
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = {
            "getLockObject()"
        }
    .end annotation

    .line 13313
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSecurityLogMonitor:Lcom/android/server/devicepolicy/SecurityLogMonitor;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/SecurityLogMonitor;->discardLogs()V

    .line 13314
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    if-eqz v0, :cond_c

    .line 13315
    invoke-virtual {v0}, Lcom/android/server/devicepolicy/NetworkLogger;->discardLogs()V

    .line 13320
    :cond_c
    return-void
.end method

.method private enableIfNecessary(Ljava/lang/String;I)V
    .registers 12
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userId"  # I

    .line 8839
    :try_start_0
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const v1, 0x8000

    invoke-interface {v0, p1, v1, p2}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0

    .line 8841
    .local v0, "ai":Landroid/content/pm/ApplicationInfo;
    iget v1, v0, Landroid/content/pm/ApplicationInfo;->enabledSetting:I

    const/4 v2, 0x4

    if-ne v1, v2, :cond_19

    .line 8843
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const/4 v5, 0x0

    const/4 v6, 0x1

    const-string v8, "DevicePolicyManager"

    move-object v4, p1

    move v7, p2

    invoke-interface/range {v3 .. v8}, Landroid/content/pm/IPackageManager;->setApplicationEnabledSetting(Ljava/lang/String;IIILjava/lang/String;)V
    :try_end_19
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_19} :catch_1a

    .line 8848
    .end local v0  # "ai":Landroid/content/pm/ApplicationInfo;
    :cond_19
    goto :goto_1b

    .line 8847
    :catch_1a
    move-exception v0

    .line 8849
    :goto_1b
    return-void
.end method

.method private enforceCallerSystemUserHandle()V
    .registers 5

    .line 12779
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    .line 12780
    .local v0, "callingUid":I
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    .line 12781
    .local v1, "userId":I
    if-nez v1, :cond_d

    .line 12784
    return-void

    .line 12782
    :cond_d
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Caller has to be in user 0"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method private enforceCanCallLockTaskLocked(Landroid/content/ComponentName;)V
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 8779
    const/4 v0, -0x1

    invoke-virtual {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 8780
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 8781
    .local v0, "userId":I
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->canUserUseLockTaskLocked(I)Z

    move-result v1

    if-eqz v1, :cond_11

    .line 8784
    return-void

    .line 8782
    :cond_11
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "User "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " is not allowed to use lock task"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method private enforceCanManageDeviceAdmin()V
    .registers 4

    .line 12769
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_DEVICE_ADMINS"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 12771
    return-void
.end method

.method private enforceCanManageProfileAndDeviceOwners()V
    .registers 4

    .line 12774
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 12776
    return-void
.end method

.method private enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V
    .registers 11
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "reqPolicy"  # I
    .param p4, "scope"  # Ljava/lang/String;

    .line 6317
    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move-object v4, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScopeOrCheckPermission(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

    .line 6318
    return-void
.end method

.method private enforceCanManageScopeOrCheckPermission(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "reqPolicy"  # I
    .param p4, "scope"  # Ljava/lang/String;
    .param p5, "permission"  # Ljava/lang/String;

    .line 6329
    if-eqz p1, :cond_f

    .line 6330
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 6331
    :try_start_7
    invoke-virtual {p0, p1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 6332
    monitor-exit v0

    goto :goto_24

    :catchall_c
    move-exception v1

    monitor-exit v0
    :try_end_e
    .catchall {:try_start_7 .. :try_end_e} :catchall_c

    throw v1

    .line 6336
    :cond_f
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    invoke-direct {p0, p2, v0, p4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerDelegate(Ljava/lang/String;ILjava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1c

    .line 6337
    return-void

    .line 6339
    :cond_1c
    if-eqz p5, :cond_25

    .line 6343
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v1, 0x0

    invoke-virtual {v0, p5, v1}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6346
    :goto_24
    return-void

    .line 6340
    :cond_25
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Caller with uid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " is not a delegate of scope "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private enforceCanSetDeviceOwnerLocked(Landroid/content/ComponentName;IZ)V
    .registers 8
    .param p1, "owner"  # Landroid/content/ComponentName;
    .param p2, "userId"  # I
    .param p3, "hasIncompatibleAccountsOrNonAdb"  # Z

    .line 8621
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdb()Z

    move-result v0

    if-nez v0, :cond_9

    .line 8622
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageProfileAndDeviceOwners()V

    .line 8625
    :cond_9
    nop

    .line 8626
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdb()Z

    move-result v0

    .line 8625
    invoke-direct {p0, p1, p2, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkDeviceOwnerProvisioningPreConditionLocked(Landroid/content/ComponentName;IZZ)I

    move-result v0

    .line 8627
    .local v0, "code":I
    packed-switch v0, :pswitch_data_7c

    .line 8653
    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unexpected @ProvisioningPreCondition "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8650
    :pswitch_2c  #0x8
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Not allowed to set the device owner because this device has already paired"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8639
    :pswitch_34  #0x7
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "User is not system user"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8647
    :pswitch_3c  #0x6
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Not allowed to set the device owner because there are already some accounts on the device"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8644
    :pswitch_44  #0x5
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Not allowed to set the device owner because there are already several users on the device"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8641
    :pswitch_4c  #0x4
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Cannot set the device owner if the device is already set-up"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8637
    :pswitch_54  #0x3
    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "User not running: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8634
    :pswitch_6b  #0x2
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Trying to set the device owner, but the user already has a profile owner."

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8631
    :pswitch_73  #0x1
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Trying to set the device owner, but device owner is already set."

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8629
    :pswitch_7b  #0x0
    return-void

    :pswitch_data_7c
    .packed-switch 0x0
        :pswitch_7b  #00000000
        :pswitch_73  #00000001
        :pswitch_6b  #00000002
        :pswitch_54  #00000003
        :pswitch_4c  #00000004
        :pswitch_44  #00000005
        :pswitch_3c  #00000006
        :pswitch_34  #00000007
        :pswitch_2c  #00000008
    .end packed-switch
.end method

.method private enforceCanSetProfileOwnerLocked(Landroid/content/ComponentName;IZ)V
    .registers 10
    .param p1, "owner"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "hasIncompatibleAccountsOrNonAdb"  # Z

    .line 8562
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v0

    .line 8563
    .local v0, "info":Landroid/content/pm/UserInfo;
    if-eqz v0, :cond_b1

    .line 8568
    invoke-virtual {v0}, Landroid/content/pm/UserInfo;->isGuest()Z

    move-result v1

    if-nez v1, :cond_a9

    .line 8571
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p2}, Lcom/android/server/devicepolicy/Owners;->hasProfileOwner(I)Z

    move-result v1

    if-nez v1, :cond_a1

    .line 8575
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v1

    if-eqz v1, :cond_2d

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v1

    if-eq v1, p2, :cond_25

    goto :goto_2d

    .line 8576
    :cond_25
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Trying to set the profile owner, but the user already has a device owner."

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8579
    :cond_2d
    :goto_2d
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdb()Z

    move-result v1

    if-eqz v1, :cond_48

    .line 8580
    iget-boolean v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIsWatch:Z

    if-nez v1, :cond_3d

    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasUserSetupCompleted(I)Z

    move-result v1

    if-eqz v1, :cond_3f

    :cond_3d
    if-nez p3, :cond_40

    .line 8585
    :cond_3f
    return-void

    .line 8582
    :cond_40
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Not allowed to set the profile owner because there are already some accounts on the profile"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8587
    :cond_48
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageProfileAndDeviceOwners()V

    .line 8589
    iget-boolean v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIsWatch:Z

    if-nez v1, :cond_55

    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasUserSetupCompleted(I)Z

    move-result v1

    if-eqz v1, :cond_98

    .line 8590
    :cond_55
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v1

    if-eqz v1, :cond_99

    .line 8595
    iget-boolean v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIsWatch:Z

    if-nez v1, :cond_98

    .line 8597
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x104015e

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v1

    .line 8600
    .local v1, "supervisor":Ljava/lang/String;
    if-eqz v1, :cond_90

    .line 8605
    invoke-static {v1}, Landroid/content/ComponentName;->unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName;

    move-result-object v2

    .line 8607
    .local v2, "supervisorComponent":Landroid/content/ComponentName;
    invoke-virtual {p1, v2}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_79

    goto :goto_98

    .line 8608
    :cond_79
    new-instance v3, Ljava/lang/IllegalStateException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unable to set non-default profile owner post-setup "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 8601
    .end local v2  # "supervisorComponent":Landroid/content/ComponentName;
    :cond_90
    new-instance v2, Ljava/lang/IllegalStateException;

    const-string v3, "Unable to set profile owner post-setup, nodefault supervisor profile owner defined"

    invoke-direct {v2, v3}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 8613
    .end local v1  # "supervisor":Ljava/lang/String;
    :cond_98
    :goto_98
    return-void

    .line 8591
    :cond_99
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Cannot set the profile owner on a user which is already set-up"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8572
    :cond_a1
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Trying to set the profile owner, but profile owner is already set."

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8569
    :cond_a9
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Cannot set a profile owner on a guest"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8565
    :cond_b1
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Attempted to set profile owner for invalid userId: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method private enforceCrossUsersPermission(I)V
    .registers 3
    .param p1, "userHandle"  # I

    .line 8685
    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    invoke-direct {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceSystemUserOrPermissionIfCrossUser(ILjava/lang/String;)V

    .line 8687
    return-void
.end method

.method private enforceDeviceOwner(Landroid/content/ComponentName;)V
    .registers 4
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 5531
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 5532
    const/4 v1, -0x2

    :try_start_6
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 5533
    monitor-exit v0

    .line 5534
    return-void

    .line 5533
    :catchall_b
    move-exception v1

    monitor-exit v0
    :try_end_d
    .catchall {:try_start_6 .. :try_end_d} :catchall_b

    throw v1
.end method

.method private enforceDeviceOwnerOrManageUsers()V
    .registers 5

    .line 8719
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 8720
    const/4 v1, 0x0

    const/4 v2, -0x2

    :try_start_7
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 8721
    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v3

    .line 8720
    invoke-direct {p0, v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminWithPolicyForUidLocked(Landroid/content/ComponentName;II)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    if-eqz v1, :cond_15

    .line 8722
    monitor-exit v0

    return-void

    .line 8724
    :cond_15
    monitor-exit v0
    :try_end_16
    .catchall {:try_start_7 .. :try_end_16} :catchall_1a

    .line 8725
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 8726
    return-void

    .line 8724
    :catchall_1a
    move-exception v1

    :try_start_1b
    monitor-exit v0
    :try_end_1c
    .catchall {:try_start_1b .. :try_end_1c} :catchall_1a

    throw v1
.end method

.method private enforceFullCrossUsersPermission(I)V
    .registers 3
    .param p1, "userHandle"  # I

    .line 8680
    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-direct {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceSystemUserOrPermissionIfCrossUser(ILjava/lang/String;)V

    .line 8682
    return-void
.end method

.method private enforceManageUsers()V
    .registers 5

    .line 8673
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    .line 8674
    .local v0, "callingUid":I
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v1

    if-nez v1, :cond_16

    if-eqz v0, :cond_16

    .line 8675
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v2, 0x0

    const-string v3, "android.permission.MANAGE_USERS"

    invoke-virtual {v1, v3, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8677
    :cond_16
    return-void
.end method

.method private enforceManagedProfile(ILjava/lang/String;)V
    .registers 6
    .param p1, "userHandle"  # I
    .param p2, "message"  # Ljava/lang/String;

    .line 8707
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 8710
    return-void

    .line 8708
    :cond_7
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "You can not "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " outside a managed profile."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private enforceNotManagedProfile(ILjava/lang/String;)V
    .registers 6
    .param p1, "userHandle"  # I
    .param p2, "message"  # Ljava/lang/String;

    .line 8713
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v0

    if-nez v0, :cond_7

    .line 8716
    return-void

    .line 8714
    :cond_7
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "You can not "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " for a managed profile."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V
    .registers 4
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 5537
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 5538
    const/4 v1, -0x1

    :try_start_6
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 5539
    monitor-exit v0

    .line 5540
    return-void

    .line 5539
    :catchall_b
    move-exception v1

    monitor-exit v0
    :try_end_d
    .catchall {:try_start_6 .. :try_end_d} :catchall_b

    throw v1
.end method

.method private enforceProfileOwnerOrFullCrossUsersPermission(I)V
    .registers 6
    .param p1, "userId"  # I

    .line 8741
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    if-ne p1, v0, :cond_22

    .line 8742
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 8743
    const/4 v1, 0x0

    const/4 v2, -0x1

    :try_start_f
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 8744
    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v3

    .line 8743
    invoke-direct {p0, v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminWithPolicyForUidLocked(Landroid/content/ComponentName;II)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    if-eqz v1, :cond_1d

    .line 8747
    monitor-exit v0

    return-void

    .line 8749
    :cond_1d
    monitor-exit v0

    goto :goto_22

    :catchall_1f
    move-exception v1

    monitor-exit v0
    :try_end_21
    .catchall {:try_start_f .. :try_end_21} :catchall_1f

    throw v1

    .line 8752
    :cond_22
    :goto_22
    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceSystemUserOrPermission(Ljava/lang/String;)V

    .line 8753
    return-void
.end method

.method private enforceProfileOwnerOrSystemUser()V
    .registers 5

    .line 8729
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 8730
    const/4 v1, 0x0

    const/4 v2, -0x1

    :try_start_7
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 8731
    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v3

    .line 8730
    invoke-direct {p0, v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminWithPolicyForUidLocked(Landroid/content/ComponentName;II)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    if-eqz v1, :cond_15

    .line 8733
    monitor-exit v0

    return-void

    .line 8735
    :cond_15
    monitor-exit v0
    :try_end_16
    .catchall {:try_start_7 .. :try_end_16} :catchall_20

    .line 8736
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    const-string v1, "Only profile owner, device owner and system may call this method."

    invoke-static {v0, v1}, Lcom/android/internal/util/Preconditions;->checkState(ZLjava/lang/String;)V

    .line 8738
    return-void

    .line 8735
    :catchall_20
    move-exception v1

    :try_start_21
    monitor-exit v0
    :try_end_22
    .catchall {:try_start_21 .. :try_end_22} :catchall_20

    throw v1
.end method

.method private enforceShell(Ljava/lang/String;)V
    .registers 6
    .param p1, "method"  # Ljava/lang/String;

    .line 4082
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    .line 4083
    .local v0, "callingUid":I
    const/16 v1, 0x7d0

    if-eq v0, v1, :cond_24

    if-nez v0, :cond_d

    goto :goto_24

    .line 4084
    :cond_d
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Non-shell user attempted to call "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4086
    :cond_24
    :goto_24
    return-void
.end method

.method private enforceSystemUserOrPermission(Ljava/lang/String;)V
    .registers 5
    .param p1, "permission"  # Ljava/lang/String;

    .line 8690
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    if-nez v0, :cond_29

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    if-eqz v0, :cond_29

    .line 8691
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Must be system or have "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " permission"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, p1, v1}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8694
    :cond_29
    return-void
.end method

.method private enforceSystemUserOrPermissionIfCrossUser(ILjava/lang/String;)V
    .registers 6
    .param p1, "userHandle"  # I
    .param p2, "permission"  # Ljava/lang/String;

    .line 8697
    if-ltz p1, :cond_f

    .line 8700
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    if-ne p1, v0, :cond_b

    .line 8701
    return-void

    .line 8703
    :cond_b
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceSystemUserOrPermission(Ljava/lang/String;)V

    .line 8704
    return-void

    .line 8698
    :cond_f
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Invalid userId "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private enforceUserUnlocked(I)V
    .registers 4
    .param p1, "userId"  # I

    .line 8660
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v0, p1}, Landroid/os/UserManager;->isUserUnlocked(I)Z

    move-result v0

    const-string v1, "User must be running and unlocked"

    invoke-static {v0, v1}, Lcom/android/internal/util/Preconditions;->checkState(ZLjava/lang/String;)V

    .line 8662
    return-void
.end method

.method private enforceUserUnlocked(IZ)V
    .registers 4
    .param p1, "userId"  # I
    .param p2, "parent"  # Z

    .line 8665
    if-eqz p2, :cond_a

    .line 8666
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v0

    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceUserUnlocked(I)V

    goto :goto_d

    .line 8668
    :cond_a
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceUserUnlocked(I)V

    .line 8670
    :goto_d
    return-void
.end method

.method private ensureAllUsersAffiliated()V
    .registers 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 7350
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7351
    :try_start_5
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->areAllUsersAffiliatedWithDeviceLocked()Z

    move-result v1

    if-eqz v1, :cond_d

    .line 7354
    monitor-exit v0

    .line 7355
    return-void

    .line 7352
    :cond_d
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Not all users are affiliated."

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    throw v1

    .line 7354
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    :catchall_15
    move-exception v1

    monitor-exit v0
    :try_end_17
    .catchall {:try_start_5 .. :try_end_17} :catchall_15

    throw v1
.end method

.method private ensureCallerPackage(Ljava/lang/String;)V
    .registers 7
    .param p1, "packageName"  # Ljava/lang/String;

    .line 8787
    if-nez p1, :cond_c

    .line 8788
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    const-string v1, "Only caller can omit package name"

    invoke-static {v0, v1}, Lcom/android/internal/util/Preconditions;->checkState(ZLjava/lang/String;)V

    goto :goto_2b

    .line 8791
    :cond_c
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    .line 8792
    .local v0, "callingUid":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v1

    .line 8794
    .local v1, "userId":I
    :try_start_18
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const/4 v3, 0x0

    invoke-interface {v2, p1, v3, v1}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v2

    .line 8796
    .local v2, "ai":Landroid/content/pm/ApplicationInfo;
    iget v4, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v4, v0, :cond_24

    const/4 v3, 0x1

    :cond_24
    const-string v4, "Unmatching package name"

    invoke-static {v3, v4}, Lcom/android/internal/util/Preconditions;->checkState(ZLjava/lang/String;)V
    :try_end_29
    .catch Landroid/os/RemoteException; {:try_start_18 .. :try_end_29} :catch_2a

    .line 8799
    .end local v2  # "ai":Landroid/content/pm/ApplicationInfo;
    goto :goto_2b

    .line 8797
    :catch_2a
    move-exception v2

    .line 8801
    .end local v0  # "callingUid":I
    .end local v1  # "userId":I
    :goto_2b
    return-void
.end method

.method private ensureDeviceOwnerAndAllUsersAffiliated(Landroid/content/ComponentName;)V
    .registers 4
    .param p1, "who"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 7343
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7344
    const/4 v1, -0x2

    :try_start_6
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 7345
    monitor-exit v0
    :try_end_a
    .catchall {:try_start_6 .. :try_end_a} :catchall_e

    .line 7346
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureAllUsersAffiliated()V

    .line 7347
    return-void

    .line 7345
    :catchall_e
    move-exception v1

    :try_start_f
    monitor-exit v0
    :try_end_10
    .catchall {:try_start_f .. :try_end_10} :catchall_e

    throw v1
.end method

.method private ensureDeviceOwnerUserStarted()V
    .registers 5

    .line 3627
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 3628
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v1

    if-nez v1, :cond_f

    .line 3629
    monitor-exit v0

    return-void

    .line 3631
    :cond_f
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v1

    .line 3632
    .local v1, "userId":I
    monitor-exit v0
    :try_end_16
    .catchall {:try_start_5 .. :try_end_16} :catchall_2b

    .line 3636
    if-eqz v1, :cond_2a

    .line 3638
    :try_start_18
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v0

    invoke-interface {v0, v1}, Landroid/app/IActivityManager;->startUserInBackground(I)Z
    :try_end_21
    .catch Landroid/os/RemoteException; {:try_start_18 .. :try_end_21} :catch_22

    .line 3644
    goto :goto_2a

    .line 3642
    :catch_22
    move-exception v0

    .line 3643
    .local v0, "e":Landroid/os/RemoteException;
    const-string v2, "DevicePolicyManager"

    const-string v3, "Exception starting user"

    invoke-static {v2, v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3646
    .end local v0  # "e":Landroid/os/RemoteException;
    :cond_2a
    :goto_2a
    return-void

    .line 3632
    .end local v1  # "userId":I
    :catchall_2b
    move-exception v1

    :try_start_2c
    monitor-exit v0
    :try_end_2d
    .catchall {:try_start_2c .. :try_end_2d} :catchall_2b

    throw v1
.end method

.method private ensureUnknownSourcesRestrictionForProfileOwnerLocked(ILcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Z)V
    .registers 9
    .param p1, "userId"  # I
    .param p2, "profileOwner"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .param p3, "newOwner"  # Z

    .line 2405
    const/4 v0, 0x0

    const-string/jumbo v1, "unknown_sources_default_reversed"

    if-nez p3, :cond_e

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v1, v0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsSecureGetIntForUser(Ljava/lang/String;II)I

    move-result v2

    if-eqz v2, :cond_21

    .line 2407
    :cond_e
    invoke-virtual {p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->ensureUserRestrictions()Landroid/os/Bundle;

    move-result-object v2

    const/4 v3, 0x1

    const-string/jumbo v4, "no_install_unknown_sources"

    invoke-virtual {v2, v4, v3}, Landroid/os/Bundle;->putBoolean(Ljava/lang/String;Z)V

    .line 2409
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveUserRestrictionsLocked(I)V

    .line 2410
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v1, v0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsSecurePutIntForUser(Ljava/lang/String;II)V

    .line 2413
    :cond_21
    return-void
.end method

.method private findAdminComponentWithPackageLocked(Ljava/lang/String;I)Landroid/content/ComponentName;
    .registers 10
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userId"  # I

    .line 2612
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    .line 2613
    .local v0, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 2614
    .local v1, "n":I
    const/4 v2, 0x0

    .line 2615
    .local v2, "found":Landroid/content/ComponentName;
    const/4 v3, 0x0

    .line 2616
    .local v3, "nFound":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_d
    if-ge v4, v1, :cond_30

    .line 2617
    iget-object v5, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 2618
    .local v5, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v6}, Landroid/app/admin/DeviceAdminInfo;->getPackageName()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_2d

    .line 2620
    if-nez v3, :cond_2b

    .line 2621
    iget-object v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v6}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    .line 2623
    :cond_2b
    add-int/lit8 v3, v3, 0x1

    .line 2616
    .end local v5  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_2d
    add-int/lit8 v4, v4, 0x1

    goto :goto_d

    .line 2626
    .end local v4  # "i":I
    :cond_30
    const/4 v4, 0x1

    if-le v3, v4, :cond_3a

    .line 2627
    const-string v4, "DevicePolicyManager"

    const-string v5, "Multiple DA found; assume the first one is DO."

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2629
    :cond_3a
    return-object v2
.end method

.method private findOwnerComponentIfNecessaryLocked()V
    .registers 7

    .line 2479
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v0

    if-nez v0, :cond_9

    .line 2480
    return-void

    .line 2482
    :cond_9
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v0

    .line 2484
    .local v0, "doComponentName":Landroid/content/ComponentName;
    invoke-virtual {v0}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_1a

    .line 2485
    return-void

    .line 2488
    :cond_1a
    nop

    .line 2489
    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 2490
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v2

    .line 2488
    invoke-direct {p0, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->findAdminComponentWithPackageLocked(Ljava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v1

    .line 2491
    .local v1, "doComponent":Landroid/content/ComponentName;
    if-nez v1, :cond_33

    .line 2492
    const-string v2, "DevicePolicyManager"

    const-string v3, "Device-owner isn\'t registered as device-admin"

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4f

    .line 2494
    :cond_33
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 2496
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerName()Ljava/lang/String;

    move-result-object v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 2497
    invoke-virtual {v4}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v4

    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 2498
    invoke-virtual {v5}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserRestrictionsNeedsMigration()Z

    move-result v5

    .line 2494
    xor-int/lit8 v5, v5, 0x1

    invoke-virtual {v2, v1, v3, v4, v5}, Lcom/android/server/devicepolicy/Owners;->setDeviceOwnerWithRestrictionsMigrated(Landroid/content/ComponentName;Ljava/lang/String;IZ)V

    .line 2499
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/Owners;->writeDeviceOwner()V

    .line 2504
    :goto_4f
    return-void
.end method

.method private forceWipeDeviceNoLock(ZLjava/lang/String;Z)V
    .registers 10
    .param p1, "wipeExtRequested"  # Z
    .param p2, "reason"  # Ljava/lang/String;
    .param p3, "wipeEuicc"  # Z

    .line 6495
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->wtfIfInLock()V

    .line 6496
    const/4 v0, 0x0

    .line 6498
    .local v0, "success":Z
    const v1, 0x33467

    const/4 v2, 0x0

    if-eqz p1, :cond_18

    .line 6499
    :try_start_a
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v4, "storage"

    invoke-virtual {v3, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/storage/StorageManager;

    .line 6501
    .local v3, "sm":Landroid/os/storage/StorageManager;
    invoke-virtual {v3}, Landroid/os/storage/StorageManager;->wipeAdoptableDisks()V

    .line 6503
    .end local v3  # "sm":Landroid/os/storage/StorageManager;
    :cond_18
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const/4 v4, 0x1

    invoke-virtual {v3, v2, p2, v4, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->recoverySystemRebootWipeUserData(ZLjava/lang/String;ZZ)V
    :try_end_1e
    .catch Ljava/io/IOException; {:try_start_a .. :try_end_1e} :catch_29
    .catch Ljava/lang/SecurityException; {:try_start_a .. :try_end_1e} :catch_29
    .catchall {:try_start_a .. :try_end_1e} :catchall_27

    .line 6505
    const/4 v0, 0x1

    .line 6509
    if-nez v0, :cond_35

    :goto_21
    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v1, v2}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    goto :goto_35

    :catchall_27
    move-exception v3

    goto :goto_36

    .line 6506
    :catch_29
    move-exception v3

    .line 6507
    .local v3, "e":Ljava/lang/Exception;
    :try_start_2a
    const-string v4, "DevicePolicyManager"

    const-string v5, "Failed requesting data wipe"

    invoke-static {v4, v5, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_31
    .catchall {:try_start_2a .. :try_end_31} :catchall_27

    .line 6509
    nop

    .end local v3  # "e":Ljava/lang/Exception;
    if-nez v0, :cond_35

    goto :goto_21

    .line 6511
    :cond_35
    :goto_35
    return-void

    .line 6509
    :goto_36
    if-nez v0, :cond_3d

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v1, v2}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    :cond_3d
    throw v3
.end method

.method private forceWipeUser(ILjava/lang/String;Z)V
    .registers 11
    .param p1, "userId"  # I
    .param p2, "wipeReasonForUser"  # Ljava/lang/String;
    .param p3, "wipeSilently"  # Z

    .line 6514
    const/4 v0, 0x0

    .line 6516
    .local v0, "success":Z
    const v1, 0x33467

    const/4 v2, 0x0

    :try_start_5
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v3

    .line 6517
    .local v3, "am":Landroid/app/IActivityManager;
    invoke-interface {v3}, Landroid/app/IActivityManager;->getCurrentUser()Landroid/content/pm/UserInfo;

    move-result-object v4

    iget v4, v4, Landroid/content/pm/UserInfo;->id:I

    if-ne v4, p1, :cond_16

    .line 6518
    invoke-interface {v3, v2}, Landroid/app/IActivityManager;->switchUser(I)Z

    .line 6521
    :cond_16
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    invoke-virtual {v4, p1}, Landroid/os/UserManagerInternal;->removeUserEvenWhenDisallowed(I)Z

    move-result v4

    move v0, v4

    .line 6522
    if-nez v0, :cond_36

    .line 6523
    const-string v4, "DevicePolicyManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Couldn\'t remove user "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_41

    .line 6524
    :cond_36
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v4

    if-eqz v4, :cond_41

    if-nez p3, :cond_41

    .line 6525
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendWipeProfileNotification(Ljava/lang/String;)V
    :try_end_41
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_41} :catch_52
    .catchall {:try_start_5 .. :try_end_41} :catchall_49

    .line 6530
    .end local v3  # "am":Landroid/app/IActivityManager;
    :cond_41
    :goto_41
    if-nez v0, :cond_56

    :goto_43
    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v1, v2}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    goto :goto_56

    :catchall_49
    move-exception v3

    if-nez v0, :cond_51

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v1, v2}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    :cond_51
    throw v3

    .line 6527
    :catch_52
    move-exception v3

    .line 6530
    if-nez v0, :cond_56

    goto :goto_43

    .line 6532
    :cond_56
    :goto_56
    return-void
.end method

.method private getAccessibilityManagerForUser(I)Landroid/view/accessibility/AccessibilityManager;
    .registers 6
    .param p1, "userId"  # I

    .line 9227
    const-string v0, "accessibility"

    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 9228
    .local v0, "iBinder":Landroid/os/IBinder;
    if-nez v0, :cond_a

    .line 9229
    const/4 v1, 0x0

    goto :goto_e

    :cond_a
    invoke-static {v0}, Landroid/view/accessibility/IAccessibilityManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/view/accessibility/IAccessibilityManager;

    move-result-object v1

    .line 9230
    .local v1, "service":Landroid/view/accessibility/IAccessibilityManager;
    :goto_e
    new-instance v2, Landroid/view/accessibility/AccessibilityManager;

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v2, v3, v1, p1}, Landroid/view/accessibility/AccessibilityManager;-><init>(Landroid/content/Context;Landroid/view/accessibility/IAccessibilityManager;I)V

    return-object v2
.end method

.method private getActiveAdminForUidLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "uid"  # I

    .line 2790
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureLocked()V

    .line 2791
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    .line 2792
    .local v0, "userId":I
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 2793
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v2, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 2794
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_3b

    .line 2797
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUid()I

    move-result v3

    if-ne v3, p2, :cond_1c

    .line 2800
    return-object v2

    .line 2798
    :cond_1c
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Admin "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " is not owned by uid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 2795
    :cond_3b
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "No active admin "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " for UID "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3
.end method

.method private getActiveAdminPackagesLocked(I)Ljava/util/Set;
    .registers 7
    .param p1, "userId"  # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 3872
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    .line 3873
    .local v0, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    const/4 v1, 0x0

    .line 3874
    .local v1, "adminPkgs":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    iget-object v2, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    .local v2, "i":I
    :goto_d
    if-ltz v2, :cond_2b

    .line 3875
    iget-object v3, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    iget-object v3, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v3}, Landroid/app/admin/DeviceAdminInfo;->getPackageName()Ljava/lang/String;

    move-result-object v3

    .line 3876
    .local v3, "pkgName":Ljava/lang/String;
    if-nez v1, :cond_25

    .line 3877
    new-instance v4, Landroid/util/ArraySet;

    invoke-direct {v4}, Landroid/util/ArraySet;-><init>()V

    move-object v1, v4

    .line 3879
    :cond_25
    invoke-interface {v1, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 3874
    .end local v3  # "pkgName":Ljava/lang/String;
    add-int/lit8 v2, v2, -0x1

    goto :goto_d

    .line 3881
    .end local v2  # "i":I
    :cond_2b
    return-object v1
.end method

.method private getActiveAdminWithPolicyForUidLocked(Landroid/content/ComponentName;II)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "reqPolicy"  # I
    .param p3, "uid"  # I

    .line 2815
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureLocked()V

    .line 2817
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    .line 2818
    .local v0, "userId":I
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 2819
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    if-eqz p1, :cond_5b

    .line 2820
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v2, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 2821
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_44

    .line 2824
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUid()I

    move-result v3

    if-ne v3, p3, :cond_25

    .line 2827
    invoke-virtual {p0, v2, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isActiveAdminWithPolicyForUserLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;II)Z

    move-result v3

    if-eqz v3, :cond_24

    .line 2828
    return-object v2

    .line 2830
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_24
    goto :goto_7b

    .line 2825
    .restart local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_25
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Admin "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " is not owned by uid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 2822
    :cond_44
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "No active admin "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 2831
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_5b
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_61
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_7b

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 2832
    .local v3, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUid()I

    move-result v4

    if-ne v4, p3, :cond_7a

    invoke-virtual {p0, v3, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isActiveAdminWithPolicyForUserLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;II)Z

    move-result v4

    if-eqz v4, :cond_7a

    .line 2834
    return-object v3

    .line 2836
    .end local v3  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_7a
    goto :goto_61

    .line 2839
    :cond_7b
    :goto_7b
    const/4 v2, 0x0

    return-object v2
.end method

.method private getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;
    .registers 12
    .param p1, "userHandle"  # I
    .param p2, "parent"  # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(IZ)",
            "Ljava/util/List<",
            "Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;",
            ">;"
        }
    .end annotation

    .line 4243
    if-nez p2, :cond_f

    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSeparateProfileChallengeEnabled(I)Z

    move-result v0

    if-eqz v0, :cond_f

    .line 4245
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserDataUnchecked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    iget-object v0, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    return-object v0

    .line 4249
    :cond_f
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 4250
    .local v0, "admins":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v1, p1}, Landroid/os/UserManager;->getProfiles(I)Ljava/util/List;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_1e
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_69

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/UserInfo;

    .line 4251
    .local v2, "userInfo":Landroid/content/pm/UserInfo;
    iget v3, v2, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v3

    .line 4252
    .local v3, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    invoke-virtual {v2}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v4

    if-nez v4, :cond_3c

    .line 4253
    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    goto :goto_68

    .line 4258
    :cond_3c
    iget v4, v2, Landroid/content/pm/UserInfo;->id:I

    invoke-direct {p0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSeparateProfileChallengeEnabled(I)Z

    move-result v4

    .line 4259
    .local v4, "hasSeparateChallenge":Z
    iget-object v5, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    .line 4260
    .local v5, "N":I
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_49
    if-ge v6, v5, :cond_68

    .line 4261
    iget-object v7, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4262
    .local v7, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    invoke-virtual {v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->hasParentActiveAdmin()Z

    move-result v8

    if-eqz v8, :cond_60

    .line 4263
    invoke-virtual {v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getParentActiveAdmin()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v8

    invoke-virtual {v0, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4265
    :cond_60
    if-nez v4, :cond_65

    .line 4266
    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4260
    .end local v7  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_65
    add-int/lit8 v6, v6, 0x1

    goto :goto_49

    .line 4270
    .end local v2  # "userInfo":Landroid/content/pm/UserInfo;
    .end local v3  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v4  # "hasSeparateChallenge":Z
    .end local v5  # "N":I
    .end local v6  # "i":I
    :cond_68
    :goto_68
    goto :goto_1e

    .line 4271
    :cond_69
    return-object v0
.end method

.method private getAdminWithMinimumFailedPasswordsForWipeLocked(IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .registers 11
    .param p1, "userHandle"  # I
    .param p2, "parent"  # Z

    .line 4952
    const/4 v0, 0x0

    .line 4953
    .local v0, "count":I
    const/4 v1, 0x0

    .line 4956
    .local v1, "strictestAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v2

    .line 4957
    .local v2, "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v3

    .line 4958
    .local v3, "N":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_b
    if-ge v4, v3, :cond_3a

    .line 4959
    invoke-interface {v2, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4960
    .local v5, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumFailedPasswordsForWipe:I

    if-nez v6, :cond_18

    .line 4962
    goto :goto_37

    .line 4966
    :cond_18
    invoke-virtual {v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v6

    invoke-virtual {v6}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v6

    .line 4967
    .local v6, "userId":I
    if-eqz v0, :cond_34

    iget v7, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumFailedPasswordsForWipe:I

    if-gt v0, v7, :cond_34

    iget v7, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumFailedPasswordsForWipe:I

    if-ne v0, v7, :cond_37

    .line 4970
    invoke-direct {p0, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v7

    invoke-virtual {v7}, Landroid/content/pm/UserInfo;->isPrimary()Z

    move-result v7

    if-eqz v7, :cond_37

    .line 4971
    :cond_34
    iget v0, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumFailedPasswordsForWipe:I

    .line 4972
    move-object v1, v5

    .line 4958
    .end local v5  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v6  # "userId":I
    :cond_37
    :goto_37
    add-int/lit8 v4, v4, 0x1

    goto :goto_b

    .line 4975
    .end local v4  # "i":I
    :cond_3a
    return-object v1
.end method

.method private getApplicationLabel(Ljava/lang/String;I)Ljava/lang/String;
    .registers 10
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userHandle"  # I

    .line 8522
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 8526
    .local v0, "token":J
    const/4 v2, 0x0

    :try_start_7
    new-instance v3, Landroid/os/UserHandle;

    invoke-direct {v3, p2}, Landroid/os/UserHandle;-><init>(I)V

    .line 8527
    .local v3, "handle":Landroid/os/UserHandle;
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v5, 0x0

    invoke-virtual {v4, p1, v5, v3}, Landroid/content/Context;->createPackageContextAsUser(Ljava/lang/String;ILandroid/os/UserHandle;)Landroid/content/Context;

    move-result-object v4
    :try_end_13
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_7 .. :try_end_13} :catch_33
    .catchall {:try_start_7 .. :try_end_13} :catchall_31

    move-object v3, v4

    .line 8531
    .local v3, "userContext":Landroid/content/Context;
    nop

    .line 8532
    :try_start_15
    invoke-virtual {v3}, Landroid/content/Context;->getApplicationInfo()Landroid/content/pm/ApplicationInfo;

    move-result-object v4

    .line 8533
    .local v4, "appInfo":Landroid/content/pm/ApplicationInfo;
    const/4 v5, 0x0

    .line 8534
    .local v5, "result":Ljava/lang/CharSequence;
    if-eqz v4, :cond_25

    .line 8535
    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v6

    invoke-virtual {v4, v6}, Landroid/content/pm/ApplicationInfo;->loadUnsafeLabel(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;

    move-result-object v6

    move-object v5, v6

    .line 8537
    :cond_25
    if-eqz v5, :cond_2b

    invoke-interface {v5}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    move-result-object v2
    :try_end_2b
    .catchall {:try_start_15 .. :try_end_2b} :catchall_31

    .line 8539
    :cond_2b
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8537
    return-object v2

    .line 8539
    .end local v3  # "userContext":Landroid/content/Context;
    .end local v4  # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v5  # "result":Ljava/lang/CharSequence;
    :catchall_31
    move-exception v2

    goto :goto_54

    .line 8528
    :catch_33
    move-exception v3

    .line 8529
    .local v3, "nnfe":Landroid/content/pm/PackageManager$NameNotFoundException;
    :try_start_34
    const-string v4, "DevicePolicyManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " is not installed for user "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4d
    .catchall {:try_start_34 .. :try_end_4d} :catchall_31

    .line 8530
    nop

    .line 8539
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8530
    return-object v2

    .line 8539
    .end local v3  # "nnfe":Landroid/content/pm/PackageManager$NameNotFoundException;
    :goto_54
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private getCameraDisabled(Landroid/content/ComponentName;IZ)Z
    .registers 12
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "mergeDeviceOwnerRestriction"  # Z

    .line 7630
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 7631
    return v1

    .line 7633
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7634
    if-eqz p1, :cond_19

    .line 7635
    :try_start_d
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 7636
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_15

    iget-boolean v1, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCamera:Z

    :cond_15
    monitor-exit v0

    return v1

    .line 7657
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_17
    move-exception v1

    goto :goto_48

    .line 7639
    :cond_19
    const/4 v2, 0x1

    if-eqz p3, :cond_28

    .line 7640
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 7641
    .local v3, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v3, :cond_28

    iget-boolean v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCamera:Z

    if-eqz v4, :cond_28

    .line 7642
    monitor-exit v0

    return v2

    .line 7647
    .end local v3  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_28
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v3

    .line 7649
    .local v3, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    .line 7650
    .local v4, "N":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_33
    if-ge v5, v4, :cond_46

    .line 7651
    iget-object v6, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v6, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 7652
    .local v6, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v7, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCamera:Z

    if-eqz v7, :cond_43

    .line 7653
    monitor-exit v0

    return v2

    .line 7650
    .end local v6  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_43
    add-int/lit8 v5, v5, 0x1

    goto :goto_33

    .line 7656
    .end local v5  # "i":I
    :cond_46
    monitor-exit v0

    return v1

    .line 7657
    .end local v3  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v4  # "N":I
    :goto_48
    monitor-exit v0
    :try_end_49
    .catchall {:try_start_d .. :try_end_49} :catchall_17

    throw v1
.end method

.method private getCameraRestrictionScopeLocked(IZ)I
    .registers 5
    .param p1, "userId"  # I
    .param p2, "disallowCameraGlobally"  # Z

    .line 10126
    if-eqz p2, :cond_4

    .line 10127
    const/4 v0, 0x2

    return v0

    .line 10128
    :cond_4
    const/4 v0, 0x0

    const/4 v1, 0x0

    invoke-direct {p0, v0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCameraDisabled(Landroid/content/ComponentName;IZ)Z

    move-result v0

    if-eqz v0, :cond_e

    .line 10130
    const/4 v0, 0x1

    return v0

    .line 10132
    :cond_e
    return v1
.end method

.method private getCredentialOwner(IZ)I
    .registers 7
    .param p1, "userHandle"  # I
    .param p2, "parent"  # Z

    .line 8818
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 8820
    .local v0, "ident":J
    if-eqz p2, :cond_13

    .line 8821
    :try_start_8
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v2, p1}, Landroid/os/UserManager;->getProfileParent(I)Landroid/content/pm/UserInfo;

    move-result-object v2

    .line 8822
    .local v2, "parentProfile":Landroid/content/pm/UserInfo;
    if-eqz v2, :cond_13

    .line 8823
    iget v3, v2, Landroid/content/pm/UserInfo;->id:I

    move p1, v3

    .line 8826
    .end local v2  # "parentProfile":Landroid/content/pm/UserInfo;
    :cond_13
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v2, p1}, Landroid/os/UserManager;->getCredentialOwnerProfile(I)I

    move-result v2
    :try_end_19
    .catchall {:try_start_8 .. :try_end_19} :catchall_1f

    .line 8828
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8826
    return v2

    .line 8828
    :catchall_1f
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private getDelegatePackagesInternalLocked(Ljava/lang/String;I)Ljava/util/List;
    .registers 7
    .param p1, "scope"  # Ljava/lang/String;
    .param p2, "userId"  # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "I)",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 6206
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    .line 6209
    .local v0, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 6211
    .local v1, "delegatePackagesWithScope":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_a
    iget-object v3, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v3

    if-ge v2, v3, :cond_2e

    .line 6212
    iget-object v3, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v3, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/List;

    invoke-interface {v3, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2b

    .line 6213
    iget-object v3, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v3, v2}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    invoke-interface {v1, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 6211
    :cond_2b
    add-int/lit8 v2, v2, 0x1

    goto :goto_a

    .line 6216
    .end local v2  # "i":I
    :cond_2e
    return-object v1
.end method

.method private getDeviceOwnerRemoteBugreportUri()Ljava/lang/String;
    .registers 3

    .line 7453
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7454
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerRemoteBugreportUri()Ljava/lang/String;

    move-result-object v1

    monitor-exit v0

    return-object v1

    .line 7455
    :catchall_d
    move-exception v1

    monitor-exit v0
    :try_end_f
    .catchall {:try_start_5 .. :try_end_f} :catchall_d

    throw v1
.end method

.method private getEncryptionStatus()I
    .registers 2

    .line 7148
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->storageManagerIsFileBasedEncryptionEnabled()Z

    move-result v0

    if-eqz v0, :cond_a

    .line 7149
    const/4 v0, 0x5

    return v0

    .line 7150
    :cond_a
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->storageManagerIsNonDefaultBlockEncrypted()Z

    move-result v0

    if-eqz v0, :cond_14

    .line 7151
    const/4 v0, 0x3

    return v0

    .line 7152
    :cond_14
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->storageManagerIsEncrypted()Z

    move-result v0

    if-eqz v0, :cond_1e

    .line 7153
    const/4 v0, 0x4

    return v0

    .line 7154
    :cond_1e
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->storageManagerIsEncryptable()Z

    move-result v0

    if-eqz v0, :cond_28

    .line 7155
    const/4 v0, 0x1

    return v0

    .line 7157
    :cond_28
    const/4 v0, 0x0

    return v0
.end method

.method private getEncryptionStatusName(I)Ljava/lang/String;
    .registers 3
    .param p1, "encryptionStatus"  # I

    .line 8895
    if-eqz p1, :cond_26

    const/4 v0, 0x1

    if-eq p1, v0, :cond_22

    const/4 v0, 0x2

    if-eq p1, v0, :cond_1f

    const/4 v0, 0x3

    if-eq p1, v0, :cond_1c

    const/4 v0, 0x4

    if-eq p1, v0, :cond_19

    const/4 v0, 0x5

    if-eq p1, v0, :cond_15

    .line 8909
    const-string/jumbo v0, "unknown"

    return-object v0

    .line 8903
    :cond_15
    const-string/jumbo v0, "per-user"

    return-object v0

    .line 8899
    :cond_19
    const-string v0, "block default key"

    return-object v0

    .line 8901
    :cond_1c
    const-string v0, "block"

    return-object v0

    .line 8907
    :cond_1f
    const-string v0, "activating"

    return-object v0

    .line 8897
    :cond_22
    const-string/jumbo v0, "inactive"

    return-object v0

    .line 8905
    :cond_26
    const-string/jumbo v0, "unsupported"

    return-object v0
.end method

.method private static getIntentFilterActions(Landroid/content/IntentFilter;)[Ljava/lang/String;
    .registers 5
    .param p0, "filter"  # Landroid/content/IntentFilter;

    .line 9148
    if-nez p0, :cond_4

    .line 9149
    const/4 v0, 0x0

    return-object v0

    .line 9151
    :cond_4
    invoke-virtual {p0}, Landroid/content/IntentFilter;->countActions()I

    move-result v0

    .line 9152
    .local v0, "actionsCount":I
    new-array v1, v0, [Ljava/lang/String;

    .line 9153
    .local v1, "actions":[Ljava/lang/String;
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_b
    if-ge v2, v0, :cond_16

    .line 9154
    invoke-virtual {p0, v2}, Landroid/content/IntentFilter;->getAction(I)Ljava/lang/String;

    move-result-object v3

    aput-object v3, v1, v2

    .line 9153
    add-int/lit8 v2, v2, 0x1

    goto :goto_b

    .line 9156
    .end local v2  # "i":I
    :cond_16
    return-object v1
.end method

.method private getKeepUninstalledPackagesLocked()Ljava/util/List;
    .registers 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 7792
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 7793
    .local v0, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v0, :cond_9

    iget-object v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->keepUninstalledPackages:Ljava/util/List;

    goto :goto_a

    :cond_9
    const/4 v1, 0x0

    :goto_a
    return-object v1
.end method

.method private static getManagedProvisioningPackage(Landroid/content/Context;)Ljava/lang/String;
    .registers 3
    .param p0, "context"  # Landroid/content/Context;

    .line 14124
    invoke-virtual {p0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x1040187

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method private getMaximumTimeToLockPolicyFromAdmins(Ljava/util/List;)J
    .registers 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;",
            ">;)J"
        }
    .end annotation

    .line 5358
    .local p1, "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    const-wide v0, 0x7fffffffffffffffL

    .line 5359
    .local v0, "time":J
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_9
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_26

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 5360
    .local v3, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-wide v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumTimeToUnlock:J

    const-wide/16 v6, 0x0

    cmp-long v4, v4, v6

    if-lez v4, :cond_25

    iget-wide v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumTimeToUnlock:J

    cmp-long v4, v4, v0

    if-gez v4, :cond_25

    .line 5361
    iget-wide v0, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumTimeToUnlock:J

    .line 5363
    .end local v3  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_25
    goto :goto_9

    .line 5364
    :cond_26
    return-wide v0
.end method

.method private getMeteredDisabledPackagesLocked(I)Ljava/util/Set;
    .registers 6
    .param p1, "userId"  # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 12532
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getOwnerComponent(I)Landroid/content/ComponentName;

    move-result-object v0

    .line 12533
    .local v0, "who":Landroid/content/ComponentName;
    new-instance v1, Landroid/util/ArraySet;

    invoke-direct {v1}, Landroid/util/ArraySet;-><init>()V

    .line 12534
    .local v1, "restrictedPkgs":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    if-eqz v0, :cond_1a

    .line 12535
    invoke-virtual {p0, v0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 12536
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_1a

    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->meteredDisabledPackages:Ljava/util/List;

    if-eqz v3, :cond_1a

    .line 12537
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->meteredDisabledPackages:Ljava/util/List;

    invoke-interface {v1, v3}, Ljava/util/Set;->addAll(Ljava/util/Collection;)Z

    .line 12540
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_1a
    return-object v1
.end method

.method private getMinimumStrongAuthTimeoutMs()J
    .registers 5

    .line 5433
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->isBuildDebuggable()Z

    move-result v0

    if-nez v0, :cond_b

    .line 5434
    sget-wide v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->MINIMUM_STRONG_AUTH_TIMEOUT_MS:J

    return-wide v0

    .line 5438
    :cond_b
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    sget-wide v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->MINIMUM_STRONG_AUTH_TIMEOUT_MS:J

    const-string/jumbo v3, "persist.sys.min_str_auth_timeo"

    invoke-virtual {v0, v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->systemPropertiesGetLong(Ljava/lang/String;J)J

    move-result-wide v0

    sget-wide v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->MINIMUM_STRONG_AUTH_TIMEOUT_MS:J

    invoke-static {v0, v1, v2, v3}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v0

    return-wide v0
.end method

.method private getOverrideApnsUnchecked()Ljava/util/List;
    .registers 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Landroid/telephony/data/ApnSetting;",
            ">;"
        }
    .end annotation

    .line 14002
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 14004
    .local v0, "id":J
    :try_start_6
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    sget-object v4, Landroid/provider/Telephony$Carriers;->DPC_URI:Landroid/net/Uri;

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-virtual/range {v3 .. v8}, Landroid/content/ContentResolver;->query(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v2
    :try_end_16
    .catchall {:try_start_6 .. :try_end_16} :catchall_45

    .line 14006
    .local v2, "cursor":Landroid/database/Cursor;
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 14007
    nop

    .line 14009
    if-nez v2, :cond_23

    .line 14010
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v3

    return-object v3

    .line 14013
    :cond_23
    :try_start_23
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    .line 14014
    .local v3, "apnList":Ljava/util/List;, "Ljava/util/List<Landroid/telephony/data/ApnSetting;>;"
    const/4 v4, -0x1

    invoke-interface {v2, v4}, Landroid/database/Cursor;->moveToPosition(I)Z

    .line 14015
    :goto_2c
    invoke-interface {v2}, Landroid/database/Cursor;->moveToNext()Z

    move-result v4

    if-eqz v4, :cond_3b

    .line 14016
    invoke-static {v2}, Landroid/telephony/data/ApnSetting;->makeApnSetting(Landroid/database/Cursor;)Landroid/telephony/data/ApnSetting;

    move-result-object v4

    .line 14017
    .local v4, "apn":Landroid/telephony/data/ApnSetting;
    invoke-interface {v3, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_39
    .catchall {:try_start_23 .. :try_end_39} :catchall_40

    .line 14018
    nop

    .end local v4  # "apn":Landroid/telephony/data/ApnSetting;
    goto :goto_2c

    .line 14019
    :cond_3b
    nop

    .line 14021
    invoke-interface {v2}, Landroid/database/Cursor;->close()V

    .line 14019
    return-object v3

    .line 14021
    .end local v3  # "apnList":Ljava/util/List;, "Ljava/util/List<Landroid/telephony/data/ApnSetting;>;"
    :catchall_40
    move-exception v3

    invoke-interface {v2}, Landroid/database/Cursor;->close()V

    throw v3

    .line 14006
    .end local v2  # "cursor":Landroid/database/Cursor;
    :catchall_45
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private getOwnerComponent(I)Landroid/content/ComponentName;
    .registers 4
    .param p1, "userId"  # I

    .line 12046
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12047
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v1

    if-ne v1, p1, :cond_15

    .line 12048
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v1

    monitor-exit v0

    return-object v1

    .line 12050
    :cond_15
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p1}, Lcom/android/server/devicepolicy/Owners;->hasProfileOwner(I)Z

    move-result v1

    if-eqz v1, :cond_25

    .line 12051
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p1}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerComponent(I)Landroid/content/ComponentName;

    move-result-object v1

    monitor-exit v0

    return-object v1

    .line 12053
    :cond_25
    monitor-exit v0

    .line 12054
    const/4 v0, 0x0

    return-object v0

    .line 12053
    :catchall_28
    move-exception v1

    monitor-exit v0
    :try_end_2a
    .catchall {:try_start_5 .. :try_end_2a} :catchall_28

    throw v1
.end method

.method private getOwnerComponent(Ljava/lang/String;I)Landroid/content/ComponentName;
    .registers 4
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userId"  # I

    .line 12033
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwnerPackage(Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 12034
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v0

    return-object v0

    .line 12036
    :cond_d
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProfileOwnerPackage(Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_1a

    .line 12037
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0, p2}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerComponent(I)Landroid/content/ComponentName;

    move-result-object v0

    return-object v0

    .line 12039
    :cond_1a
    const/4 v0, 0x0

    return-object v0
.end method

.method private getOwnerPackageNameForUserLocked(I)Ljava/lang/String;
    .registers 3
    .param p1, "userId"  # I

    .line 13423
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v0

    if-ne v0, p1, :cond_f

    .line 13424
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerPackageName()Ljava/lang/String;

    move-result-object v0

    goto :goto_15

    .line 13425
    :cond_f
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0, p1}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerPackage(I)Ljava/lang/String;

    move-result-object v0

    .line 13423
    :goto_15
    return-object v0
.end method

.method private getPasswordExpirationLocked(Landroid/content/ComponentName;IZ)J
    .registers 14
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4498
    const-wide/16 v0, 0x0

    .line 4500
    .local v0, "timeout":J
    if-eqz p1, :cond_f

    .line 4501
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4502
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_d

    iget-wide v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationDate:J

    goto :goto_e

    :cond_d
    move-wide v3, v0

    :goto_e
    return-wide v3

    .line 4506
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_f
    invoke-direct {p0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v2

    .line 4507
    .local v2, "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v3

    .line 4508
    .local v3, "N":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_18
    if-ge v4, v3, :cond_37

    .line 4509
    invoke-interface {v2, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4510
    .local v5, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    const-wide/16 v6, 0x0

    cmp-long v8, v0, v6

    if-eqz v8, :cond_32

    iget-wide v8, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationDate:J

    cmp-long v6, v8, v6

    if-eqz v6, :cond_34

    iget-wide v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationDate:J

    cmp-long v6, v0, v6

    if-lez v6, :cond_34

    .line 4512
    :cond_32
    iget-wide v0, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationDate:J

    .line 4508
    .end local v5  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_34
    add-int/lit8 v4, v4, 0x1

    goto :goto_18

    .line 4515
    .end local v4  # "i":I
    :cond_37
    return-wide v0
.end method

.method private getPolicyFileDirectory(I)Ljava/io/File;
    .registers 4
    .param p1, "userId"  # I

    .line 3015
    if-nez p1, :cond_e

    .line 3016
    new-instance v0, Ljava/io/File;

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getDevicePolicyFilePathForSystemUser()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    goto :goto_14

    .line 3017
    :cond_e
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->environmentGetUserSystemDirectory(I)Ljava/io/File;

    move-result-object v0

    .line 3015
    :goto_14
    return-object v0
.end method

.method private getPowerManagerInternal()Landroid/os/PowerManagerInternal;
    .registers 2

    .line 14390
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPowerManagerInternal()Landroid/os/PowerManagerInternal;

    move-result-object v0

    return-object v0
.end method

.method private getStrictestPasswordRequirement(Landroid/content/ComponentName;IZLjava/util/function/Function;I)I
    .registers 14
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z
    .param p5, "minimumPasswordQuality"  # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "IZ",
            "Ljava/util/function/Function<",
            "Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;",
            "Ljava/lang/Integer;",
            ">;I)I"
        }
    .end annotation

    .line 4717
    .local p4, "getter":Ljava/util/function/Function;, "Ljava/util/function/Function<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/Integer;>;"
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 4718
    return v1

    .line 4720
    :cond_6
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 4721
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 4722
    if-eqz p1, :cond_22

    .line 4723
    :try_start_10
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4724
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_20

    invoke-interface {p4, v2}, Ljava/util/function/Function;->apply(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/Integer;

    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    move-result v1

    :cond_20
    monitor-exit v0

    return v1

    .line 4727
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_22
    const/4 v1, 0x0

    .line 4728
    .local v1, "maxValue":I
    nop

    .line 4729
    invoke-direct {p0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v2

    .line 4730
    .local v2, "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v3

    .line 4731
    .local v3, "N":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_2d
    if-ge v4, v3, :cond_50

    .line 4732
    invoke-interface {v2, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4733
    .local v5, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    invoke-static {v5, p5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isLimitPasswordAllowed(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;I)Z

    move-result v6

    if-nez v6, :cond_3c

    .line 4734
    goto :goto_4d

    .line 4736
    :cond_3c
    invoke-interface {p4, v5}, Ljava/util/function/Function;->apply(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/Integer;

    .line 4737
    .local v6, "adminValue":Ljava/lang/Integer;
    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I

    move-result v7

    if-le v7, v1, :cond_4d

    .line 4738
    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I

    move-result v7

    move v1, v7

    .line 4731
    .end local v5  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v6  # "adminValue":Ljava/lang/Integer;
    :cond_4d
    :goto_4d
    add-int/lit8 v4, v4, 0x1

    goto :goto_2d

    .line 4741
    .end local v4  # "i":I
    :cond_50
    monitor-exit v0

    return v1

    .line 4742
    .end local v1  # "maxValue":I
    .end local v2  # "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    .end local v3  # "N":I
    :catchall_52
    move-exception v1

    monitor-exit v0
    :try_end_54
    .catchall {:try_start_10 .. :try_end_54} :catchall_52

    throw v1
.end method

.method private getTargetSdk(Ljava/lang/String;I)I
    .registers 5
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userId"  # I

    .line 12122
    const/4 v0, 0x0

    :try_start_1
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-interface {v1, p1, v0, p2}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    .line 12123
    .local v1, "ai":Landroid/content/pm/ApplicationInfo;
    if-nez v1, :cond_a

    goto :goto_c

    :cond_a
    iget v0, v1, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_c} :catch_d

    .line 12124
    .local v0, "targetSdkVersion":I
    :goto_c
    return v0

    .line 12125
    .end local v0  # "targetSdkVersion":I
    .end local v1  # "ai":Landroid/content/pm/ApplicationInfo;
    :catch_d
    move-exception v1

    .line 12127
    .local v1, "e":Landroid/os/RemoteException;
    return v0
.end method

.method private getTransferOwnershipAdminExtras(Landroid/os/PersistableBundle;)Landroid/os/Bundle;
    .registers 4
    .param p1, "bundle"  # Landroid/os/PersistableBundle;

    .line 13797
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 13798
    .local v0, "extras":Landroid/os/Bundle;
    if-eqz p1, :cond_c

    .line 13799
    const-string v1, "android.app.extra.TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE"

    invoke-virtual {v0, v1, p1}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 13801
    :cond_c
    return-object v0
.end method

.method private getUserInfo(I)Landroid/content/pm/UserInfo;
    .registers 6
    .param p1, "userId"  # I

    .line 4979
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 4981
    .local v0, "token":J
    :try_start_6
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v2, p1}, Landroid/os/UserManager;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v2
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_12

    .line 4983
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 4981
    return-object v2

    .line 4983
    :catchall_12
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private getUserProvisioningState(I)I
    .registers 3
    .param p1, "userHandle"  # I

    .line 8275
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    iget v0, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserProvisioningState:I

    return v0
.end method

.method private handlePackagesChanged(Ljava/lang/String;I)V
    .registers 12
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userHandle"  # I

    .line 1780
    const/4 v0, 0x0

    .line 1785
    .local v0, "removedAdmin":Z
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 1786
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 1787
    :try_start_a
    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v3, v3, -0x1

    .local v3, "i":I
    :goto_12
    if-ltz v3, :cond_5f

    .line 1788
    iget-object v4, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :try_end_1c
    .catchall {:try_start_a .. :try_end_1c} :catchall_ae

    .line 1792
    .local v4, "aa":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :try_start_1c
    iget-object v5, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v5}, Landroid/app/admin/DeviceAdminInfo;->getPackageName()Ljava/lang/String;

    move-result-object v5

    .line 1793
    .local v5, "adminPackage":Ljava/lang/String;
    if-eqz p1, :cond_2a

    invoke-virtual {p1, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_5a

    .line 1794
    :cond_2a
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const/4 v7, 0x0

    invoke-interface {v6, v5, v7, p2}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;

    move-result-object v6

    if-eqz v6, :cond_43

    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    iget-object v7, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    .line 1795
    invoke-virtual {v7}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v7

    const/high16 v8, 0xc0000

    invoke-interface {v6, v7, v8, p2}, Landroid/content/pm/IPackageManager;->getReceiverInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;

    move-result-object v6

    if-nez v6, :cond_5a

    .line 1799
    :cond_43
    const/4 v0, 0x1

    .line 1800
    iget-object v6, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v6, v3}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 1801
    iget-object v6, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    iget-object v7, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v7}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v7

    invoke-virtual {v6, v7}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 1802
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushActiveAdminPackagesLocked(I)V

    .line 1803
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushMeteredDisabledPackagesLocked(I)V
    :try_end_5a
    .catch Landroid/os/RemoteException; {:try_start_1c .. :try_end_5a} :catch_5b
    .catchall {:try_start_1c .. :try_end_5a} :catchall_ae

    .line 1808
    .end local v5  # "adminPackage":Ljava/lang/String;
    :cond_5a
    goto :goto_5c

    .line 1806
    :catch_5b
    move-exception v5

    .line 1787
    .end local v4  # "aa":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :goto_5c
    add-int/lit8 v3, v3, -0x1

    goto :goto_12

    .line 1810
    .end local v3  # "i":I
    :cond_5f
    if-eqz v0, :cond_64

    .line 1811
    :try_start_61
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->validatePasswordOwnerLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;)V

    .line 1814
    :cond_64
    const/4 v3, 0x0

    .line 1817
    .local v3, "removedDelegate":Z
    iget-object v4, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    add-int/lit8 v4, v4, -0x1

    .local v4, "i":I
    :goto_6d
    if-ltz v4, :cond_86

    .line 1818
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v5, v4}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    .line 1819
    .local v5, "delegatePackage":Ljava/lang/String;
    invoke-direct {p0, p1, v5, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isRemovedPackage(Ljava/lang/String;Ljava/lang/String;I)Z

    move-result v6

    if-eqz v6, :cond_83

    .line 1820
    iget-object v6, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v6, v4}, Landroid/util/ArrayMap;->removeAt(I)Ljava/lang/Object;

    .line 1821
    const/4 v3, 0x1

    .line 1817
    .end local v5  # "delegatePackage":Ljava/lang/String;
    :cond_83
    add-int/lit8 v4, v4, -0x1

    goto :goto_6d

    .line 1826
    .end local v4  # "i":I
    :cond_86
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getOwnerComponent(I)Landroid/content/ComponentName;

    move-result-object v4

    .line 1827
    .local v4, "owner":Landroid/content/ComponentName;
    if-eqz p1, :cond_9e

    if-eqz v4, :cond_9e

    .line 1828
    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_9e

    .line 1829
    const-string/jumbo v5, "package-broadcast"

    invoke-direct {p0, p2, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->startOwnerService(ILjava/lang/String;)V

    .line 1833
    :cond_9e
    if-nez v0, :cond_a2

    if-eqz v3, :cond_a7

    .line 1834
    :cond_a2
    iget v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserHandle:I

    invoke-direct {p0, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 1836
    .end local v3  # "removedDelegate":Z
    .end local v4  # "owner":Landroid/content/ComponentName;
    :cond_a7
    monitor-exit v2
    :try_end_a8
    .catchall {:try_start_61 .. :try_end_a8} :catchall_ae

    .line 1837
    if-eqz v0, :cond_ad

    .line 1839
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushUserRestrictions(I)V

    .line 1841
    :cond_ad
    return-void

    .line 1836
    :catchall_ae
    move-exception v3

    :try_start_af
    monitor-exit v2
    :try_end_b0
    .catchall {:try_start_af .. :try_end_b0} :catchall_ae

    throw v3
.end method

.method private handlePasswordExpirationNotification(I)V
    .registers 19
    .param p1, "userHandle"  # I

    .line 3710
    move-object/from16 v1, p0

    move/from16 v2, p1

    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    move-object v3, v0

    .line 3711
    .local v3, "adminExtras":Landroid/os/Bundle;
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v0

    const-string v4, "android.intent.extra.USER"

    invoke-virtual {v3, v4, v0}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 3713
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v4

    monitor-enter v4

    .line 3714
    :try_start_18
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v5

    .line 3716
    .local v5, "now":J
    const/4 v0, 0x0

    invoke-direct {v1, v2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v7

    .line 3718
    .local v7, "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v8

    .line 3719
    .local v8, "N":I
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_26
    if-ge v9, v8, :cond_57

    .line 3720
    invoke-interface {v7, v9}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 3721
    .local v10, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v11, v10, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    const/4 v12, 0x6

    invoke-virtual {v11, v12}, Landroid/app/admin/DeviceAdminInfo;->usesPolicy(I)Z

    move-result v11

    if-eqz v11, :cond_54

    iget-wide v11, v10, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationTimeout:J

    const-wide/16 v13, 0x0

    cmp-long v11, v11, v13

    if-lez v11, :cond_54

    iget-wide v11, v10, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationDate:J

    sget-wide v15, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->EXPIRATION_GRACE_PERIOD_MS:J

    sub-long/2addr v11, v15

    cmp-long v11, v5, v11

    if-ltz v11, :cond_54

    iget-wide v11, v10, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationDate:J

    cmp-long v11, v11, v13

    if-lez v11, :cond_54

    .line 3725
    const-string v11, "android.app.action.ACTION_PASSWORD_EXPIRING"

    const/4 v12, 0x0

    invoke-virtual {v1, v10, v11, v3, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/os/Bundle;Landroid/content/BroadcastReceiver;)V

    .line 3719
    .end local v10  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_54
    add-int/lit8 v9, v9, 0x1

    goto :goto_26

    .line 3729
    .end local v9  # "i":I
    :cond_57
    iget-object v9, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v1, v9, v2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setExpirationAlarmCheckLocked(Landroid/content/Context;IZ)V

    .line 3730
    .end local v5  # "now":J
    .end local v7  # "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    .end local v8  # "N":I
    monitor-exit v4

    .line 3731
    return-void

    .line 3730
    :catchall_5e
    move-exception v0

    monitor-exit v4
    :try_end_60
    .catchall {:try_start_18 .. :try_end_60} :catchall_5e

    throw v0
.end method

.method private hasAccountFeatures(Landroid/accounts/AccountManager;Landroid/accounts/Account;[Ljava/lang/String;)Z
    .registers 7
    .param p1, "am"  # Landroid/accounts/AccountManager;
    .param p2, "account"  # Landroid/accounts/Account;
    .param p3, "features"  # [Ljava/lang/String;

    .line 13189
    const/4 v0, 0x0

    :try_start_1
    invoke-virtual {p1, p2, p3, v0, v0}, Landroid/accounts/AccountManager;->hasFeatures(Landroid/accounts/Account;[Ljava/lang/String;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;

    move-result-object v0

    invoke-interface {v0}, Landroid/accounts/AccountManagerFuture;->getResult()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Boolean;

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0
    :try_end_f
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_f} :catch_10

    return v0

    .line 13190
    :catch_10
    move-exception v0

    .line 13191
    .local v0, "e":Ljava/lang/Exception;
    const-string v1, "DevicePolicyManager"

    const-string v2, "Failed to get account feature"

    invoke-static {v1, v2, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13192
    const/4 v1, 0x0

    return v1
.end method

.method private hasFeatureManagedUsers()Z
    .registers 4

    .line 12088
    const/4 v0, 0x0

    :try_start_1
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const-string v2, "android.software.managed_users"

    invoke-interface {v1, v2, v0}, Landroid/content/pm/IPackageManager;->hasSystemFeature(Ljava/lang/String;I)Z

    move-result v0
    :try_end_9
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_9} :catch_a

    return v0

    .line 12089
    :catch_a
    move-exception v1

    .line 12090
    .local v1, "e":Landroid/os/RemoteException;
    return v0
.end method

.method private hasGrantProfileOwnerDevcieIdAccessPermission()Z
    .registers 3

    .line 12480
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.GRANT_PROFILE_OWNER_DEVICE_IDS_ACCESS"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_c

    const/4 v0, 0x1

    goto :goto_d

    :cond_c
    const/4 v0, 0x0

    :goto_d
    return v0
.end method

.method private hasIncompatibleAccountsOrNonAdbNoLock(ILandroid/content/ComponentName;)Z
    .registers 16
    .param p1, "userId"  # I
    .param p2, "owner"  # Landroid/content/ComponentName;

    .line 13138
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdb()Z

    move-result v0

    const/4 v1, 0x1

    if-nez v0, :cond_8

    .line 13139
    return v1

    .line 13141
    :cond_8
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->wtfIfInLock()V

    .line 13143
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2

    .line 13145
    .local v2, "token":J
    :try_start_11
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Landroid/accounts/AccountManager;->get(Landroid/content/Context;)Landroid/accounts/AccountManager;

    move-result-object v0

    .line 13146
    .local v0, "am":Landroid/accounts/AccountManager;
    invoke-virtual {v0, p1}, Landroid/accounts/AccountManager;->getAccountsAsUser(I)[Landroid/accounts/Account;

    move-result-object v4

    .line 13147
    .local v4, "accounts":[Landroid/accounts/Account;
    array-length v5, v4
    :try_end_1c
    .catchall {:try_start_11 .. :try_end_1c} :catchall_be

    const/4 v6, 0x0

    if-nez v5, :cond_26

    .line 13148
    nop

    .line 13183
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13148
    return v6

    .line 13150
    :cond_26
    :try_start_26
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v5

    monitor-enter v5
    :try_end_2b
    .catchall {:try_start_26 .. :try_end_2b} :catchall_be

    .line 13151
    if-eqz p2, :cond_ad

    :try_start_2d
    invoke-direct {p0, p2, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdminTestOnlyLocked(Landroid/content/ComponentName;I)Z

    move-result v7

    if-nez v7, :cond_35

    goto/16 :goto_ad

    .line 13156
    :cond_35
    monitor-exit v5
    :try_end_36
    .catchall {:try_start_2d .. :try_end_36} :catchall_bb

    .line 13158
    :try_start_36
    const-string v5, "android.account.DEVICE_OR_PROFILE_OWNER_ALLOWED"

    filled-new-array {v5}, [Ljava/lang/String;

    move-result-object v5

    .line 13160
    .local v5, "feature_allow":[Ljava/lang/String;
    const-string v7, "android.account.DEVICE_OR_PROFILE_OWNER_DISALLOWED"

    filled-new-array {v7}, [Ljava/lang/String;

    move-result-object v7

    .line 13163
    .local v7, "feature_disallow":[Ljava/lang/String;
    const/4 v8, 0x1

    .line 13164
    .local v8, "compatible":Z
    array-length v9, v4

    move v10, v6

    :goto_45
    if-ge v10, v9, :cond_92

    aget-object v11, v4, v10

    .line 13165
    .local v11, "account":Landroid/accounts/Account;
    invoke-direct {p0, v0, v11, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasAccountFeatures(Landroid/accounts/AccountManager;Landroid/accounts/Account;[Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_6c

    .line 13166
    const-string v9, "DevicePolicyManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v12, " has "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v12, v7, v6

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 13167
    const/4 v8, 0x0

    .line 13168
    goto :goto_92

    .line 13170
    :cond_6c
    invoke-direct {p0, v0, v11, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasAccountFeatures(Landroid/accounts/AccountManager;Landroid/accounts/Account;[Ljava/lang/String;)Z

    move-result v12

    if-nez v12, :cond_8f

    .line 13171
    const-string v9, "DevicePolicyManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v12, " doesn\'t have "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v12, v5, v6

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 13172
    const/4 v8, 0x0

    .line 13173
    goto :goto_92

    .line 13164
    .end local v11  # "account":Landroid/accounts/Account;
    :cond_8f
    add-int/lit8 v10, v10, 0x1

    goto :goto_45

    .line 13176
    :cond_92
    :goto_92
    if-eqz v8, :cond_9c

    .line 13177
    const-string v9, "DevicePolicyManager"

    const-string v10, "All accounts are compatible"

    invoke-static {v9, v10}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_a3

    .line 13179
    :cond_9c
    const-string v9, "DevicePolicyManager"

    const-string v10, "Found incompatible accounts"

    invoke-static {v9, v10}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_a3
    .catchall {:try_start_36 .. :try_end_a3} :catchall_be

    .line 13181
    :goto_a3
    if-nez v8, :cond_a6

    goto :goto_a7

    :cond_a6
    move v1, v6

    .line 13183
    :goto_a7
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13181
    return v1

    .line 13152
    .end local v5  # "feature_allow":[Ljava/lang/String;
    .end local v7  # "feature_disallow":[Ljava/lang/String;
    .end local v8  # "compatible":Z
    :cond_ad
    :goto_ad
    :try_start_ad
    const-string v6, "DevicePolicyManager"

    const-string v7, "Non test-only owner can\'t be installed with existing accounts."

    invoke-static {v6, v7}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13154
    monitor-exit v5
    :try_end_b5
    .catchall {:try_start_ad .. :try_end_b5} :catchall_bb

    .line 13183
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13154
    return v1

    .line 13156
    :catchall_bb
    move-exception v1

    :try_start_bc
    monitor-exit v5
    :try_end_bd
    .catchall {:try_start_bc .. :try_end_bd} :catchall_bb

    .end local v2  # "token":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "userId":I
    .end local p2  # "owner":Landroid/content/ComponentName;
    :try_start_bd
    throw v1
    :try_end_be
    .catchall {:try_start_bd .. :try_end_be} :catchall_be

    .line 13183
    .end local v0  # "am":Landroid/accounts/AccountManager;
    .end local v4  # "accounts":[Landroid/accounts/Account;
    .restart local v2  # "token":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "userId":I
    .restart local p2  # "owner":Landroid/content/ComponentName;
    :catchall_be
    move-exception v0

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0
.end method

.method private hasPaired(I)Z
    .registers 3
    .param p1, "userHandle"  # I

    .line 8258
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 8259
    const/4 v0, 0x1

    return v0

    .line 8261
    :cond_6
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    iget-boolean v0, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPaired:Z

    return v0
.end method

.method private hasProfileOwner(I)Z
    .registers 4
    .param p1, "userId"  # I

    .line 7899
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7900
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p1}, Lcom/android/server/devicepolicy/Owners;->hasProfileOwner(I)Z

    move-result v1

    monitor-exit v0

    return v1

    .line 7901
    :catchall_d
    move-exception v1

    monitor-exit v0
    :try_end_f
    .catchall {:try_start_5 .. :try_end_f} :catchall_d

    throw v1
.end method

.method private hasUserSetupCompleted(I)Z
    .registers 3
    .param p1, "userHandle"  # I

    .line 8251
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 8252
    const/4 v0, 0x1

    return v0

    .line 8254
    :cond_6
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    iget-boolean v0, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserSetupComplete:Z

    return v0
.end method

.method private inEphemeralUserSession()Z
    .registers 5

    .line 14381
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v0}, Landroid/os/UserManager;->getUsers()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_a
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_27

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/UserInfo;

    .line 14382
    .local v1, "userInfo":Landroid/content/pm/UserInfo;
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getUserManager()Landroid/os/UserManager;

    move-result-object v2

    iget v3, v1, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {v2, v3}, Landroid/os/UserManager;->isUserEphemeral(I)Z

    move-result v2

    if-eqz v2, :cond_26

    .line 14383
    const/4 v0, 0x1

    return v0

    .line 14385
    .end local v1  # "userInfo":Landroid/content/pm/UserInfo;
    :cond_26
    goto :goto_a

    .line 14386
    :cond_27
    const/4 v0, 0x0

    return v0
.end method

.method private isActivePasswordSufficientForUserLocked(ZLandroid/app/admin/PasswordMetrics;IZ)Z
    .registers 6
    .param p1, "passwordValidAtLastCheckpoint"  # Z
    .param p2, "metrics"  # Landroid/app/admin/PasswordMetrics;
    .param p3, "userHandle"  # I
    .param p4, "parent"  # Z

    .line 4798
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->storageManagerIsFileBasedEncryptionEnabled()Z

    move-result v0

    if-nez v0, :cond_b

    if-nez p2, :cond_b

    .line 4804
    return p1

    .line 4807
    :cond_b
    if-nez p2, :cond_13

    .line 4810
    new-instance v0, Landroid/app/admin/PasswordMetrics;

    invoke-direct {v0}, Landroid/app/admin/PasswordMetrics;-><init>()V

    move-object p2, v0

    .line 4813
    :cond_13
    invoke-direct {p0, p2, p3, p4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isPasswordSufficientForUserWithoutCheckpointLocked(Landroid/app/admin/PasswordMetrics;IZ)Z

    move-result v0

    return v0
.end method

.method private isAdb()Z
    .registers 3

    .line 13197
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    .line 13198
    .local v0, "callingUid":I
    const/16 v1, 0x7d0

    if-eq v0, v1, :cond_f

    if-nez v0, :cond_d

    goto :goto_f

    :cond_d
    const/4 v1, 0x0

    goto :goto_10

    :cond_f
    :goto_f
    const/4 v1, 0x1

    :goto_10
    return v1
.end method

.method private isAdminAffectedByRestriction(Landroid/content/ComponentName;Ljava/lang/String;I)Z
    .registers 7
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "userRestriction"  # Ljava/lang/String;
    .param p3, "userId"  # I

    .line 9793
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-static {p3}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v1

    invoke-virtual {v0, p2, v1}, Landroid/os/UserManager;->getUserRestrictionSource(Ljava/lang/String;Landroid/os/UserHandle;)I

    move-result v0

    if-eqz v0, :cond_20

    const/4 v1, 0x2

    const/4 v2, 0x1

    if-eq v0, v1, :cond_1a

    const/4 v1, 0x4

    if-eq v0, v1, :cond_14

    .line 9801
    return v2

    .line 9799
    :cond_14
    invoke-virtual {p0, p1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProfileOwner(Landroid/content/ComponentName;I)Z

    move-result v0

    xor-int/2addr v0, v2

    return v0

    .line 9797
    :cond_1a
    invoke-virtual {p0, p1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v0

    xor-int/2addr v0, v2

    return v0

    .line 9795
    :cond_20
    const/4 v0, 0x0

    return v0
.end method

.method private isAdminTestOnlyLocked(Landroid/content/ComponentName;I)Z
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 4077
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 4078
    .local v0, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v0, :cond_c

    iget-boolean v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->testOnlyAdmin:Z

    if-eqz v1, :cond_c

    const/4 v1, 0x1

    goto :goto_d

    :cond_c
    const/4 v1, 0x0

    :goto_d
    return v1
.end method

.method private isCallerDelegate(Ljava/lang/String;ILjava/lang/String;)Z
    .registers 10
    .param p1, "callerPackage"  # Ljava/lang/String;
    .param p2, "callerUid"  # I
    .param p3, "scope"  # Ljava/lang/String;

    .line 6273
    const-string v0, "callerPackage is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 6274
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DELEGATIONS:[Ljava/lang/String;

    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-interface {v0, p3}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_44

    .line 6279
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    .line 6280
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 6282
    :try_start_1a
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 6284
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v3, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/List;

    .line 6286
    .local v3, "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    const/4 v4, 0x0

    if-eqz v3, :cond_3f

    invoke-interface {v3, p3}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v5
    :try_end_2d
    .catchall {:try_start_1a .. :try_end_2d} :catchall_41

    if-eqz v5, :cond_3f

    .line 6289
    :try_start_2f
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v5

    .line 6290
    invoke-virtual {v5, p1, v0}, Landroid/content/pm/PackageManager;->getPackageUidAsUser(Ljava/lang/String;I)I

    move-result v5
    :try_end_39
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_2f .. :try_end_39} :catch_3e
    .catchall {:try_start_2f .. :try_end_39} :catchall_41

    .line 6292
    .local v5, "uid":I
    if-ne v5, p2, :cond_3c

    const/4 v4, 0x1

    :cond_3c
    :try_start_3c
    monitor-exit v1

    return v4

    .line 6293
    .end local v5  # "uid":I
    :catch_3e
    move-exception v5

    .line 6297
    :cond_3f
    monitor-exit v1

    return v4

    .line 6298
    .end local v2  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v3  # "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :catchall_41
    move-exception v2

    monitor-exit v1
    :try_end_43
    .catchall {:try_start_3c .. :try_end_43} :catchall_41

    throw v2

    .line 6275
    .end local v0  # "userId":I
    :cond_44
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unexpected delegation scope: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private isCallerWithSystemUid()Z
    .registers 3

    .line 8804
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    invoke-static {v0, v1}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v0

    return v0
.end method

.method private isCallingFromPackage(Ljava/lang/String;I)Z
    .registers 7
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "callingUid"  # I

    .line 14440
    const/4 v0, 0x0

    :try_start_1
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    .line 14441
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 14440
    invoke-virtual {v1, p1, v2}, Landroid/content/pm/PackageManager;->getPackageUidAsUser(Ljava/lang/String;I)I

    move-result v1
    :try_end_f
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_1 .. :try_end_f} :catch_13

    .line 14442
    .local v1, "packageUid":I
    if-ne v1, p2, :cond_12

    const/4 v0, 0x1

    :cond_12
    return v0

    .line 14443
    .end local v1  # "packageUid":I
    :catch_13
    move-exception v1

    .line 14444
    .local v1, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    const-string v2, "DevicePolicyManager"

    const-string v3, "Calling package not found"

    invoke-static {v2, v3, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 14445
    return v0
.end method

.method private isCrossProfileQuickContactDisabled(I)Z
    .registers 3
    .param p1, "userId"  # I

    .line 10579
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCrossProfileCallerIdDisabledForUser(I)Z

    move-result v0

    if-eqz v0, :cond_e

    .line 10580
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCrossProfileContactsSearchDisabledForUser(I)Z

    move-result v0

    if-eqz v0, :cond_e

    const/4 v0, 0x1

    goto :goto_f

    :cond_e
    const/4 v0, 0x0

    .line 10579
    :goto_f
    return v0
.end method

.method private isCurrentUserDemo()Z
    .registers 6

    .line 12858
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Landroid/os/UserManager;->isDeviceInDemoMode(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_2b

    .line 12859
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 12860
    .local v0, "userId":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 12862
    .local v1, "callingIdentity":J
    :try_start_14
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v3, v0}, Landroid/os/UserManager;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v3

    invoke-virtual {v3}, Landroid/content/pm/UserInfo;->isDemo()Z

    move-result v3
    :try_end_1e
    .catchall {:try_start_14 .. :try_end_1e} :catchall_24

    .line 12864
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 12862
    return v3

    .line 12864
    :catchall_24
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3

    .line 12867
    .end local v0  # "userId":I
    .end local v1  # "callingIdentity":J
    :cond_2b
    const/4 v0, 0x0

    return v0
.end method

.method private isDeviceAB()Z
    .registers 3

    .line 14239
    nop

    .line 14240
    const-string/jumbo v0, "ro.build.ab_update"

    const-string v1, ""

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 14239
    const-string/jumbo v1, "true"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v0

    return v0
.end method

.method private isDeviceOwnerPackage(Ljava/lang/String;I)Z
    .registers 5
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userId"  # I

    .line 7879
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7880
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v1

    if-eqz v1, :cond_23

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 7881
    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v1

    if-ne v1, p2, :cond_23

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 7882
    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerPackageName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_23

    const/4 v1, 0x1

    goto :goto_24

    :cond_23
    const/4 v1, 0x0

    :goto_24
    monitor-exit v0

    .line 7880
    return v1

    .line 7883
    :catchall_26
    move-exception v1

    monitor-exit v0
    :try_end_28
    .catchall {:try_start_5 .. :try_end_28} :catchall_26

    throw v1
.end method

.method private isEncryptionSupported()Z
    .registers 2

    .line 7136
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getEncryptionStatus()I

    move-result v0

    if-eqz v0, :cond_8

    const/4 v0, 0x1

    goto :goto_9

    :cond_8
    const/4 v0, 0x0

    :goto_9
    return v0
.end method

.method private static isLimitPasswordAllowed(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;I)Z
    .registers 4
    .param p0, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .param p1, "minPasswordQuality"  # I

    .line 11486
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iget v0, v0, Landroid/app/admin/PasswordMetrics;->quality:I

    const/4 v1, 0x0

    if-ge v0, p1, :cond_8

    .line 11487
    return v1

    .line 11489
    :cond_8
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v0, v1}, Landroid/app/admin/DeviceAdminInfo;->usesPolicy(I)Z

    move-result v0

    return v0
.end method

.method private isLockScreenSecureUnchecked(I)Z
    .registers 6
    .param p1, "userId"  # I

    .line 5231
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 5233
    .local v0, "ident":J
    :try_start_6
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v2, p1}, Lcom/android/internal/widget/LockPatternUtils;->isSecure(I)Z

    move-result v2
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_12

    .line 5235
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5233
    return v2

    .line 5235
    :catchall_12
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private isLockTaskFeatureEnabled(I)Z
    .registers 4
    .param p1, "lockTaskFeature"  # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 14366
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 14367
    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v0

    invoke-interface {v0}, Landroid/app/IActivityManager;->getCurrentUser()Landroid/content/pm/UserInfo;

    move-result-object v0

    iget v0, v0, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    iget v0, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskFeatures:I

    .line 14368
    .local v0, "lockTaskFeatures":I
    and-int v1, v0, p1

    if-ne v1, p1, :cond_18

    const/4 v1, 0x1

    goto :goto_19

    :cond_18
    const/4 v1, 0x0

    :goto_19
    return v1
.end method

.method private isManagedKioskInternal()Z
    .registers 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 14357
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v0

    const/4 v1, 0x1

    if-eqz v0, :cond_28

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 14358
    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v0

    invoke-interface {v0}, Landroid/app/IActivityManager;->getLockTaskModeState()I

    move-result v0

    if-ne v0, v1, :cond_28

    .line 14360
    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isLockTaskFeatureEnabled(I)Z

    move-result v0

    if-nez v0, :cond_28

    .line 14361
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->deviceHasKeyguard()Z

    move-result v0

    if-nez v0, :cond_28

    .line 14362
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->inEphemeralUserSession()Z

    move-result v0

    if-nez v0, :cond_28

    goto :goto_29

    :cond_28
    const/4 v1, 0x0

    .line 14357
    :goto_29
    return v1
.end method

.method private isManagedProfile(I)Z
    .registers 4
    .param p1, "userHandle"  # I

    .line 8833
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v0

    .line 8834
    .local v0, "user":Landroid/content/pm/UserInfo;
    if-eqz v0, :cond_e

    invoke-virtual {v0}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v1

    if-eqz v1, :cond_e

    const/4 v1, 0x1

    goto :goto_f

    :cond_e
    const/4 v1, 0x0

    :goto_f
    return v1
.end method

.method private isNetworkLoggingEnabledInternalLocked()Z
    .registers 3

    .line 13337
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 13338
    .local v0, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v0, :cond_c

    iget-boolean v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->isNetworkLoggingEnabled:Z

    if-eqz v1, :cond_c

    const/4 v1, 0x1

    goto :goto_d

    :cond_c
    const/4 v1, 0x0

    :goto_d
    return v1
.end method

.method private isPackageTestOnly(Ljava/lang/String;I)Z
    .registers 7
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userHandle"  # I

    .line 4060
    :try_start_0
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    const/high16 v1, 0xc0000

    invoke-interface {v0, p1, v1, p2}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_c} :catch_38

    .line 4065
    .local v0, "ai":Landroid/content/pm/ApplicationInfo;
    nop

    .line 4066
    if-eqz v0, :cond_19

    .line 4070
    iget v1, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v1, v1, 0x100

    if-eqz v1, :cond_17

    const/4 v1, 0x1

    goto :goto_18

    :cond_17
    const/4 v1, 0x0

    :goto_18
    return v1

    .line 4067
    :cond_19
    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Couldn\'t find package: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " on user "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4063
    .end local v0  # "ai":Landroid/content/pm/ApplicationInfo;
    :catch_38
    move-exception v0

    .line 4064
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v1, Ljava/lang/IllegalStateException;

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method private isPasswordSufficientForUserWithoutCheckpointLocked(Landroid/app/admin/PasswordMetrics;IZ)Z
    .registers 10
    .param p1, "metrics"  # Landroid/app/admin/PasswordMetrics;
    .param p2, "userId"  # I
    .param p3, "parent"  # Z

    .line 4823
    const/4 v0, 0x0

    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordQuality(Landroid/content/ComponentName;IZ)I

    move-result v1

    .line 4825
    .local v1, "requiredQuality":I
    const/4 v2, 0x0

    const/high16 v3, 0x20000

    if-lt v1, v3, :cond_13

    iget v3, p1, Landroid/app/admin/PasswordMetrics;->length:I

    .line 4826
    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumLength(Landroid/content/ComponentName;IZ)I

    move-result v4

    if-ge v3, v4, :cond_13

    .line 4827
    return v2

    .line 4832
    :cond_13
    const/high16 v3, 0x60000

    const/4 v4, 0x1

    if-ne v1, v3, :cond_4c

    .line 4833
    iget v3, p1, Landroid/app/admin/PasswordMetrics;->upperCase:I

    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumUpperCase(Landroid/content/ComponentName;IZ)I

    move-result v5

    if-lt v3, v5, :cond_4a

    iget v3, p1, Landroid/app/admin/PasswordMetrics;->lowerCase:I

    .line 4834
    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumLowerCase(Landroid/content/ComponentName;IZ)I

    move-result v5

    if-lt v3, v5, :cond_4a

    iget v3, p1, Landroid/app/admin/PasswordMetrics;->letters:I

    .line 4835
    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumLetters(Landroid/content/ComponentName;IZ)I

    move-result v5

    if-lt v3, v5, :cond_4a

    iget v3, p1, Landroid/app/admin/PasswordMetrics;->numeric:I

    .line 4836
    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumNumeric(Landroid/content/ComponentName;IZ)I

    move-result v5

    if-lt v3, v5, :cond_4a

    iget v3, p1, Landroid/app/admin/PasswordMetrics;->symbols:I

    .line 4837
    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumSymbols(Landroid/content/ComponentName;IZ)I

    move-result v5

    if-lt v3, v5, :cond_4a

    iget v3, p1, Landroid/app/admin/PasswordMetrics;->nonLetter:I

    .line 4838
    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumNonLetter(Landroid/content/ComponentName;IZ)I

    move-result v0

    if-lt v3, v0, :cond_4a

    move v2, v4

    goto :goto_4b

    :cond_4a
    nop

    .line 4833
    :goto_4b
    return v2

    .line 4840
    :cond_4c
    iget v0, p1, Landroid/app/admin/PasswordMetrics;->quality:I

    if-lt v0, v1, :cond_51

    move v2, v4

    :cond_51
    return v2
.end method

.method private isProfileOwnerPackage(Ljava/lang/String;I)Z
    .registers 5
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userId"  # I

    .line 7887
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7888
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p2}, Lcom/android/server/devicepolicy/Owners;->hasProfileOwner(I)Z

    move-result v1

    if-eqz v1, :cond_1b

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 7889
    invoke-virtual {v1, p2}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerPackage(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1b

    const/4 v1, 0x1

    goto :goto_1c

    :cond_1b
    const/4 v1, 0x0

    :goto_1c
    monitor-exit v0

    .line 7888
    return v1

    .line 7890
    :catchall_1e
    move-exception v1

    monitor-exit v0
    :try_end_20
    .catchall {:try_start_5 .. :try_end_20} :catchall_1e

    throw v1
.end method

.method private isRemovedPackage(Ljava/lang/String;Ljava/lang/String;I)Z
    .registers 6
    .param p1, "changedPackage"  # Ljava/lang/String;
    .param p2, "targetPackage"  # Ljava/lang/String;
    .param p3, "userHandle"  # I

    .line 1845
    const/4 v0, 0x0

    if-eqz p2, :cond_17

    if-eqz p1, :cond_b

    .line 1846
    :try_start_5
    invoke-virtual {p1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_17

    :cond_b
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    .line 1847
    invoke-interface {v1, p2, v0, p3}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;

    move-result-object v1
    :try_end_11
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_11} :catch_15

    if-nez v1, :cond_17

    const/4 v0, 0x1

    goto :goto_18

    .line 1848
    :catch_15
    move-exception v1

    .line 1852
    return v0

    .line 1847
    :cond_17
    nop

    .line 1845
    :goto_18
    return v0
.end method

.method private isSeparateProfileChallengeEnabled(I)Z
    .registers 6
    .param p1, "userHandle"  # I

    .line 4276
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 4278
    .local v0, "ident":J
    :try_start_6
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v2, p1}, Lcom/android/internal/widget/LockPatternUtils;->isSeparateProfileChallengeEnabled(I)Z

    move-result v2
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_12

    .line 4280
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 4278
    return v2

    .line 4280
    :catchall_12
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private isSystemApp(Landroid/content/pm/IPackageManager;Ljava/lang/String;I)Z
    .registers 8
    .param p1, "pm"  # Landroid/content/pm/IPackageManager;
    .param p2, "packageName"  # Ljava/lang/String;
    .param p3, "userId"  # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 10311
    const/16 v0, 0x2000

    invoke-interface {p1, p2, v0, p3}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0

    .line 10313
    .local v0, "appInfo":Landroid/content/pm/ApplicationInfo;
    if-eqz v0, :cond_11

    .line 10317
    iget v1, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    const/4 v2, 0x1

    and-int/2addr v1, v2

    if-eqz v1, :cond_f

    goto :goto_10

    :cond_f
    const/4 v2, 0x0

    :goto_10
    return v2

    .line 10314
    :cond_11
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "The application "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " is not present on this device"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method private isUserAffiliatedWithDeviceLocked(I)Z
    .registers 10
    .param p1, "userId"  # I

    .line 12605
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v0

    const/4 v1, 0x0

    if-nez v0, :cond_a

    .line 12606
    return v1

    .line 12608
    :cond_a
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v0

    const/4 v2, 0x1

    if-ne p1, v0, :cond_14

    .line 12610
    return v2

    .line 12612
    :cond_14
    if-nez p1, :cond_17

    .line 12616
    return v2

    .line 12619
    :cond_17
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwner(I)Landroid/content/ComponentName;

    move-result-object v0

    .line 12620
    .local v0, "profileOwner":Landroid/content/ComponentName;
    if-nez v0, :cond_1e

    .line 12621
    return v1

    .line 12624
    :cond_1e
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v3

    iget-object v3, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAffiliationIds:Ljava/util/Set;

    .line 12625
    .local v3, "userAffiliationIds":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    nop

    .line 12626
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    iget-object v4, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAffiliationIds:Ljava/util/Set;

    .line 12627
    .local v4, "deviceAffiliationIds":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_2f
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_43

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/String;

    .line 12628
    .local v6, "id":Ljava/lang/String;
    invoke-interface {v4, v6}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_42

    .line 12629
    return v2

    .line 12631
    .end local v6  # "id":Ljava/lang/String;
    :cond_42
    goto :goto_2f

    .line 12632
    :cond_43
    return v1
.end method

.method static synthetic lambda$getPasswordHistoryLength$2(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;)Ljava/lang/Integer;
    .registers 2
    .param p0, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4344
    iget v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordHistoryLength:I

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    return-object v0
.end method

.method static synthetic lambda$getPasswordMinimumLength$1(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;)Ljava/lang/Integer;
    .registers 2
    .param p0, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4312
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iget v0, v0, Landroid/app/admin/PasswordMetrics;->length:I

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    return-object v0
.end method

.method static synthetic lambda$getPasswordMinimumLetters$5(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;)Ljava/lang/Integer;
    .registers 2
    .param p0, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4616
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iget v0, v0, Landroid/app/admin/PasswordMetrics;->letters:I

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    return-object v0
.end method

.method static synthetic lambda$getPasswordMinimumLowerCase$4(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;)Ljava/lang/Integer;
    .registers 2
    .param p0, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4585
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iget v0, v0, Landroid/app/admin/PasswordMetrics;->lowerCase:I

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    return-object v0
.end method

.method static synthetic lambda$getPasswordMinimumNonLetter$8(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;)Ljava/lang/Integer;
    .registers 2
    .param p0, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4709
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iget v0, v0, Landroid/app/admin/PasswordMetrics;->nonLetter:I

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    return-object v0
.end method

.method static synthetic lambda$getPasswordMinimumNumeric$6(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;)Ljava/lang/Integer;
    .registers 2
    .param p0, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4647
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iget v0, v0, Landroid/app/admin/PasswordMetrics;->numeric:I

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    return-object v0
.end method

.method static synthetic lambda$getPasswordMinimumSymbols$7(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;)Ljava/lang/Integer;
    .registers 2
    .param p0, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4678
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iget v0, v0, Landroid/app/admin/PasswordMetrics;->symbols:I

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    return-object v0
.end method

.method static synthetic lambda$getPasswordMinimumUpperCase$3(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;)Ljava/lang/Integer;
    .registers 2
    .param p0, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4557
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iget v0, v0, Landroid/app/admin/PasswordMetrics;->upperCase:I

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    return-object v0
.end method

.method static synthetic lambda$setPermissionGrantState$13(ZLandroid/os/RemoteCallback;Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Boolean;)V
    .registers 11
    .param p0, "isPostQAdmin"  # Z
    .param p1, "callback"  # Landroid/os/RemoteCallback;
    .param p2, "admin"  # Landroid/content/ComponentName;
    .param p3, "callerPackage"  # Ljava/lang/String;
    .param p4, "permission"  # Ljava/lang/String;
    .param p5, "grantState"  # I
    .param p6, "permissionWasSet"  # Ljava/lang/Boolean;

    .line 11781
    if-eqz p0, :cond_d

    invoke-virtual {p6}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    if-nez v0, :cond_d

    .line 11782
    const/4 v0, 0x0

    invoke-virtual {p1, v0}, Landroid/os/RemoteCallback;->sendResult(Landroid/os/Bundle;)V

    .line 11783
    return-void

    .line 11786
    :cond_d
    const/4 v0, 0x1

    const/4 v1, 0x0

    if-nez p2, :cond_13

    move v2, v0

    goto :goto_14

    :cond_13
    move v2, v1

    .line 11787
    .local v2, "isDelegate":Z
    :goto_14
    const/16 v3, 0x13

    .line 11788
    invoke-static {v3}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 11790
    invoke-virtual {v3, p3}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    new-array v0, v0, [Ljava/lang/String;

    aput-object p4, v0, v1

    .line 11791
    invoke-virtual {v3, v0}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 11792
    invoke-virtual {v0, p5}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 11793
    invoke-virtual {v0, v2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 11794
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 11796
    sget-object v0, Landroid/os/Bundle;->EMPTY:Landroid/os/Bundle;

    invoke-virtual {p1, v0}, Landroid/os/RemoteCallback;->sendResult(Landroid/os/Bundle;)V

    .line 11797
    return-void
.end method

.method private loadAdminDataAsync()V
    .registers 3

    .line 3836
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    new-instance v1, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$_Nw-YGl5ncBg-LJs8W81WNW6xoU;

    invoke-direct {v1, p0}, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$_Nw-YGl5ncBg-LJs8W81WNW6xoU;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;)V

    invoke-virtual {v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->postOnSystemServerInitThreadPool(Ljava/lang/Runnable;)V

    .line 3842
    return-void
.end method

.method private loadConstants()Lcom/android/server/devicepolicy/DevicePolicyConstants;
    .registers 3

    .line 14450
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 14451
    const-string v1, "device_policy_constants"

    invoke-virtual {v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalGetString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 14450
    invoke-static {v0}, Lcom/android/server/devicepolicy/DevicePolicyConstants;->loadFromString(Ljava/lang/String;)Lcom/android/server/devicepolicy/DevicePolicyConstants;

    move-result-object v0

    return-object v0
.end method

.method private loadSettingsLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;I)V
    .registers 28
    .param p1, "policy"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .param p2, "userHandle"  # I

    .line 3233
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move/from16 v3, p2

    const-string v4, "delegation-app-restrictions"

    const-string v5, "delegation-cert-install"

    const-string v6, "DevicePolicyManager"

    invoke-direct {v1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->makeJournaledFile(I)Lcom/android/internal/util/JournaledFile;

    move-result-object v7

    .line 3234
    .local v7, "journal":Lcom/android/internal/util/JournaledFile;
    const/4 v8, 0x0

    .line 3235
    .local v8, "stream":Ljava/io/FileInputStream;
    invoke-virtual {v7}, Lcom/android/internal/util/JournaledFile;->chooseForRead()Ljava/io/File;

    move-result-object v9

    .line 3236
    .local v9, "file":Ljava/io/File;
    const/4 v10, 0x0

    .line 3238
    .local v10, "needsRewrite":Z
    :try_start_16
    new-instance v11, Ljava/io/FileInputStream;

    invoke-direct {v11, v9}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_1b
    .catch Ljava/io/FileNotFoundException; {:try_start_16 .. :try_end_1b} :catch_44b
    .catch Ljava/lang/NullPointerException; {:try_start_16 .. :try_end_1b} :catch_432
    .catch Ljava/lang/NumberFormatException; {:try_start_16 .. :try_end_1b} :catch_432
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_16 .. :try_end_1b} :catch_432
    .catch Ljava/io/IOException; {:try_start_16 .. :try_end_1b} :catch_432
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_16 .. :try_end_1b} :catch_432

    move-object v8, v11

    .line 3239
    :try_start_1c
    invoke-static {}, Landroid/util/Xml;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;

    move-result-object v11

    .line 3240
    .local v11, "parser":Lorg/xmlpull/v1/XmlPullParser;
    sget-object v12, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v12}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v12

    invoke-interface {v11, v8, v12}, Lorg/xmlpull/v1/XmlPullParser;->setInput(Ljava/io/InputStream;Ljava/lang/String;)V

    .line 3243
    :goto_29
    invoke-interface {v11}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v12

    move v13, v12

    .local v13, "type":I
    const/4 v14, 0x1

    if-eq v12, v14, :cond_35

    const/4 v12, 0x2

    if-eq v13, v12, :cond_35

    goto :goto_29

    .line 3246
    :cond_35
    invoke-interface {v11}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v12

    .line 3247
    .local v12, "tag":Ljava/lang/String;
    const-string/jumbo v15, "policies"

    invoke-virtual {v15, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v15

    if-eqz v15, :cond_401

    .line 3253
    const-string/jumbo v15, "permission-provider"

    const/4 v14, 0x0

    invoke-interface {v11, v14, v15}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v15
    :try_end_4a
    .catch Ljava/io/FileNotFoundException; {:try_start_1c .. :try_end_4a} :catch_42c
    .catch Ljava/lang/NullPointerException; {:try_start_1c .. :try_end_4a} :catch_425
    .catch Ljava/lang/NumberFormatException; {:try_start_1c .. :try_end_4a} :catch_425
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1c .. :try_end_4a} :catch_425
    .catch Ljava/io/IOException; {:try_start_1c .. :try_end_4a} :catch_425
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_1c .. :try_end_4a} :catch_425

    .line 3254
    .local v15, "permissionProvider":Ljava/lang/String;
    if-eqz v15, :cond_5e

    .line 3255
    :try_start_4c
    invoke-static {v15}, Landroid/content/ComponentName;->unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName;

    move-result-object v14

    iput-object v14, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRestrictionsProvider:Landroid/content/ComponentName;
    :try_end_52
    .catch Ljava/io/FileNotFoundException; {:try_start_4c .. :try_end_52} :catch_59
    .catch Ljava/lang/NullPointerException; {:try_start_4c .. :try_end_52} :catch_53
    .catch Ljava/lang/NumberFormatException; {:try_start_4c .. :try_end_52} :catch_53
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_4c .. :try_end_52} :catch_53
    .catch Ljava/io/IOException; {:try_start_4c .. :try_end_52} :catch_53
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_4c .. :try_end_52} :catch_53

    goto :goto_5e

    .line 3421
    .end local v11  # "parser":Lorg/xmlpull/v1/XmlPullParser;
    .end local v12  # "tag":Ljava/lang/String;
    .end local v13  # "type":I
    .end local v15  # "permissionProvider":Ljava/lang/String;
    :catch_53
    move-exception v0

    move-object v4, v0

    move-object/from16 v16, v7

    goto/16 :goto_436

    .line 3419
    :catch_59
    move-exception v0

    move-object/from16 v16, v7

    goto/16 :goto_44e

    .line 3257
    .restart local v11  # "parser":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v12  # "tag":Ljava/lang/String;
    .restart local v13  # "type":I
    .restart local v15  # "permissionProvider":Ljava/lang/String;
    :cond_5e
    :goto_5e
    :try_start_5e
    const-string/jumbo v14, "setup-complete"
    :try_end_61
    .catch Ljava/io/FileNotFoundException; {:try_start_5e .. :try_end_61} :catch_42c
    .catch Ljava/lang/NullPointerException; {:try_start_5e .. :try_end_61} :catch_425
    .catch Ljava/lang/NumberFormatException; {:try_start_5e .. :try_end_61} :catch_425
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_5e .. :try_end_61} :catch_425
    .catch Ljava/io/IOException; {:try_start_5e .. :try_end_61} :catch_425
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_5e .. :try_end_61} :catch_425

    move-object/from16 v16, v7

    const/4 v7, 0x0

    .end local v7  # "journal":Lcom/android/internal/util/JournaledFile;
    .local v16, "journal":Lcom/android/internal/util/JournaledFile;
    :try_start_64
    invoke-interface {v11, v7, v14}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v14
    :try_end_68
    .catch Ljava/io/FileNotFoundException; {:try_start_64 .. :try_end_68} :catch_3fd
    .catch Ljava/lang/NullPointerException; {:try_start_64 .. :try_end_68} :catch_3f8
    .catch Ljava/lang/NumberFormatException; {:try_start_64 .. :try_end_68} :catch_3f8
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_64 .. :try_end_68} :catch_3f8
    .catch Ljava/io/IOException; {:try_start_64 .. :try_end_68} :catch_3f8
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_64 .. :try_end_68} :catch_3f8

    move-object v7, v14

    .line 3258
    .local v7, "userSetupComplete":Ljava/lang/String;
    if-eqz v7, :cond_7b

    move-object/from16 v17, v8

    const/4 v14, 0x1

    .end local v8  # "stream":Ljava/io/FileInputStream;
    .local v17, "stream":Ljava/io/FileInputStream;
    :try_start_6e
    invoke-static {v14}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v8, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_7d

    .line 3259
    iput-boolean v14, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserSetupComplete:Z

    goto :goto_7d

    .line 3258
    .end local v17  # "stream":Ljava/io/FileInputStream;
    .restart local v8  # "stream":Ljava/io/FileInputStream;
    :cond_7b
    move-object/from16 v17, v8

    .line 3261
    .end local v8  # "stream":Ljava/io/FileInputStream;
    .restart local v17  # "stream":Ljava/io/FileInputStream;
    :cond_7d
    :goto_7d
    const-string v8, "device-paired"

    const/4 v14, 0x0

    invoke-interface {v11, v14, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    .line 3262
    .local v8, "paired":Ljava/lang/String;
    if-eqz v8, :cond_96

    move-object/from16 v18, v7

    const/4 v14, 0x1

    .end local v7  # "userSetupComplete":Ljava/lang/String;
    .local v18, "userSetupComplete":Ljava/lang/String;
    invoke-static {v14}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_98

    .line 3263
    iput-boolean v14, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPaired:Z

    goto :goto_98

    .line 3262
    .end local v18  # "userSetupComplete":Ljava/lang/String;
    .restart local v7  # "userSetupComplete":Ljava/lang/String;
    :cond_96
    move-object/from16 v18, v7

    .line 3265
    .end local v7  # "userSetupComplete":Ljava/lang/String;
    .restart local v18  # "userSetupComplete":Ljava/lang/String;
    :cond_98
    :goto_98
    const-string v7, "device-provisioning-config-applied"

    const/4 v14, 0x0

    invoke-interface {v11, v14, v7}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    .line 3267
    .local v7, "deviceProvisioningConfigApplied":Ljava/lang/String;
    if-eqz v7, :cond_b1

    .line 3268
    move-object/from16 v19, v8

    const/4 v14, 0x1

    .end local v8  # "paired":Ljava/lang/String;
    .local v19, "paired":Ljava/lang/String;
    invoke-static {v14}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v8, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_b3

    .line 3269
    iput-boolean v14, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDeviceProvisioningConfigApplied:Z

    goto :goto_b3

    .line 3267
    .end local v19  # "paired":Ljava/lang/String;
    .restart local v8  # "paired":Ljava/lang/String;
    :cond_b1
    move-object/from16 v19, v8

    .line 3271
    .end local v8  # "paired":Ljava/lang/String;
    .restart local v19  # "paired":Ljava/lang/String;
    :cond_b3
    :goto_b3
    const-string/jumbo v8, "provisioning-state"

    const/4 v14, 0x0

    invoke-interface {v11, v14, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    .line 3272
    .local v8, "provisioningState":Ljava/lang/String;
    invoke-static {v8}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v14

    if-nez v14, :cond_c7

    .line 3273
    invoke-static {v8}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v14

    iput v14, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserProvisioningState:I

    .line 3275
    :cond_c7
    const-string/jumbo v14, "permission-policy"

    move-object/from16 v20, v7

    const/4 v7, 0x0

    .end local v7  # "deviceProvisioningConfigApplied":Ljava/lang/String;
    .local v20, "deviceProvisioningConfigApplied":Ljava/lang/String;
    invoke-interface {v11, v7, v14}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v14

    move-object v7, v14

    .line 3276
    .local v7, "permissionPolicy":Ljava/lang/String;
    invoke-static {v7}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v14

    if-nez v14, :cond_de

    .line 3277
    invoke-static {v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v14

    iput v14, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPermissionPolicy:I

    .line 3282
    :cond_de
    const-string v14, "delegated-cert-installer"

    move-object/from16 v21, v7

    const/4 v7, 0x0

    .end local v7  # "permissionPolicy":Ljava/lang/String;
    .local v21, "permissionPolicy":Ljava/lang/String;
    invoke-interface {v11, v7, v14}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v14

    move-object v7, v14

    .line 3284
    .local v7, "certDelegate":Ljava/lang/String;
    if-eqz v7, :cond_110

    .line 3285
    iget-object v14, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v14, v7}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Ljava/util/List;

    .line 3286
    .local v14, "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    if-nez v14, :cond_103

    .line 3287
    new-instance v22, Ljava/util/ArrayList;

    invoke-direct/range {v22 .. v22}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v14, v22

    .line 3288
    move-object/from16 v22, v8

    .end local v8  # "provisioningState":Ljava/lang/String;
    .local v22, "provisioningState":Ljava/lang/String;
    iget-object v8, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v8, v7, v14}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_105

    .line 3286
    .end local v22  # "provisioningState":Ljava/lang/String;
    .restart local v8  # "provisioningState":Ljava/lang/String;
    :cond_103
    move-object/from16 v22, v8

    .line 3290
    .end local v8  # "provisioningState":Ljava/lang/String;
    .restart local v22  # "provisioningState":Ljava/lang/String;
    :goto_105
    invoke-interface {v14, v5}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_112

    .line 3291
    invoke-interface {v14, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 3292
    const/4 v10, 0x1

    goto :goto_112

    .line 3284
    .end local v14  # "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .end local v22  # "provisioningState":Ljava/lang/String;
    .restart local v8  # "provisioningState":Ljava/lang/String;
    :cond_110
    move-object/from16 v22, v8

    .line 3295
    .end local v8  # "provisioningState":Ljava/lang/String;
    .restart local v22  # "provisioningState":Ljava/lang/String;
    :cond_112
    :goto_112
    const-string v5, "application-restrictions-manager"

    const/4 v8, 0x0

    invoke-interface {v11, v8, v5}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 3297
    .local v5, "appRestrictionsDelegate":Ljava/lang/String;
    if-eqz v5, :cond_13b

    .line 3298
    iget-object v8, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v8, v5}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Ljava/util/List;

    .line 3299
    .local v8, "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    if-nez v8, :cond_130

    .line 3300
    new-instance v14, Ljava/util/ArrayList;

    invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V

    move-object v8, v14

    .line 3301
    iget-object v14, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v14, v5, v8}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3303
    :cond_130
    invoke-interface {v8, v4}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v14

    if-nez v14, :cond_13b

    .line 3304
    invoke-interface {v8, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 3305
    const/4 v4, 0x1

    move v10, v4

    .line 3310
    .end local v5  # "appRestrictionsDelegate":Ljava/lang/String;
    .end local v7  # "certDelegate":Ljava/lang/String;
    .end local v8  # "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_13b
    invoke-interface {v11}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v4

    .line 3311
    .end local v13  # "type":I
    .local v4, "type":I
    invoke-interface {v11}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v5

    .line 3312
    .local v5, "outerDepth":I
    iget-object v7, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskPackages:Ljava/util/List;

    invoke-interface {v7}, Ljava/util/List;->clear()V

    .line 3313
    iget-object v7, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->clear()V

    .line 3314
    iget-object v7, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v7}, Landroid/util/ArrayMap;->clear()V

    .line 3315
    iget-object v7, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAffiliationIds:Ljava/util/Set;

    invoke-interface {v7}, Ljava/util/Set;->clear()V

    .line 3316
    iget-object v7, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mOwnerInstalledCaCerts:Ljava/util/Set;

    invoke-interface {v7}, Ljava/util/Set;->clear()V

    .line 3317
    :goto_15c
    invoke-interface {v11}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v7

    move v4, v7

    const/4 v8, 0x1

    if-eq v7, v8, :cond_3f1

    const/4 v7, 0x3

    if-ne v4, v7, :cond_16d

    .line 3318
    invoke-interface {v11}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v8

    if-le v8, v5, :cond_3f5

    .line 3319
    :cond_16d
    if-eq v4, v7, :cond_3e5

    const/4 v7, 0x4

    if-ne v4, v7, :cond_17a

    .line 3320
    move/from16 v24, v4

    move/from16 v23, v5

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3322
    :cond_17a
    invoke-interface {v11}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v7

    move-object v12, v7

    .line 3323
    const-string v7, "admin"

    invoke-virtual {v7, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7
    :try_end_185
    .catch Ljava/io/FileNotFoundException; {:try_start_6e .. :try_end_185} :catch_421
    .catch Ljava/lang/NullPointerException; {:try_start_6e .. :try_end_185} :catch_41c
    .catch Ljava/lang/NumberFormatException; {:try_start_6e .. :try_end_185} :catch_41c
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_6e .. :try_end_185} :catch_41c
    .catch Ljava/io/IOException; {:try_start_6e .. :try_end_185} :catch_41c
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_6e .. :try_end_185} :catch_41c

    const-string/jumbo v8, "name"

    if-eqz v7, :cond_1ea

    .line 3324
    const/4 v7, 0x0

    :try_start_18b
    invoke-interface {v11, v7, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8
    :try_end_18f
    .catch Ljava/io/FileNotFoundException; {:try_start_18b .. :try_end_18f} :catch_421
    .catch Ljava/lang/NullPointerException; {:try_start_18b .. :try_end_18f} :catch_41c
    .catch Ljava/lang/NumberFormatException; {:try_start_18b .. :try_end_18f} :catch_41c
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_18b .. :try_end_18f} :catch_41c
    .catch Ljava/io/IOException; {:try_start_18b .. :try_end_18f} :catch_41c
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_18b .. :try_end_18f} :catch_41c

    move-object v7, v8

    .line 3326
    .local v7, "name":Ljava/lang/String;
    nop

    .line 3327
    :try_start_191
    invoke-static {v7}, Landroid/content/ComponentName;->unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName;

    move-result-object v8

    .line 3326
    const/4 v13, 0x0

    invoke-virtual {v1, v8, v3, v13}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->findAdmin(Landroid/content/ComponentName;IZ)Landroid/app/admin/DeviceAdminInfo;

    move-result-object v8

    .line 3336
    .local v8, "dai":Landroid/app/admin/DeviceAdminInfo;
    if-eqz v8, :cond_1c7

    .line 3337
    nop

    .line 3338
    invoke-virtual {v8}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v14

    invoke-direct {v1, v14, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->shouldOverwritePoliciesFromXml(Landroid/content/ComponentName;I)Z

    move-result v14

    .line 3339
    .local v14, "shouldOverwritePolicies":Z
    new-instance v13, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :try_end_1a7
    .catch Ljava/lang/RuntimeException; {:try_start_191 .. :try_end_1a7} :catch_1cc
    .catch Ljava/io/FileNotFoundException; {:try_start_191 .. :try_end_1a7} :catch_421
    .catch Ljava/lang/NullPointerException; {:try_start_191 .. :try_end_1a7} :catch_41c
    .catch Ljava/lang/NumberFormatException; {:try_start_191 .. :try_end_1a7} :catch_41c
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_191 .. :try_end_1a7} :catch_41c
    .catch Ljava/io/IOException; {:try_start_191 .. :try_end_1a7} :catch_41c
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_191 .. :try_end_1a7} :catch_41c

    move/from16 v24, v4

    const/4 v4, 0x0

    .end local v4  # "type":I
    .local v24, "type":I
    :try_start_1aa
    invoke-direct {v13, v8, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;-><init>(Landroid/app/admin/DeviceAdminInfo;Z)V

    move-object v4, v13

    .line 3340
    .local v4, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    invoke-virtual {v4, v11, v14}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->readFromXml(Lorg/xmlpull/v1/XmlPullParser;Z)V

    .line 3341
    iget-object v13, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;
    :try_end_1b3
    .catch Ljava/lang/RuntimeException; {:try_start_1aa .. :try_end_1b3} :catch_1c2
    .catch Ljava/io/FileNotFoundException; {:try_start_1aa .. :try_end_1b3} :catch_421
    .catch Ljava/lang/NullPointerException; {:try_start_1aa .. :try_end_1b3} :catch_41c
    .catch Ljava/lang/NumberFormatException; {:try_start_1aa .. :try_end_1b3} :catch_41c
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1aa .. :try_end_1b3} :catch_41c
    .catch Ljava/io/IOException; {:try_start_1aa .. :try_end_1b3} :catch_41c
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_1aa .. :try_end_1b3} :catch_41c

    move/from16 v23, v5

    .end local v5  # "outerDepth":I
    .local v23, "outerDepth":I
    :try_start_1b5
    iget-object v5, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v5}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    invoke-virtual {v13, v5, v4}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_1be
    .catch Ljava/lang/RuntimeException; {:try_start_1b5 .. :try_end_1be} :catch_1bf
    .catch Ljava/io/FileNotFoundException; {:try_start_1b5 .. :try_end_1be} :catch_421
    .catch Ljava/lang/NullPointerException; {:try_start_1b5 .. :try_end_1be} :catch_41c
    .catch Ljava/lang/NumberFormatException; {:try_start_1b5 .. :try_end_1be} :catch_41c
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1b5 .. :try_end_1be} :catch_41c
    .catch Ljava/io/IOException; {:try_start_1b5 .. :try_end_1be} :catch_41c
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_1b5 .. :try_end_1be} :catch_41c

    goto :goto_1cb

    .line 3343
    .end local v4  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v8  # "dai":Landroid/app/admin/DeviceAdminInfo;
    .end local v14  # "shouldOverwritePolicies":Z
    :catch_1bf
    move-exception v0

    move-object v4, v0

    goto :goto_1d2

    .end local v23  # "outerDepth":I
    .restart local v5  # "outerDepth":I
    :catch_1c2
    move-exception v0

    move/from16 v23, v5

    move-object v4, v0

    .end local v5  # "outerDepth":I
    .restart local v23  # "outerDepth":I
    goto :goto_1d2

    .line 3336
    .end local v23  # "outerDepth":I
    .end local v24  # "type":I
    .local v4, "type":I
    .restart local v5  # "outerDepth":I
    .restart local v8  # "dai":Landroid/app/admin/DeviceAdminInfo;
    :cond_1c7
    move/from16 v24, v4

    move/from16 v23, v5

    .line 3345
    .end local v4  # "type":I
    .end local v5  # "outerDepth":I
    .end local v8  # "dai":Landroid/app/admin/DeviceAdminInfo;
    .restart local v23  # "outerDepth":I
    .restart local v24  # "type":I
    :goto_1cb
    goto :goto_1e6

    .line 3343
    .end local v23  # "outerDepth":I
    .end local v24  # "type":I
    .restart local v4  # "type":I
    .restart local v5  # "outerDepth":I
    :catch_1cc
    move-exception v0

    move/from16 v24, v4

    move/from16 v23, v5

    move-object v4, v0

    .line 3344
    .end local v5  # "outerDepth":I
    .local v4, "e":Ljava/lang/RuntimeException;
    .restart local v23  # "outerDepth":I
    .restart local v24  # "type":I
    :goto_1d2
    :try_start_1d2
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Failed loading admin "

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3346
    .end local v4  # "e":Ljava/lang/RuntimeException;
    .end local v7  # "name":Ljava/lang/String;
    :goto_1e6
    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .end local v23  # "outerDepth":I
    .end local v24  # "type":I
    .local v4, "type":I
    .restart local v5  # "outerDepth":I
    :cond_1ea
    move/from16 v24, v4

    move/from16 v23, v5

    .end local v4  # "type":I
    .end local v5  # "outerDepth":I
    .restart local v23  # "outerDepth":I
    .restart local v24  # "type":I
    const-string v4, "delegation"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_227

    .line 3348
    const-string v4, "delegatePackage"

    const/4 v5, 0x0

    invoke-interface {v11, v5, v4}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    .line 3350
    .local v4, "delegatePackage":Ljava/lang/String;
    const-string/jumbo v7, "scope"

    invoke-interface {v11, v5, v7}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    move-object v5, v7

    .line 3353
    .local v5, "scope":Ljava/lang/String;
    iget-object v7, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v7, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/util/List;

    .line 3355
    .local v7, "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    if-nez v7, :cond_21a

    .line 3356
    new-instance v8, Ljava/util/ArrayList;

    invoke-direct {v8}, Ljava/util/ArrayList;-><init>()V

    move-object v7, v8

    .line 3357
    iget-object v8, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v8, v4, v7}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3360
    :cond_21a
    invoke-interface {v7, v5}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_223

    .line 3361
    invoke-interface {v7, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 3363
    .end local v4  # "delegatePackage":Ljava/lang/String;
    .end local v5  # "scope":Ljava/lang/String;
    .end local v7  # "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_223
    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    :cond_227
    const-string v4, "failed-password-attempts"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4
    :try_end_22d
    .catch Ljava/io/FileNotFoundException; {:try_start_1d2 .. :try_end_22d} :catch_421
    .catch Ljava/lang/NullPointerException; {:try_start_1d2 .. :try_end_22d} :catch_41c
    .catch Ljava/lang/NumberFormatException; {:try_start_1d2 .. :try_end_22d} :catch_41c
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1d2 .. :try_end_22d} :catch_41c
    .catch Ljava/io/IOException; {:try_start_1d2 .. :try_end_22d} :catch_41c
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_1d2 .. :try_end_22d} :catch_41c

    const-string/jumbo v5, "value"

    if-eqz v4, :cond_242

    .line 3364
    nop

    .line 3365
    const/4 v4, 0x0

    :try_start_234
    invoke-interface {v11, v4, v5}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 3364
    invoke-static {v5}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v4

    iput v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mFailedPasswordAttempts:I

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3366
    :cond_242
    const-string/jumbo v4, "password-owner"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_25b

    .line 3367
    nop

    .line 3368
    const/4 v4, 0x0

    invoke-interface {v11, v4, v5}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 3367
    invoke-static {v5}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v4

    iput v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3369
    :cond_25b
    const-string v4, "accepted-ca-certificate"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_271

    .line 3370
    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAcceptedCaCertificates:Landroid/util/ArraySet;

    const/4 v5, 0x0

    invoke-interface {v11, v5, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v4, v7}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3371
    :cond_271
    const-string/jumbo v4, "lock-task-component"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_288

    .line 3372
    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskPackages:Ljava/util/List;

    const/4 v5, 0x0

    invoke-interface {v11, v5, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    invoke-interface {v4, v7}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3373
    :cond_288
    const-string/jumbo v4, "lock-task-features"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2a1

    .line 3374
    nop

    .line 3375
    const/4 v4, 0x0

    invoke-interface {v11, v4, v5}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 3374
    invoke-static {v5}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v4

    iput v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskFeatures:I

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3376
    :cond_2a1
    const-string/jumbo v4, "statusbar"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2bb

    .line 3377
    const-string v4, "disabled"

    .line 3378
    const/4 v5, 0x0

    invoke-interface {v11, v5, v4}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    .line 3377
    invoke-static {v4}, Ljava/lang/Boolean;->parseBoolean(Ljava/lang/String;)Z

    move-result v4

    iput-boolean v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mStatusBarDisabled:Z

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3379
    :cond_2bb
    const-string v4, "do-not-ask-credentials-on-boot"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2ca

    .line 3380
    const/4 v4, 0x1

    iput-boolean v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->doNotAskCredentialsOnBoot:Z

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3381
    :cond_2ca
    const-string v4, "affiliation-id"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2e3

    .line 3382
    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAffiliationIds:Ljava/util/Set;

    const-string/jumbo v5, "id"

    const/4 v7, 0x0

    invoke-interface {v11, v7, v5}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-interface {v4, v5}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3383
    :cond_2e3
    const-string/jumbo v4, "last-security-log-retrieval"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2fc

    .line 3384
    nop

    .line 3385
    const/4 v4, 0x0

    invoke-interface {v11, v4, v5}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 3384
    invoke-static {v5}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v4

    iput-wide v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastSecurityLogRetrievalTime:J

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3386
    :cond_2fc
    const-string/jumbo v4, "last-bug-report-request"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_315

    .line 3387
    nop

    .line 3388
    const/4 v4, 0x0

    invoke-interface {v11, v4, v5}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 3387
    invoke-static {v5}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v4

    iput-wide v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastBugReportRequestTime:J

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3389
    :cond_315
    const-string/jumbo v4, "last-network-log-retrieval"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_32e

    .line 3390
    nop

    .line 3391
    const/4 v4, 0x0

    invoke-interface {v11, v4, v5}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 3390
    invoke-static {v5}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v4

    iput-wide v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastNetworkLogsRetrievalTime:J

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3392
    :cond_32e
    const-string v4, "admin-broadcast-pending"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_34b

    .line 3393
    const/4 v4, 0x0

    invoke-interface {v11, v4, v5}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    move-object v4, v5

    .line 3394
    .local v4, "pending":Ljava/lang/String;
    const/4 v5, 0x1

    invoke-static {v5}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v7, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    iput-boolean v5, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminBroadcastPending:Z

    .line 3395
    .end local v4  # "pending":Ljava/lang/String;
    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    :cond_34b
    const-string/jumbo v4, "initialization-bundle"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_35e

    .line 3396
    invoke-static {v11}, Landroid/os/PersistableBundle;->restoreFromXml(Lorg/xmlpull/v1/XmlPullParser;)Landroid/os/PersistableBundle;

    move-result-object v4

    iput-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mInitBundle:Landroid/os/PersistableBundle;

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto/16 :goto_3eb

    .line 3397
    :cond_35e
    const-string v4, "active-password"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_36d

    .line 3400
    const/4 v10, 0x1

    move/from16 v5, v23

    move/from16 v4, v24

    goto/16 :goto_15c

    .line 3401
    :cond_36d
    const-string/jumbo v4, "password-validity"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_390

    .line 3402
    iget-object v4, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->storageManagerIsFileBasedEncryptionEnabled()Z

    move-result v4

    if-nez v4, :cond_38d

    .line 3404
    nop

    .line 3405
    const/4 v4, 0x0

    invoke-interface {v11, v4, v5}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 3404
    invoke-static {v5}, Ljava/lang/Boolean;->parseBoolean(Ljava/lang/String;)Z

    move-result v4

    iput-boolean v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordValidAtLastCheckpoint:Z

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto :goto_3eb

    .line 3402
    :cond_38d
    const/4 v4, 0x1

    const/4 v8, 0x0

    goto :goto_3eb

    .line 3407
    :cond_390
    const-string/jumbo v4, "password-token"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3a8

    .line 3408
    nop

    .line 3409
    const/4 v4, 0x0

    invoke-interface {v11, v4, v5}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 3408
    invoke-static {v5}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v4

    iput-wide v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    const/4 v4, 0x1

    const/4 v8, 0x0

    goto :goto_3eb

    .line 3410
    :cond_3a8
    const-string v4, "current-ime-set"

    invoke-virtual {v4, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3b5

    .line 3411
    const/4 v4, 0x1

    iput-boolean v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mCurrentInputMethodSet:Z

    const/4 v8, 0x0

    goto :goto_3eb

    .line 3412
    :cond_3b5
    const/4 v4, 0x1

    const-string/jumbo v5, "owner-installed-ca-cert"

    invoke-virtual {v5, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_3cc

    .line 3413
    iget-object v5, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mOwnerInstalledCaCerts:Ljava/util/Set;

    const-string v7, "alias"

    const/4 v8, 0x0

    invoke-interface {v11, v8, v7}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    invoke-interface {v5, v7}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    goto :goto_3eb

    .line 3415
    :cond_3cc
    const/4 v8, 0x0

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Unknown tag: "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3416
    invoke-static {v11}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    goto :goto_3eb

    .line 3319
    .end local v23  # "outerDepth":I
    .end local v24  # "type":I
    .local v4, "type":I
    .local v5, "outerDepth":I
    :cond_3e5
    move/from16 v24, v4

    move/from16 v23, v5

    const/4 v4, 0x1

    const/4 v8, 0x0

    .line 3317
    .end local v4  # "type":I
    .end local v5  # "outerDepth":I
    .restart local v23  # "outerDepth":I
    .restart local v24  # "type":I
    :goto_3eb
    move/from16 v5, v23

    move/from16 v4, v24

    goto/16 :goto_15c

    .end local v23  # "outerDepth":I
    .end local v24  # "type":I
    .restart local v4  # "type":I
    .restart local v5  # "outerDepth":I
    :cond_3f1
    move/from16 v24, v4

    move/from16 v23, v5

    .line 3424
    .end local v4  # "type":I
    .end local v5  # "outerDepth":I
    .end local v11  # "parser":Lorg/xmlpull/v1/XmlPullParser;
    .end local v12  # "tag":Ljava/lang/String;
    .end local v15  # "permissionProvider":Ljava/lang/String;
    .end local v18  # "userSetupComplete":Ljava/lang/String;
    .end local v19  # "paired":Ljava/lang/String;
    .end local v20  # "deviceProvisioningConfigApplied":Ljava/lang/String;
    .end local v21  # "permissionPolicy":Ljava/lang/String;
    .end local v22  # "provisioningState":Ljava/lang/String;
    :cond_3f5
    move-object/from16 v8, v17

    goto :goto_44f

    .line 3421
    .end local v17  # "stream":Ljava/io/FileInputStream;
    .local v8, "stream":Ljava/io/FileInputStream;
    :catch_3f8
    move-exception v0

    move-object/from16 v17, v8

    move-object v4, v0

    .end local v8  # "stream":Ljava/io/FileInputStream;
    .restart local v17  # "stream":Ljava/io/FileInputStream;
    goto :goto_436

    .line 3419
    .end local v17  # "stream":Ljava/io/FileInputStream;
    .restart local v8  # "stream":Ljava/io/FileInputStream;
    :catch_3fd
    move-exception v0

    move-object/from16 v17, v8

    .end local v8  # "stream":Ljava/io/FileInputStream;
    .restart local v17  # "stream":Ljava/io/FileInputStream;
    goto :goto_44e

    .line 3248
    .end local v16  # "journal":Lcom/android/internal/util/JournaledFile;
    .end local v17  # "stream":Ljava/io/FileInputStream;
    .local v7, "journal":Lcom/android/internal/util/JournaledFile;
    .restart local v8  # "stream":Ljava/io/FileInputStream;
    .restart local v11  # "parser":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v12  # "tag":Ljava/lang/String;
    .restart local v13  # "type":I
    :cond_401
    move-object/from16 v16, v7

    move-object/from16 v17, v8

    .end local v7  # "journal":Lcom/android/internal/util/JournaledFile;
    .end local v8  # "stream":Ljava/io/FileInputStream;
    .restart local v16  # "journal":Lcom/android/internal/util/JournaledFile;
    .restart local v17  # "stream":Ljava/io/FileInputStream;
    new-instance v4, Lorg/xmlpull/v1/XmlPullParserException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Settings do not start with policies tag: found "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Lorg/xmlpull/v1/XmlPullParserException;-><init>(Ljava/lang/String;)V

    .end local v9  # "file":Ljava/io/File;
    .end local v10  # "needsRewrite":Z
    .end local v16  # "journal":Lcom/android/internal/util/JournaledFile;
    .end local v17  # "stream":Ljava/io/FileInputStream;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local p2  # "userHandle":I
    throw v4
    :try_end_41c
    .catch Ljava/io/FileNotFoundException; {:try_start_234 .. :try_end_41c} :catch_421
    .catch Ljava/lang/NullPointerException; {:try_start_234 .. :try_end_41c} :catch_41c
    .catch Ljava/lang/NumberFormatException; {:try_start_234 .. :try_end_41c} :catch_41c
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_234 .. :try_end_41c} :catch_41c
    .catch Ljava/io/IOException; {:try_start_234 .. :try_end_41c} :catch_41c
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_234 .. :try_end_41c} :catch_41c

    .line 3421
    .end local v11  # "parser":Lorg/xmlpull/v1/XmlPullParser;
    .end local v12  # "tag":Ljava/lang/String;
    .end local v13  # "type":I
    .restart local v9  # "file":Ljava/io/File;
    .restart local v10  # "needsRewrite":Z
    .restart local v16  # "journal":Lcom/android/internal/util/JournaledFile;
    .restart local v17  # "stream":Ljava/io/FileInputStream;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .restart local p2  # "userHandle":I
    :catch_41c
    move-exception v0

    move-object v4, v0

    move-object/from16 v8, v17

    goto :goto_436

    .line 3419
    :catch_421
    move-exception v0

    move-object/from16 v8, v17

    goto :goto_44e

    .line 3421
    .end local v16  # "journal":Lcom/android/internal/util/JournaledFile;
    .end local v17  # "stream":Ljava/io/FileInputStream;
    .restart local v7  # "journal":Lcom/android/internal/util/JournaledFile;
    .restart local v8  # "stream":Ljava/io/FileInputStream;
    :catch_425
    move-exception v0

    move-object/from16 v16, v7

    move-object/from16 v17, v8

    move-object v4, v0

    .end local v7  # "journal":Lcom/android/internal/util/JournaledFile;
    .end local v8  # "stream":Ljava/io/FileInputStream;
    .restart local v16  # "journal":Lcom/android/internal/util/JournaledFile;
    .restart local v17  # "stream":Ljava/io/FileInputStream;
    goto :goto_436

    .line 3419
    .end local v16  # "journal":Lcom/android/internal/util/JournaledFile;
    .end local v17  # "stream":Ljava/io/FileInputStream;
    .restart local v7  # "journal":Lcom/android/internal/util/JournaledFile;
    .restart local v8  # "stream":Ljava/io/FileInputStream;
    :catch_42c
    move-exception v0

    move-object/from16 v16, v7

    move-object/from16 v17, v8

    .end local v7  # "journal":Lcom/android/internal/util/JournaledFile;
    .end local v8  # "stream":Ljava/io/FileInputStream;
    .restart local v16  # "journal":Lcom/android/internal/util/JournaledFile;
    .restart local v17  # "stream":Ljava/io/FileInputStream;
    goto :goto_44e

    .line 3421
    .end local v16  # "journal":Lcom/android/internal/util/JournaledFile;
    .end local v17  # "stream":Ljava/io/FileInputStream;
    .restart local v7  # "journal":Lcom/android/internal/util/JournaledFile;
    .restart local v8  # "stream":Ljava/io/FileInputStream;
    :catch_432
    move-exception v0

    move-object/from16 v16, v7

    move-object v4, v0

    .line 3423
    .end local v7  # "journal":Lcom/android/internal/util/JournaledFile;
    .local v4, "e":Ljava/lang/Exception;
    .restart local v16  # "journal":Lcom/android/internal/util/JournaledFile;
    :goto_436
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "failed parsing "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_44f

    .line 3419
    .end local v4  # "e":Ljava/lang/Exception;
    .end local v16  # "journal":Lcom/android/internal/util/JournaledFile;
    .restart local v7  # "journal":Lcom/android/internal/util/JournaledFile;
    :catch_44b
    move-exception v0

    move-object/from16 v16, v7

    .line 3424
    .end local v7  # "journal":Lcom/android/internal/util/JournaledFile;
    .restart local v16  # "journal":Lcom/android/internal/util/JournaledFile;
    :goto_44e
    nop

    .line 3426
    :goto_44f
    if-eqz v8, :cond_457

    .line 3427
    :try_start_451
    invoke-virtual {v8}, Ljava/io/FileInputStream;->close()V
    :try_end_454
    .catch Ljava/io/IOException; {:try_start_451 .. :try_end_454} :catch_455

    goto :goto_457

    .line 3429
    :catch_455
    move-exception v0

    goto :goto_458

    .line 3431
    :cond_457
    :goto_457
    nop

    .line 3434
    :goto_458
    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    iget-object v5, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v5}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 3437
    if-eqz v10, :cond_468

    .line 3438
    invoke-direct {v1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 3441
    :cond_468
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->validatePasswordOwnerLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;)V

    .line 3442
    invoke-direct {v1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateMaximumTimeToLockLocked(I)V

    .line 3443
    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskPackages:Ljava/util/List;

    invoke-direct {v1, v4, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateLockTaskPackagesLocked(Ljava/util/List;I)V

    .line 3444
    iget v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskFeatures:I

    invoke-direct {v1, v4, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateLockTaskFeaturesLocked(II)V

    .line 3445
    iget-boolean v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mStatusBarDisabled:Z

    if-eqz v4, :cond_481

    .line 3446
    iget-boolean v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mStatusBarDisabled:Z

    invoke-direct {v1, v4, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setStatusBarDisabledInternal(ZI)Z

    .line 3448
    :cond_481
    return-void
.end method

.method private makeJournaledFile(I)Lcom/android/internal/util/JournaledFile;
    .registers 8
    .param p1, "userId"  # I

    .line 3021
    new-instance v0, Ljava/io/File;

    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPolicyFileDirectory(I)Ljava/io/File;

    move-result-object v1

    const-string v2, "device_policies.xml"

    invoke-direct {v0, v1, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 3022
    invoke-virtual {v0}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v0

    .line 3026
    .local v0, "base":Ljava/lang/String;
    new-instance v1, Lcom/android/internal/util/JournaledFile;

    new-instance v2, Ljava/io/File;

    invoke-direct {v2, v0}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    new-instance v3, Ljava/io/File;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, ".tmp"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-direct {v1, v2, v3}, Lcom/android/internal/util/JournaledFile;-><init>(Ljava/io/File;Ljava/io/File;)V

    return-object v1
.end method

.method private maybeClearLockTaskPolicyLocked()V
    .registers 11

    .line 10732
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 10734
    .local v0, "ident":J
    :try_start_6
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Landroid/os/UserManager;->getUsers(Z)Ljava/util/List;

    move-result-object v2

    .line 10735
    .local v2, "userInfos":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v4

    sub-int/2addr v4, v3

    .local v4, "i":I
    :goto_12
    if-ltz v4, :cond_77

    .line 10736
    invoke-interface {v2, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/pm/UserInfo;

    iget v3, v3, Landroid/content/pm/UserInfo;->id:I

    .line 10737
    .local v3, "userId":I
    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->canUserUseLockTaskLocked(I)Z

    move-result v5

    if-eqz v5, :cond_23

    .line 10738
    goto :goto_74

    .line 10741
    :cond_23
    invoke-virtual {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v5

    iget-object v5, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskPackages:Ljava/util/List;

    .line 10742
    .local v5, "lockTaskPackages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-interface {v5}, Ljava/util/List;->isEmpty()Z

    move-result v6
    :try_end_2d
    .catchall {:try_start_6 .. :try_end_2d} :catchall_7e

    const-string v7, "User id "

    const-string v8, "DevicePolicyManager"

    if-nez v6, :cond_51

    .line 10743
    :try_start_33
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v9, " not affiliated. Clearing lock task packages"

    invoke-virtual {v6, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v8, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10745
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v6

    invoke-direct {p0, v3, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setLockTaskPackagesLocked(ILjava/util/List;)V

    .line 10747
    :cond_51
    invoke-virtual {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v6

    iget v6, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskFeatures:I

    .line 10748
    .local v6, "lockTaskFeatures":I
    if-eqz v6, :cond_74

    .line 10749
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v9, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v7, " not affiliated. Clearing lock task features"

    invoke-virtual {v9, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v8, v7}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10751
    const/4 v7, 0x0

    invoke-direct {p0, v3, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setLockTaskFeaturesLocked(II)V
    :try_end_74
    .catchall {:try_start_33 .. :try_end_74} :catchall_7e

    .line 10735
    .end local v3  # "userId":I
    .end local v5  # "lockTaskPackages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .end local v6  # "lockTaskFeatures":I
    :cond_74
    :goto_74
    add-int/lit8 v4, v4, -0x1

    goto :goto_12

    .line 10755
    .end local v2  # "userInfos":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    .end local v4  # "i":I
    :cond_77
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 10756
    nop

    .line 10757
    return-void

    .line 10755
    :catchall_7e
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private maybeLogPasswordComplexitySet(Landroid/content/ComponentName;IZLandroid/app/admin/PasswordMetrics;)V
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userId"  # I
    .param p3, "parent"  # Z
    .param p4, "metrics"  # Landroid/app/admin/PasswordMetrics;

    .line 14114
    invoke-static {}, Landroid/app/admin/SecurityLog;->isLoggingEnabled()Z

    move-result v0

    if-eqz v0, :cond_78

    .line 14115
    if-eqz p3, :cond_d

    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v0

    goto :goto_e

    :cond_d
    move v0, p2

    .line 14116
    .local v0, "affectedUserId":I
    :goto_e
    const v1, 0x33461

    const/16 v2, 0xb

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v3, 0x0

    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    aput-object v4, v2, v3

    const/4 v3, 0x1

    .line 14117
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v2, v3

    const/4 v3, 0x2

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v2, v3

    const/4 v3, 0x3

    iget v4, p4, Landroid/app/admin/PasswordMetrics;->length:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v2, v3

    const/4 v3, 0x4

    iget v4, p4, Landroid/app/admin/PasswordMetrics;->quality:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v2, v3

    const/4 v3, 0x5

    iget v4, p4, Landroid/app/admin/PasswordMetrics;->letters:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v2, v3

    const/4 v3, 0x6

    iget v4, p4, Landroid/app/admin/PasswordMetrics;->nonLetter:I

    .line 14118
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v2, v3

    const/4 v3, 0x7

    iget v4, p4, Landroid/app/admin/PasswordMetrics;->numeric:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v2, v3

    const/16 v3, 0x8

    iget v4, p4, Landroid/app/admin/PasswordMetrics;->upperCase:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v2, v3

    const/16 v3, 0x9

    iget v4, p4, Landroid/app/admin/PasswordMetrics;->lowerCase:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v2, v3

    const/16 v3, 0xa

    iget v4, p4, Landroid/app/admin/PasswordMetrics;->symbols:I

    .line 14119
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v2, v3

    .line 14116
    invoke-static {v1, v2}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 14121
    .end local v0  # "affectedUserId":I
    :cond_78
    return-void
.end method

.method private maybeLogStart()V
    .registers 6

    .line 3616
    invoke-static {}, Landroid/app/admin/SecurityLog;->isLoggingEnabled()Z

    move-result v0

    if-nez v0, :cond_7

    .line 3617
    return-void

    .line 3619
    :cond_7
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 3620
    const-string/jumbo v1, "ro.boot.verifiedbootstate"

    invoke-virtual {v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 3621
    .local v0, "verifiedBootState":Ljava/lang/String;
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string/jumbo v2, "ro.boot.veritymode"

    invoke-virtual {v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 3622
    .local v1, "verityMode":Ljava/lang/String;
    const v2, 0x33459

    const/4 v3, 0x2

    new-array v3, v3, [Ljava/lang/Object;

    const/4 v4, 0x0

    aput-object v0, v3, v4

    const/4 v4, 0x1

    aput-object v1, v3, v4

    invoke-static {v2, v3}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 3623
    return-void
.end method

.method private maybePauseDeviceWideLoggingLocked()V
    .registers 3
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = {
            "getLockObject()"
        }
    .end annotation

    .line 13284
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->areAllUsersAffiliatedWithDeviceLocked()Z

    move-result v0

    if-nez v0, :cond_19

    .line 13285
    const-string v0, "DevicePolicyManager"

    const-string v1, "There are unaffiliated users, security and network logging will be paused if enabled."

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13287
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSecurityLogMonitor:Lcom/android/server/devicepolicy/SecurityLogMonitor;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/SecurityLogMonitor;->pause()V

    .line 13288
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    if-eqz v0, :cond_19

    .line 13289
    invoke-virtual {v0}, Lcom/android/server/devicepolicy/NetworkLogger;->pause()V

    .line 13292
    :cond_19
    return-void
.end method

.method private maybeResumeDeviceWideLoggingLocked()V
    .registers 5
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = {
            "getLockObject()"
        }
    .end annotation

    .line 13297
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->areAllUsersAffiliatedWithDeviceLocked()Z

    move-result v0

    if-eqz v0, :cond_27

    .line 13298
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 13300
    .local v0, "ident":J
    :try_start_c
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSecurityLogMonitor:Lcom/android/server/devicepolicy/SecurityLogMonitor;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/SecurityLogMonitor;->resume()V

    .line 13301
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    if-eqz v2, :cond_1a

    .line 13302
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/NetworkLogger;->resume()V
    :try_end_1a
    .catchall {:try_start_c .. :try_end_1a} :catchall_20

    .line 13305
    :cond_1a
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13306
    goto :goto_27

    .line 13305
    :catchall_20
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2

    .line 13308
    .end local v0  # "ident":J
    :cond_27
    :goto_27
    return-void
.end method

.method private maybeSendAdminEnabledBroadcastLocked(I)V
    .registers 13
    .param p1, "userHandle"  # I

    .line 9608
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    .line 9609
    .local v0, "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-boolean v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminBroadcastPending:Z

    if-eqz v1, :cond_31

    .line 9611
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 9612
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    const/4 v8, 0x1

    .line 9613
    .local v8, "clearInitBundle":Z
    const/4 v9, 0x0

    if-eqz v1, :cond_27

    .line 9614
    iget-object v10, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mInitBundle:Landroid/os/PersistableBundle;

    .line 9615
    .local v10, "initBundle":Landroid/os/PersistableBundle;
    nop

    .line 9617
    if-nez v10, :cond_17

    move-object v5, v9

    goto :goto_1d

    :cond_17
    new-instance v2, Landroid/os/Bundle;

    invoke-direct {v2, v10}, Landroid/os/Bundle;-><init>(Landroid/os/PersistableBundle;)V

    move-object v5, v2

    :goto_1d
    const/4 v6, 0x0

    const/4 v7, 0x1

    .line 9615
    const-string v4, "android.app.action.DEVICE_ADMIN_ENABLED"

    move-object v2, p0

    move-object v3, v1

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/os/Bundle;Landroid/content/BroadcastReceiver;Z)Z

    move-result v8

    .line 9621
    .end local v10  # "initBundle":Landroid/os/PersistableBundle;
    :cond_27
    if-eqz v8, :cond_31

    .line 9624
    iput-object v9, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mInitBundle:Landroid/os/PersistableBundle;

    .line 9625
    const/4 v2, 0x0

    iput-boolean v2, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminBroadcastPending:Z

    .line 9626
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 9629
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v8  # "clearInitBundle":Z
    :cond_31
    return-void
.end method

.method private maybeSetDefaultDeviceOwnerUserRestrictionsLocked()V
    .registers 4

    .line 2372
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 2373
    .local v0, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v0, :cond_13

    .line 2374
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v1

    .line 2375
    invoke-static {}, Lcom/android/server/pm/UserRestrictionsUtils;->getDefaultEnabledForDeviceOwner()Ljava/util/Set;

    move-result-object v2

    .line 2374
    invoke-direct {p0, v1, v0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeSetDefaultRestrictionsForAdminLocked(ILcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/util/Set;)V

    .line 2377
    :cond_13
    return-void
.end method

.method private maybeSetDefaultProfileOwnerUserRestrictions()V
    .registers 6

    .line 2381
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 2382
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerKeys()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_f
    :goto_f
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_3b

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    .line 2383
    .local v2, "userId":I
    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 2388
    .local v3, "profileOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v3, :cond_f

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v4, v2}, Landroid/os/UserManager;->isManagedProfile(I)Z

    move-result v4

    if-nez v4, :cond_2e

    .line 2389
    goto :goto_f

    .line 2391
    :cond_2e
    nop

    .line 2392
    invoke-static {}, Lcom/android/server/pm/UserRestrictionsUtils;->getDefaultEnabledForManagedProfiles()Ljava/util/Set;

    move-result-object v4

    .line 2391
    invoke-direct {p0, v2, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeSetDefaultRestrictionsForAdminLocked(ILcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/util/Set;)V

    .line 2393
    const/4 v4, 0x0

    invoke-direct {p0, v2, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureUnknownSourcesRestrictionForProfileOwnerLocked(ILcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Z)V

    .line 2395
    .end local v2  # "userId":I
    .end local v3  # "profileOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    goto :goto_f

    .line 2396
    :cond_3b
    monitor-exit v0

    .line 2397
    return-void

    .line 2396
    :catchall_3d
    move-exception v1

    monitor-exit v0
    :try_end_3f
    .catchall {:try_start_5 .. :try_end_3f} :catchall_3d

    throw v1
.end method

.method private maybeSetDefaultRestrictionsForAdminLocked(ILcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/util/Set;)V
    .registers 10
    .param p1, "userId"  # I
    .param p2, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;",
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;)V"
        }
    .end annotation

    .line 2420
    .local p3, "defaultRestrictions":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    iget-object v0, p2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->defaultEnabledRestrictionsAlreadySet:Ljava/util/Set;

    invoke-interface {p3, v0}, Ljava/util/Set;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_9

    .line 2421
    return-void

    .line 2423
    :cond_9
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "New user restrictions need to be set by default for user "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "DevicePolicyManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2432
    new-instance v0, Landroid/util/ArraySet;

    invoke-direct {v0, p3}, Landroid/util/ArraySet;-><init>(Ljava/util/Collection;)V

    .line 2433
    .local v0, "restrictionsToSet":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    iget-object v2, p2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->defaultEnabledRestrictionsAlreadySet:Ljava/util/Set;

    invoke-interface {v0, v2}, Ljava/util/Set;->removeAll(Ljava/util/Collection;)Z

    .line 2434
    invoke-interface {v0}, Ljava/util/Set;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_64

    .line 2435
    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_33
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_48

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    .line 2436
    .local v3, "restriction":Ljava/lang/String;
    invoke-virtual {p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->ensureUserRestrictions()Landroid/os/Bundle;

    move-result-object v4

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Landroid/os/Bundle;->putBoolean(Ljava/lang/String;Z)V

    .line 2437
    .end local v3  # "restriction":Ljava/lang/String;
    goto :goto_33

    .line 2438
    :cond_48
    iget-object v2, p2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->defaultEnabledRestrictionsAlreadySet:Ljava/util/Set;

    invoke-interface {v2, v0}, Ljava/util/Set;->addAll(Ljava/util/Collection;)Z

    .line 2439
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Enabled the following restrictions by default: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2440
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveUserRestrictionsLocked(I)V

    .line 2442
    :cond_64
    return-void
.end method

.method private maybeStartSecurityLogMonitorOnActivityManagerReady()V
    .registers 3

    .line 2469
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 2470
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogIsLoggingEnabled()Z

    move-result v1

    if-eqz v1, :cond_1a

    .line 2471
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSecurityLogMonitor:Lcom/android/server/devicepolicy/SecurityLogMonitor;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/SecurityLogMonitor;->start()V

    .line 2472
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->runCryptoSelfTest()V

    .line 2473
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybePauseDeviceWideLoggingLocked()V

    .line 2475
    :cond_1a
    monitor-exit v0

    .line 2476
    return-void

    .line 2475
    :catchall_1c
    move-exception v1

    monitor-exit v0
    :try_end_1e
    .catchall {:try_start_5 .. :try_end_1e} :catchall_1c

    throw v1
.end method

.method private migrateUserRestrictionsForUser(Landroid/os/UserHandle;Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/util/Set;Z)V
    .registers 13
    .param p1, "user"  # Landroid/os/UserHandle;
    .param p2, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .param p4, "isDeviceOwner"  # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/os/UserHandle;",
            "Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;",
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;Z)V"
        }
    .end annotation

    .line 2573
    .local p3, "exceptionList":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    .line 2574
    invoke-virtual {p1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v1

    .line 2573
    invoke-virtual {v0, v1}, Landroid/os/UserManagerInternal;->getBaseUserRestrictions(I)Landroid/os/Bundle;

    move-result-object v0

    .line 2576
    .local v0, "origRestrictions":Landroid/os/Bundle;
    new-instance v1, Landroid/os/Bundle;

    invoke-direct {v1}, Landroid/os/Bundle;-><init>()V

    .line 2577
    .local v1, "newBaseRestrictions":Landroid/os/Bundle;
    new-instance v2, Landroid/os/Bundle;

    invoke-direct {v2}, Landroid/os/Bundle;-><init>()V

    .line 2579
    .local v2, "newOwnerRestrictions":Landroid/os/Bundle;
    invoke-virtual {v0}, Landroid/os/Bundle;->keySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_1c
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_53

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 2580
    .local v4, "key":Ljava/lang/String;
    invoke-virtual {v0, v4}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_2f

    .line 2581
    goto :goto_1c

    .line 2583
    :cond_2f
    if-eqz p4, :cond_36

    .line 2584
    invoke-static {v4}, Lcom/android/server/pm/UserRestrictionsUtils;->canDeviceOwnerChange(Ljava/lang/String;)Z

    move-result v5

    goto :goto_3e

    .line 2585
    :cond_36
    invoke-virtual {p1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v5

    invoke-static {v4, v5}, Lcom/android/server/pm/UserRestrictionsUtils;->canProfileOwnerChange(Ljava/lang/String;I)Z

    move-result v5

    :goto_3e
    nop

    .line 2587
    .local v5, "canOwnerChange":Z
    const/4 v6, 0x1

    if-eqz v5, :cond_4f

    if-eqz p3, :cond_4b

    invoke-interface {p3, v4}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_4b

    goto :goto_4f

    .line 2590
    :cond_4b
    invoke-virtual {v2, v4, v6}, Landroid/os/Bundle;->putBoolean(Ljava/lang/String;Z)V

    goto :goto_52

    .line 2588
    :cond_4f
    :goto_4f
    invoke-virtual {v1, v4, v6}, Landroid/os/Bundle;->putBoolean(Ljava/lang/String;Z)V

    .line 2592
    .end local v4  # "key":Ljava/lang/String;
    .end local v5  # "canOwnerChange":Z
    :goto_52
    goto :goto_1c

    .line 2599
    :cond_53
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    invoke-virtual {p1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v4

    invoke-virtual {v3, v4, v1}, Landroid/os/UserManagerInternal;->setBaseUserRestrictionsByDpmsForMigration(ILandroid/os/Bundle;)V

    .line 2602
    if-eqz p2, :cond_6d

    .line 2603
    invoke-virtual {p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->ensureUserRestrictions()Landroid/os/Bundle;

    move-result-object v3

    invoke-virtual {v3}, Landroid/os/Bundle;->clear()V

    .line 2604
    invoke-virtual {p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->ensureUserRestrictions()Landroid/os/Bundle;

    move-result-object v3

    invoke-virtual {v3, v2}, Landroid/os/Bundle;->putAll(Landroid/os/Bundle;)V

    goto :goto_87

    .line 2606
    :cond_6d
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "ActiveAdmin for DO/PO not found. user="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "DevicePolicyManager"

    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2608
    :goto_87
    invoke-virtual {p1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v3

    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 2609
    return-void
.end method

.method private migrateUserRestrictionsIfNecessaryLocked()V
    .registers 11

    .line 2511
    const/4 v0, 0x0

    .line 2514
    .local v0, "migrated":Z
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserRestrictionsNeedsMigration()Z

    move-result v1

    const/4 v2, 0x0

    const/4 v3, 0x0

    if-eqz v1, :cond_1e

    .line 2518
    const/4 v0, 0x1

    .line 2521
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 2523
    .local v1, "deviceOwnerAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    sget-object v4, Landroid/os/UserHandle;->SYSTEM:Landroid/os/UserHandle;

    const/4 v5, 0x1

    invoke-direct {p0, v4, v1, v3, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->migrateUserRestrictionsForUser(Landroid/os/UserHandle;Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/util/Set;Z)V

    .line 2527
    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushUserRestrictions(I)V

    .line 2529
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/Owners;->setDeviceOwnerUserRestrictionsMigrated()V

    .line 2536
    .end local v1  # "deviceOwnerAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_1e
    const-string/jumbo v1, "no_outgoing_calls"

    const-string/jumbo v4, "no_sms"

    filled-new-array {v1, v4}, [Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Lcom/google/android/collect/Sets;->newArraySet([Ljava/lang/Object;)Landroid/util/ArraySet;

    move-result-object v1

    .line 2540
    .local v1, "secondaryUserExceptionList":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v4}, Landroid/os/UserManager;->getUsers()Ljava/util/List;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_36
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_66

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/content/pm/UserInfo;

    .line 2541
    .local v5, "ui":Landroid/content/pm/UserInfo;
    iget v6, v5, Landroid/content/pm/UserInfo;->id:I

    .line 2542
    .local v6, "userId":I
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v7, v6}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerUserRestrictionsNeedsMigration(I)Z

    move-result v7

    if-eqz v7, :cond_65

    .line 2546
    const/4 v0, 0x1

    .line 2548
    invoke-virtual {p0, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v7

    .line 2551
    .local v7, "profileOwnerAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-nez v6, :cond_55

    move-object v8, v3

    goto :goto_56

    :cond_55
    move-object v8, v1

    .line 2553
    .local v8, "exceptionList":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    :goto_56
    invoke-virtual {v5}, Landroid/content/pm/UserInfo;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v9

    invoke-direct {p0, v9, v7, v8, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->migrateUserRestrictionsForUser(Landroid/os/UserHandle;Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/util/Set;Z)V

    .line 2561
    invoke-direct {p0, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushUserRestrictions(I)V

    .line 2563
    iget-object v9, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v9, v6}, Lcom/android/server/devicepolicy/Owners;->setProfileOwnerUserRestrictionsMigrated(I)V

    .line 2565
    .end local v5  # "ui":Landroid/content/pm/UserInfo;
    .end local v6  # "userId":I
    .end local v7  # "profileOwnerAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v8  # "exceptionList":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    :cond_65
    goto :goto_36

    .line 2569
    :cond_66
    return-void
.end method

.method private notifyAffiliatedProfileTransferOwnershipComplete(I)V
    .registers 5
    .param p1, "callingUserId"  # I

    .line 13765
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 13766
    .local v0, "extras":Landroid/os/Bundle;
    invoke-static {p1}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v1

    const-string v2, "android.intent.extra.USER"

    invoke-virtual {v0, v2, v1}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 13767
    const-string v1, "android.app.action.AFFILIATED_PROFILE_TRANSFER_OWNERSHIP_COMPLETE"

    invoke-virtual {p0, v1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendDeviceOwnerCommand(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 13769
    return-void
.end method

.method private onBugreportFailed()V
    .registers 5

    .line 7506
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportServiceIsActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 7507
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string v2, "ctl.stop"

    const-string v3, "bugreportremote"

    invoke-virtual {v0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V

    .line 7509
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportSharingAccepted:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 7510
    const/4 v0, 0x0

    invoke-direct {p0, v0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDeviceOwnerRemoteBugreportUriAndHash(Ljava/lang/String;Ljava/lang/String;)V

    .line 7511
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getNotificationManager()Landroid/app/NotificationManager;

    move-result-object v0

    const-string v2, "DevicePolicyManager"

    const v3, 0x28700e57

    invoke-virtual {v0, v2, v3}, Landroid/app/NotificationManager;->cancel(Ljava/lang/String;I)V

    .line 7512
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 7513
    .local v0, "extras":Landroid/os/Bundle;
    const-string v2, "android.app.extra.BUGREPORT_FAILURE_REASON"

    invoke-virtual {v0, v2, v1}, Landroid/os/Bundle;->putInt(Ljava/lang/String;I)V

    .line 7515
    const-string v1, "android.app.action.BUGREPORT_FAILED"

    invoke-virtual {p0, v1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendDeviceOwnerCommand(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 7516
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportConsentReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {v1, v2}, Landroid/content/Context;->unregisterReceiver(Landroid/content/BroadcastReceiver;)V

    .line 7517
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportFinishedReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {v1, v2}, Landroid/content/Context;->unregisterReceiver(Landroid/content/BroadcastReceiver;)V

    .line 7518
    return-void
.end method

.method private onBugreportFinished(Landroid/content/Intent;)V
    .registers 10
    .param p1, "intent"  # Landroid/content/Intent;

    .line 7482
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHandler:Landroid/os/Handler;

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportTimeoutRunnable:Ljava/lang/Runnable;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 7483
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportServiceIsActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 7484
    invoke-virtual {p1}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v0

    .line 7485
    .local v0, "bugreportUri":Landroid/net/Uri;
    const/4 v1, 0x0

    .line 7486
    .local v1, "bugreportUriString":Ljava/lang/String;
    if-eqz v0, :cond_18

    .line 7487
    invoke-virtual {v0}, Landroid/net/Uri;->toString()Ljava/lang/String;

    move-result-object v1

    .line 7489
    :cond_18
    const-string v2, "android.intent.extra.REMOTE_BUGREPORT_HASH"

    invoke-virtual {p1, v2}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 7491
    .local v2, "bugreportHash":Ljava/lang/String;
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportSharingAccepted:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v3}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    move-result v3

    const v4, 0x28700e57

    const-string v5, "DevicePolicyManager"

    if-eqz v3, :cond_38

    .line 7492
    invoke-direct {p0, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->shareBugreportWithDeviceOwnerIfExists(Ljava/lang/String;Ljava/lang/String;)V

    .line 7493
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getNotificationManager()Landroid/app/NotificationManager;

    move-result-object v3

    invoke-virtual {v3, v5, v4}, Landroid/app/NotificationManager;->cancel(Ljava/lang/String;I)V

    goto :goto_4d

    .line 7496
    :cond_38
    invoke-direct {p0, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDeviceOwnerRemoteBugreportUriAndHash(Ljava/lang/String;Ljava/lang/String;)V

    .line 7497
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getNotificationManager()Landroid/app/NotificationManager;

    move-result-object v3

    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v7, 0x3

    .line 7498
    invoke-static {v6, v7}, Lcom/android/server/devicepolicy/RemoteBugreportUtils;->buildNotification(Landroid/content/Context;I)Landroid/app/Notification;

    move-result-object v6

    sget-object v7, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    .line 7497
    invoke-virtual {v3, v5, v4, v6, v7}, Landroid/app/NotificationManager;->notifyAsUser(Ljava/lang/String;ILandroid/app/Notification;Landroid/os/UserHandle;)V

    .line 7502
    :goto_4d
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportFinishedReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {v3, v4}, Landroid/content/Context;->unregisterReceiver(Landroid/content/BroadcastReceiver;)V

    .line 7503
    return-void
.end method

.method private onBugreportSharingAccepted()V
    .registers 8

    .line 7521
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportSharingAccepted:Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 7522
    const/4 v0, 0x0

    .line 7523
    .local v0, "bugreportUriString":Ljava/lang/String;
    const/4 v1, 0x0

    .line 7524
    .local v1, "bugreportHash":Ljava/lang/String;
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 7525
    :try_start_d
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerRemoteBugreportUri()Ljava/lang/String;

    move-result-object v3

    move-object v0, v3

    .line 7526
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerRemoteBugreportHash()Ljava/lang/String;

    move-result-object v3

    move-object v1, v3

    .line 7527
    monitor-exit v2
    :try_end_1a
    .catchall {:try_start_d .. :try_end_1a} :catchall_40

    .line 7528
    if-eqz v0, :cond_20

    .line 7529
    invoke-direct {p0, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->shareBugreportWithDeviceOwnerIfExists(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_3f

    .line 7530
    :cond_20
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportServiceIsActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    move-result v2

    if-eqz v2, :cond_3f

    .line 7531
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getNotificationManager()Landroid/app/NotificationManager;

    move-result-object v2

    const v3, 0x28700e57

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v5, 0x2

    .line 7532
    invoke-static {v4, v5}, Lcom/android/server/devicepolicy/RemoteBugreportUtils;->buildNotification(Landroid/content/Context;I)Landroid/app/Notification;

    move-result-object v4

    sget-object v5, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    .line 7531
    const-string v6, "DevicePolicyManager"

    invoke-virtual {v2, v6, v3, v4, v5}, Landroid/app/NotificationManager;->notifyAsUser(Ljava/lang/String;ILandroid/app/Notification;Landroid/os/UserHandle;)V

    .line 7536
    :cond_3f
    :goto_3f
    return-void

    .line 7527
    :catchall_40
    move-exception v3

    :try_start_41
    monitor-exit v2
    :try_end_42
    .catchall {:try_start_41 .. :try_end_42} :catchall_40

    throw v3
.end method

.method private onBugreportSharingDeclined()V
    .registers 5

    .line 7539
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportServiceIsActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_25

    .line 7540
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string v2, "ctl.stop"

    const-string v3, "bugreportremote"

    invoke-virtual {v0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V

    .line 7542
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportServiceIsActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 7543
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHandler:Landroid/os/Handler;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportTimeoutRunnable:Ljava/lang/Runnable;

    invoke-virtual {v0, v2}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 7544
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportFinishedReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {v0, v2}, Landroid/content/Context;->unregisterReceiver(Landroid/content/BroadcastReceiver;)V

    .line 7546
    :cond_25
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportSharingAccepted:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 7547
    const/4 v0, 0x0

    invoke-direct {p0, v0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDeviceOwnerRemoteBugreportUriAndHash(Ljava/lang/String;Ljava/lang/String;)V

    .line 7548
    const-string v1, "android.app.action.BUGREPORT_SHARING_DECLINED"

    invoke-virtual {p0, v1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendDeviceOwnerCommand(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 7549
    return-void
.end method

.method private onLockSettingsReady()V
    .registers 6

    .line 3554
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    .line 3555
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->loadOwners()V

    .line 3556
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->cleanUpOldUsers()V

    .line 3557
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeSetDefaultProfileOwnerUserRestrictions()V

    .line 3558
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->handleStartUser(I)V

    .line 3559
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeLogStart()V

    .line 3562
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSetupContentObserver:Lcom/android/server/devicepolicy/DevicePolicyManagerService$SetupContentObserver;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$SetupContentObserver;->register()V

    .line 3564
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateUserSetupCompleteAndPaired()V

    .line 3567
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 3568
    :try_start_20
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getKeepUninstalledPackagesLocked()Ljava/util/List;

    move-result-object v1

    .line 3569
    .local v1, "packageList":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    monitor-exit v0
    :try_end_25
    .catchall {:try_start_20 .. :try_end_25} :catchall_5a

    .line 3570
    if-eqz v1, :cond_30

    .line 3571
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    invoke-virtual {v0, v1}, Landroid/content/pm/PackageManagerInternal;->setKeepUninstalledPackages(Ljava/util/List;)V

    .line 3574
    :cond_30
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 3575
    :try_start_35
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 3576
    .local v0, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v0, :cond_52

    .line 3578
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    iget-boolean v4, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->forceEphemeralUsers:Z

    invoke-virtual {v3, v4}, Landroid/os/UserManagerInternal;->setForceEphemeralUsers(Z)V

    .line 3581
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 3582
    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getActivityManagerInternal()Landroid/app/ActivityManagerInternal;

    move-result-object v3

    .line 3583
    .local v3, "activityManagerInternal":Landroid/app/ActivityManagerInternal;
    iget-object v4, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->startUserSessionMessage:Ljava/lang/String;

    invoke-virtual {v3, v4}, Landroid/app/ActivityManagerInternal;->setSwitchingFromSystemUserMessage(Ljava/lang/String;)V

    .line 3585
    iget-object v4, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->endUserSessionMessage:Ljava/lang/String;

    invoke-virtual {v3, v4}, Landroid/app/ActivityManagerInternal;->setSwitchingToSystemUserMessage(Ljava/lang/String;)V

    .line 3589
    .end local v3  # "activityManagerInternal":Landroid/app/ActivityManagerInternal;
    :cond_52
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->revertTransferOwnershipIfNecessaryLocked()V

    .line 3590
    .end local v0  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v2

    .line 3591
    return-void

    .line 3590
    :catchall_57
    move-exception v0

    monitor-exit v2
    :try_end_59
    .catchall {:try_start_35 .. :try_end_59} :catchall_57

    throw v0

    .line 3569
    .end local v1  # "packageList":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :catchall_5a
    move-exception v1

    :try_start_5b
    monitor-exit v0
    :try_end_5c
    .catchall {:try_start_5b .. :try_end_5c} :catchall_5a

    throw v1
.end method

.method private postTransfer(Ljava/lang/String;I)V
    .registers 3
    .param p1, "broadcast"  # Ljava/lang/String;
    .param p2, "callingUserId"  # I

    .line 13760
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->deleteTransferOwnershipMetadataFileLocked()V

    .line 13761
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendOwnerChangedBroadcast(Ljava/lang/String;I)V

    .line 13762
    return-void
.end method

.method private prepareTransfer(Landroid/content/ComponentName;Landroid/content/ComponentName;Landroid/os/PersistableBundle;ILjava/lang/String;)V
    .registers 8
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "target"  # Landroid/content/ComponentName;
    .param p3, "bundle"  # Landroid/os/PersistableBundle;
    .param p4, "callingUserId"  # I
    .param p5, "adminType"  # Ljava/lang/String;

    .line 13753
    invoke-virtual {p0, p3, p4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveTransferOwnershipBundleLocked(Landroid/os/PersistableBundle;I)V

    .line 13754
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mTransferOwnershipMetadataManager:Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager;

    new-instance v1, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;

    invoke-direct {v1, p1, p2, p4, p5}, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;-><init>(Landroid/content/ComponentName;Landroid/content/ComponentName;ILjava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager;->saveMetadataFile(Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;)Z

    .line 13757
    return-void
.end method

.method private pushActiveAdminPackages()V
    .registers 7

    .line 3845
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 3846
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v1}, Landroid/os/UserManager;->getUsers()Ljava/util/List;

    move-result-object v1

    .line 3847
    .local v1, "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    .local v2, "i":I
    :goto_11
    if-ltz v2, :cond_27

    .line 3848
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/pm/UserInfo;

    iget v3, v3, Landroid/content/pm/UserInfo;->id:I

    .line 3849
    .local v3, "userId":I
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUsageStatsManagerInternal:Landroid/app/usage/UsageStatsManagerInternal;

    .line 3850
    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminPackagesLocked(I)Ljava/util/Set;

    move-result-object v5

    .line 3849
    invoke-virtual {v4, v5, v3}, Landroid/app/usage/UsageStatsManagerInternal;->setActiveAdminApps(Ljava/util/Set;I)V

    .line 3847
    .end local v3  # "userId":I
    add-int/lit8 v2, v2, -0x1

    goto :goto_11

    .line 3852
    .end local v1  # "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    .end local v2  # "i":I
    :cond_27
    monitor-exit v0

    .line 3853
    return-void

    .line 3852
    :catchall_29
    move-exception v1

    monitor-exit v0
    :try_end_2b
    .catchall {:try_start_5 .. :try_end_2b} :catchall_29

    throw v1
.end method

.method private pushActiveAdminPackagesLocked(I)V
    .registers 4
    .param p1, "userId"  # I

    .line 3867
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUsageStatsManagerInternal:Landroid/app/usage/UsageStatsManagerInternal;

    .line 3868
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminPackagesLocked(I)Ljava/util/Set;

    move-result-object v1

    .line 3867
    invoke-virtual {v0, v1, p1}, Landroid/app/usage/UsageStatsManagerInternal;->setActiveAdminApps(Ljava/util/Set;I)V

    .line 3869
    return-void
.end method

.method private pushAllMeteredRestrictedPackages()V
    .registers 7

    .line 3856
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 3857
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v1}, Landroid/os/UserManager;->getUsers()Ljava/util/List;

    move-result-object v1

    .line 3858
    .local v1, "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    .local v2, "i":I
    :goto_11
    if-ltz v2, :cond_2b

    .line 3859
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/pm/UserInfo;

    iget v3, v3, Landroid/content/pm/UserInfo;->id:I

    .line 3860
    .local v3, "userId":I
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getNetworkPolicyManagerInternal()Lcom/android/server/net/NetworkPolicyManagerInternal;

    move-result-object v4

    .line 3861
    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getMeteredDisabledPackagesLocked(I)Ljava/util/Set;

    move-result-object v5

    .line 3860
    invoke-virtual {v4, v5, v3}, Lcom/android/server/net/NetworkPolicyManagerInternal;->setMeteredRestrictedPackagesAsync(Ljava/util/Set;I)V

    .line 3858
    .end local v3  # "userId":I
    add-int/lit8 v2, v2, -0x1

    goto :goto_11

    .line 3863
    .end local v1  # "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    .end local v2  # "i":I
    :cond_2b
    monitor-exit v0

    .line 3864
    return-void

    .line 3863
    :catchall_2d
    move-exception v1

    monitor-exit v0
    :try_end_2f
    .catchall {:try_start_5 .. :try_end_2f} :catchall_2d

    throw v1
.end method

.method private pushMeteredDisabledPackagesLocked(I)V
    .registers 4
    .param p1, "userId"  # I

    .line 12527
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getNetworkPolicyManagerInternal()Lcom/android/server/net/NetworkPolicyManagerInternal;

    move-result-object v0

    .line 12528
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getMeteredDisabledPackagesLocked(I)Ljava/util/Set;

    move-result-object v1

    .line 12527
    invoke-virtual {v0, v1, p1}, Lcom/android/server/net/NetworkPolicyManagerInternal;->setMeteredRestrictedPackages(Ljava/util/Set;I)V

    .line 12529
    return-void
.end method

.method private pushUserRestrictions(I)V
    .registers 8
    .param p1, "userId"  # I

    .line 10094
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10095
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p1}, Lcom/android/server/devicepolicy/Owners;->isDeviceOwnerUserId(I)Z

    move-result v1

    .line 10098
    .local v1, "isDeviceOwner":Z
    const/4 v2, 0x0

    .line 10100
    .local v2, "disallowCameraGlobally":Z
    if-eqz v1, :cond_1c

    .line 10101
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 10102
    .local v3, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-nez v3, :cond_16

    .line 10103
    monitor-exit v0

    return-void

    .line 10105
    :cond_16
    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->userRestrictions:Landroid/os/Bundle;

    .line 10107
    .local v4, "userRestrictions":Landroid/os/Bundle;
    iget-boolean v5, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCamera:Z

    move v2, v5

    .line 10108
    .end local v3  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    goto :goto_26

    .line 10109
    .end local v4  # "userRestrictions":Landroid/os/Bundle;
    :cond_1c
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 10110
    .local v3, "profileOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v3, :cond_25

    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->userRestrictions:Landroid/os/Bundle;

    goto :goto_26

    :cond_25
    const/4 v4, 0x0

    .line 10114
    .end local v3  # "profileOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v4  # "userRestrictions":Landroid/os/Bundle;
    :goto_26
    nop

    .line 10115
    invoke-direct {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCameraRestrictionScopeLocked(IZ)I

    move-result v3

    .line 10117
    .local v3, "cameraRestrictionScope":I
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    invoke-virtual {v5, p1, v4, v1, v3}, Landroid/os/UserManagerInternal;->setDevicePolicyUserRestrictions(ILandroid/os/Bundle;ZI)V

    .line 10119
    .end local v1  # "isDeviceOwner":Z
    .end local v2  # "disallowCameraGlobally":Z
    .end local v3  # "cameraRestrictionScope":I
    .end local v4  # "userRestrictions":Landroid/os/Bundle;
    monitor-exit v0

    .line 10120
    return-void

    .line 10119
    :catchall_32
    move-exception v1

    monitor-exit v0
    :try_end_34
    .catchall {:try_start_5 .. :try_end_34} :catchall_32

    throw v1
.end method

.method private putPrivateDnsSettings(Ljava/lang/String;Ljava/lang/String;)V
    .registers 7
    .param p1, "mode"  # Ljava/lang/String;
    .param p2, "host"  # Ljava/lang/String;

    .line 14130
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 14132
    .local v0, "origId":J
    :try_start_6
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string/jumbo v3, "private_dns_mode"

    invoke-virtual {v2, v3, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalPutString(Ljava/lang/String;Ljava/lang/String;)V

    .line 14133
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string/jumbo v3, "private_dns_specifier"

    invoke-virtual {v2, v3, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalPutString(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_16
    .catchall {:try_start_6 .. :try_end_16} :catchall_1d

    .line 14135
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 14136
    nop

    .line 14137
    return-void

    .line 14135
    :catchall_1d
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private recordSecurityLogRetrievalTime()V
    .registers 8

    .line 12696
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12697
    :try_start_5
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    .line 12698
    .local v1, "currentTime":J
    const/4 v3, 0x0

    invoke-virtual {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    .line 12699
    .local v4, "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-wide v5, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastSecurityLogRetrievalTime:J

    cmp-long v5, v1, v5

    if-lez v5, :cond_19

    .line 12700
    iput-wide v1, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastSecurityLogRetrievalTime:J

    .line 12701
    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 12703
    .end local v1  # "currentTime":J
    .end local v4  # "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :cond_19
    monitor-exit v0

    .line 12704
    return-void

    .line 12703
    :catchall_1b
    move-exception v1

    monitor-exit v0
    :try_end_1d
    .catchall {:try_start_5 .. :try_end_1d} :catchall_1b

    throw v1
.end method

.method private registerRemoteBugreportReceivers()V
    .registers 4

    .line 7467
    :try_start_0
    new-instance v0, Landroid/content/IntentFilter;

    const-string v1, "android.intent.action.REMOTE_BUGREPORT_DISPATCH"

    const-string v2, "application/vnd.android.bugreport"

    invoke-direct {v0, v1, v2}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 7470
    .local v0, "filterFinished":Landroid/content/IntentFilter;
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportFinishedReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {v1, v2, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;
    :try_end_10
    .catch Landroid/content/IntentFilter$MalformedMimeTypeException; {:try_start_0 .. :try_end_10} :catch_12

    .line 7474
    nop

    .end local v0  # "filterFinished":Landroid/content/IntentFilter;
    goto :goto_1a

    .line 7471
    :catch_12
    move-exception v0

    .line 7473
    .local v0, "e":Landroid/content/IntentFilter$MalformedMimeTypeException;
    const-string v1, "DevicePolicyManager"

    const-string v2, "Failed to set type application/vnd.android.bugreport"

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 7475
    .end local v0  # "e":Landroid/content/IntentFilter$MalformedMimeTypeException;
    :goto_1a
    new-instance v0, Landroid/content/IntentFilter;

    invoke-direct {v0}, Landroid/content/IntentFilter;-><init>()V

    .line 7476
    .local v0, "filterConsent":Landroid/content/IntentFilter;
    const-string v1, "com.android.server.action.REMOTE_BUGREPORT_SHARING_DECLINED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 7477
    const-string v1, "com.android.server.action.REMOTE_BUGREPORT_SHARING_ACCEPTED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 7478
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportConsentReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {v1, v2, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 7479
    return-void
.end method

.method private removeAdminArtifacts(Landroid/content/ComponentName;I)V
    .registers 10
    .param p1, "adminReceiver"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 12914
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12915
    :try_start_5
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 12916
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-nez v1, :cond_d

    .line 12917
    monitor-exit v0

    return-void

    .line 12919
    :cond_d
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 12920
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    const/4 v4, 0x5

    invoke-virtual {v3, v4}, Landroid/app/admin/DeviceAdminInfo;->usesPolicy(I)Z

    move-result v3

    .line 12922
    .local v3, "doProxyCleanup":Z
    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 12923
    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v4, p1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12924
    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->validatePasswordOwnerLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;)V

    .line 12925
    if-eqz v3, :cond_2a

    .line 12926
    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->resetGlobalProxyLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;)V

    .line 12928
    :cond_2a
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushActiveAdminPackagesLocked(I)V

    .line 12929
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushMeteredDisabledPackagesLocked(I)V

    .line 12930
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 12931
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateMaximumTimeToLockLocked(I)V

    .line 12932
    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRemovingAdmins:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 12934
    const-string v4, "DevicePolicyManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Device admin "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v6, " removed from user "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12935
    nop

    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v2  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v3  # "doProxyCleanup":Z
    monitor-exit v0
    :try_end_5b
    .catchall {:try_start_5 .. :try_end_5b} :catchall_5f

    .line 12938
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushUserRestrictions(I)V

    .line 12939
    return-void

    .line 12935
    :catchall_5f
    move-exception v1

    :try_start_60
    monitor-exit v0
    :try_end_61
    .catchall {:try_start_60 .. :try_end_61} :catchall_5f

    throw v1
.end method

.method private removeCaApprovalsIfNeeded(I)V
    .registers 7
    .param p1, "userId"  # I

    .line 5566
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v0, p1}, Landroid/os/UserManager;->getProfiles(I)Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_a
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_53

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/UserInfo;

    .line 5567
    .local v1, "userInfo":Landroid/content/pm/UserInfo;
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    iget v3, v1, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {v2, v3}, Lcom/android/internal/widget/LockPatternUtils;->isSecure(I)Z

    move-result v2

    .line 5568
    .local v2, "isSecure":Z
    invoke-virtual {v1}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v3

    if-eqz v3, :cond_31

    .line 5569
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    iget v4, v1, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {p0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v4

    invoke-virtual {v3, v4}, Lcom/android/internal/widget/LockPatternUtils;->isSecure(I)Z

    move-result v3

    or-int/2addr v2, v3

    .line 5571
    :cond_31
    if-nez v2, :cond_52

    .line 5572
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v3

    monitor-enter v3

    .line 5573
    :try_start_38
    iget v4, v1, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {p0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    iget-object v4, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAcceptedCaCertificates:Landroid/util/ArraySet;

    invoke-virtual {v4}, Landroid/util/ArraySet;->clear()V

    .line 5574
    iget v4, v1, Landroid/content/pm/UserInfo;->id:I

    invoke-direct {p0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 5575
    monitor-exit v3
    :try_end_49
    .catchall {:try_start_38 .. :try_end_49} :catchall_4f

    .line 5576
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mCertificateMonitor:Lcom/android/server/devicepolicy/CertificateMonitor;

    invoke-virtual {v3, p1}, Lcom/android/server/devicepolicy/CertificateMonitor;->onCertificateApprovalsChanged(I)V

    goto :goto_52

    .line 5575
    :catchall_4f
    move-exception v0

    :try_start_50
    monitor-exit v3
    :try_end_51
    .catchall {:try_start_50 .. :try_end_51} :catchall_4f

    throw v0

    .line 5578
    .end local v1  # "userInfo":Landroid/content/pm/UserInfo;
    .end local v2  # "isSecure":Z
    :cond_52
    :goto_52
    goto :goto_a

    .line 5579
    :cond_53
    return-void
.end method

.method private removeInvalidPkgsForMeteredDataRestriction(ILjava/util/List;)Ljava/util/List;
    .registers 8
    .param p1, "userId"  # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;)",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 12421
    .local p2, "pkgNames":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminPackagesLocked(I)Ljava/util/Set;

    move-result-object v0

    .line 12422
    .local v0, "activeAdmins":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 12423
    .local v1, "excludedPkgs":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-interface {p2}, Ljava/util/List;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    .local v2, "i":I
    :goto_f
    if-ltz v2, :cond_35

    .line 12424
    invoke-interface {p2, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    .line 12426
    .local v3, "pkgName":Ljava/lang/String;
    invoke-interface {v0, v3}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_21

    .line 12427
    invoke-interface {v1, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 12428
    goto :goto_32

    .line 12432
    :cond_21
    :try_start_21
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    invoke-interface {v4, v3, p1}, Landroid/content/pm/IPackageManager;->isPackageAvailable(Ljava/lang/String;I)Z

    move-result v4

    if-nez v4, :cond_30

    .line 12433
    invoke-interface {v1, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_30
    .catch Landroid/os/RemoteException; {:try_start_21 .. :try_end_30} :catch_31

    .line 12437
    :cond_30
    goto :goto_32

    .line 12435
    :catch_31
    move-exception v4

    .line 12423
    .end local v3  # "pkgName":Ljava/lang/String;
    :goto_32
    add-int/lit8 v2, v2, -0x1

    goto :goto_f

    .line 12439
    .end local v2  # "i":I
    :cond_35
    invoke-interface {p2, v1}, Ljava/util/List;->removeAll(Ljava/util/Collection;)Z

    .line 12440
    return-object v1
.end method

.method private removeOverrideApnUnchecked(I)Z
    .registers 9
    .param p1, "apnId"  # I

    .line 13975
    const/4 v0, 0x0

    if-gez p1, :cond_4

    .line 13976
    return v0

    .line 13978
    :cond_4
    const/4 v1, 0x0

    .line 13979
    .local v1, "numDeleted":I
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2

    .line 13981
    .local v2, "id":J
    :try_start_b
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    sget-object v5, Landroid/provider/Telephony$Carriers;->DPC_URI:Landroid/net/Uri;

    .line 13982
    invoke-static {p1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/net/Uri;->withAppendedPath(Landroid/net/Uri;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v5

    .line 13981
    const/4 v6, 0x0

    invoke-virtual {v4, v5, v6, v6}, Landroid/content/ContentResolver;->delete(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I

    move-result v4
    :try_end_20
    .catchall {:try_start_b .. :try_end_20} :catchall_2b

    move v1, v4

    .line 13984
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13985
    nop

    .line 13986
    if-lez v1, :cond_2a

    const/4 v0, 0x1

    :cond_2a
    return v0

    .line 13984
    :catchall_2b
    move-exception v0

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0
.end method

.method private removePackageIfRequired(Ljava/lang/String;I)V
    .registers 4
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userId"  # I

    .line 12871
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->packageHasActiveAdmins(Ljava/lang/String;I)Z

    move-result v0

    if-nez v0, :cond_9

    .line 12873
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->startUninstallIntent(Ljava/lang/String;I)V

    .line 12875
    :cond_9
    return-void
.end method

.method private resetGlobalProxyLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;)V
    .registers 7
    .param p1, "policy"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    .line 6968
    iget-object v0, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 6969
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_7
    if-ge v1, v0, :cond_20

    .line 6970
    iget-object v2, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 6971
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->specifiesGlobalProxy:Z

    if-eqz v3, :cond_1d

    .line 6972
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->globalProxySpec:Ljava/lang/String;

    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->globalProxyExclusionList:Ljava/lang/String;

    invoke-direct {p0, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveGlobalProxyLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 6973
    return-void

    .line 6969
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_1d
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 6977
    .end local v1  # "i":I
    :cond_20
    const/4 v1, 0x0

    invoke-direct {p0, v1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveGlobalProxyLocked(Ljava/lang/String;Ljava/lang/String;)V

    .line 6978
    return-void
.end method

.method private resetPasswordInternal(Ljava/lang/String;J[BIII)Z
    .registers 27
    .param p1, "password"  # Ljava/lang/String;
    .param p2, "tokenHandle"  # J
    .param p4, "token"  # [B
    .param p5, "flags"  # I
    .param p6, "callingUid"  # I
    .param p7, "userHandle"  # I

    .line 5100
    move-object/from16 v1, p0

    move/from16 v2, p6

    move/from16 v11, p7

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v3

    monitor-enter v3

    .line 5101
    const/4 v0, 0x0

    const/4 v12, 0x0

    :try_start_d
    invoke-virtual {v1, v0, v11, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordQuality(Landroid/content/ComponentName;IZ)I

    move-result v4

    .line 5102
    .local v4, "quality":I
    const/high16 v5, 0x80000

    if-ne v4, v5, :cond_16

    .line 5103
    const/4 v4, 0x0

    .line 5106
    :cond_16
    invoke-virtual/range {p1 .. p1}, Ljava/lang/String;->getBytes()[B

    move-result-object v5

    invoke-static {v5}, Landroid/app/admin/PasswordMetrics;->computeForPassword([B)Landroid/app/admin/PasswordMetrics;

    move-result-object v5

    .line 5107
    .local v5, "metrics":Landroid/app/admin/PasswordMetrics;
    iget v6, v5, Landroid/app/admin/PasswordMetrics;->quality:I

    .line 5108
    .local v6, "realQuality":I
    const/high16 v7, 0x60000

    if-ge v6, v4, :cond_4f

    if-eq v4, v7, :cond_4f

    .line 5109
    const-string v0, "DevicePolicyManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "resetPassword: password quality 0x"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5110
    invoke-static {v6}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, " does not meet required quality 0x"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5112
    invoke-static {v4}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .line 5109
    invoke-static {v0, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5113
    monitor-exit v3

    return v12

    .line 5115
    :cond_4f
    invoke-static {v6, v4}, Ljava/lang/Math;->max(II)I

    move-result v8

    move v13, v8

    .line 5116
    .end local v4  # "quality":I
    .local v13, "quality":I
    invoke-virtual {v1, v0, v11, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumLength(Landroid/content/ComponentName;IZ)I

    move-result v4

    .line 5117
    .local v4, "length":I
    invoke-virtual/range {p1 .. p1}, Ljava/lang/String;->length()I

    move-result v8

    if-ge v8, v4, :cond_83

    .line 5118
    const-string v0, "DevicePolicyManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "resetPassword: password length "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p1 .. p1}, Ljava/lang/String;->length()I

    move-result v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v8, " does not meet required length "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v0, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5120
    monitor-exit v3

    return v12

    .line 5122
    :cond_83
    if-ne v13, v7, :cond_190

    .line 5123
    invoke-virtual {v1, v0, v11, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumLetters(Landroid/content/ComponentName;IZ)I

    move-result v7

    .line 5124
    .local v7, "neededLetters":I
    iget v8, v5, Landroid/app/admin/PasswordMetrics;->letters:I

    if-ge v8, v7, :cond_b0

    .line 5125
    const-string v0, "DevicePolicyManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "resetPassword: number of letters "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v9, v5, Landroid/app/admin/PasswordMetrics;->letters:I

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v9, " does not meet required number of letters "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v0, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5127
    monitor-exit v3

    return v12

    .line 5129
    :cond_b0
    invoke-virtual {v1, v0, v11, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumNumeric(Landroid/content/ComponentName;IZ)I

    move-result v8

    .line 5130
    .local v8, "neededNumeric":I
    iget v9, v5, Landroid/app/admin/PasswordMetrics;->numeric:I

    if-ge v9, v8, :cond_db

    .line 5131
    const-string v0, "DevicePolicyManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v10, "resetPassword: number of numerical digits "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v10, v5, Landroid/app/admin/PasswordMetrics;->numeric:I

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v10, " does not meet required number of numerical digits "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v0, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5134
    monitor-exit v3

    return v12

    .line 5136
    :cond_db
    invoke-virtual {v1, v0, v11, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumLowerCase(Landroid/content/ComponentName;IZ)I

    move-result v9

    .line 5138
    .local v9, "neededLowerCase":I
    iget v10, v5, Landroid/app/admin/PasswordMetrics;->lowerCase:I

    if-ge v10, v9, :cond_106

    .line 5139
    const-string v0, "DevicePolicyManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v14, "resetPassword: number of lowercase letters "

    invoke-virtual {v10, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v14, v5, Landroid/app/admin/PasswordMetrics;->lowerCase:I

    invoke-virtual {v10, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v14, " does not meet required number of lowercase letters "

    invoke-virtual {v10, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v0, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5143
    monitor-exit v3

    return v12

    .line 5145
    :cond_106
    invoke-virtual {v1, v0, v11, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumUpperCase(Landroid/content/ComponentName;IZ)I

    move-result v10

    .line 5147
    .local v10, "neededUpperCase":I
    iget v14, v5, Landroid/app/admin/PasswordMetrics;->upperCase:I

    if-ge v14, v10, :cond_131

    .line 5148
    const-string v0, "DevicePolicyManager"

    new-instance v14, Ljava/lang/StringBuilder;

    invoke-direct {v14}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v15, "resetPassword: number of uppercase letters "

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v15, v5, Landroid/app/admin/PasswordMetrics;->upperCase:I

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v15, " does not meet required number of uppercase letters "

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v14, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v14}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v14

    invoke-static {v0, v14}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5152
    monitor-exit v3

    return v12

    .line 5154
    :cond_131
    invoke-virtual {v1, v0, v11, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumSymbols(Landroid/content/ComponentName;IZ)I

    move-result v14

    .line 5155
    .local v14, "neededSymbols":I
    iget v15, v5, Landroid/app/admin/PasswordMetrics;->symbols:I

    if-ge v15, v14, :cond_15d

    .line 5156
    const-string v0, "DevicePolicyManager"

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "resetPassword: number of special symbols "

    invoke-virtual {v15, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v12, v5, Landroid/app/admin/PasswordMetrics;->symbols:I

    invoke-virtual {v15, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v12, " does not meet required number of special symbols "

    invoke-virtual {v15, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v15, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v0, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5158
    monitor-exit v3

    const/4 v0, 0x0

    return v0

    .line 5160
    :cond_15d
    const/4 v12, 0x0

    invoke-virtual {v1, v0, v11, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordMinimumNonLetter(Landroid/content/ComponentName;IZ)I

    move-result v15

    move v12, v15

    .line 5162
    .local v12, "neededNonLetter":I
    iget v15, v5, Landroid/app/admin/PasswordMetrics;->nonLetter:I

    if-ge v15, v12, :cond_18d

    .line 5163
    const-string v0, "DevicePolicyManager"

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    move/from16 v17, v4

    .end local v4  # "length":I
    .local v17, "length":I
    const-string/jumbo v4, "resetPassword: number of non-letter characters "

    invoke-virtual {v15, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, v5, Landroid/app/admin/PasswordMetrics;->nonLetter:I

    invoke-virtual {v15, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " does not meet required number of non-letter characters "

    invoke-virtual {v15, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v15, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v0, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5167
    monitor-exit v3

    const/4 v0, 0x0

    return v0

    .line 5162
    .end local v17  # "length":I
    .restart local v4  # "length":I
    :cond_18d
    move/from16 v17, v4

    .end local v4  # "length":I
    .restart local v17  # "length":I
    goto :goto_192

    .line 5122
    .end local v7  # "neededLetters":I
    .end local v8  # "neededNumeric":I
    .end local v9  # "neededLowerCase":I
    .end local v10  # "neededUpperCase":I
    .end local v12  # "neededNonLetter":I
    .end local v14  # "neededSymbols":I
    .end local v17  # "length":I
    .restart local v4  # "length":I
    :cond_190
    move/from16 v17, v4

    .line 5170
    .end local v4  # "length":I
    .end local v5  # "metrics":Landroid/app/admin/PasswordMetrics;
    .end local v6  # "realQuality":I
    :goto_192
    monitor-exit v3
    :try_end_193
    .catchall {:try_start_d .. :try_end_193} :catchall_251

    .line 5172
    invoke-virtual {v1, v11}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v12

    .line 5173
    .local v12, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget v3, v12, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    if-ltz v3, :cond_1a9

    iget v3, v12, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    if-eq v3, v2, :cond_1a9

    .line 5174
    const-string v0, "DevicePolicyManager"

    const-string/jumbo v3, "resetPassword: already set by another uid and not entered by user"

    invoke-static {v0, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5175
    const/4 v14, 0x0

    return v14

    .line 5173
    :cond_1a9
    const/4 v14, 0x0

    .line 5178
    invoke-virtual {v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerDeviceOwner(I)Z

    move-result v15

    .line 5179
    .local v15, "callerIsDeviceOwnerAdmin":Z
    and-int/lit8 v3, p5, 0x2

    const/4 v10, 0x1

    if-eqz v3, :cond_1b5

    move v3, v10

    goto :goto_1b6

    :cond_1b5
    move v3, v14

    :goto_1b6
    move/from16 v16, v3

    .line 5181
    .local v16, "doNotAskCredentialsOnBoot":Z
    if-eqz v15, :cond_1bf

    if-eqz v16, :cond_1bf

    .line 5182
    invoke-direct/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDoNotAskCredentialsOnBoot()V

    .line 5187
    :cond_1bf
    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v8

    .line 5190
    .local v8, "ident":J
    if-nez p4, :cond_1f1

    .line 5193
    :try_start_1c7
    invoke-static/range {p1 .. p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v3

    if-nez v3, :cond_1e0

    .line 5194
    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual/range {p1 .. p1}, Ljava/lang/String;->getBytes()[B

    move-result-object v4
    :try_end_1d3
    .catchall {:try_start_1c7 .. :try_end_1d3} :catchall_1ec

    const/4 v5, 0x0

    const/4 v0, 0x1

    move v6, v13

    move/from16 v7, p7

    move/from16 v18, v15

    move-wide v14, v8

    .end local v8  # "ident":J
    .end local v15  # "callerIsDeviceOwnerAdmin":Z
    .local v14, "ident":J
    .local v18, "callerIsDeviceOwnerAdmin":Z
    move v8, v0

    :try_start_1dc
    invoke-virtual/range {v3 .. v8}, Lcom/android/internal/widget/LockPatternUtils;->saveLockPassword([B[BIIZ)Z

    goto :goto_1e8

    .line 5197
    .end local v14  # "ident":J
    .end local v18  # "callerIsDeviceOwnerAdmin":Z
    .restart local v8  # "ident":J
    .restart local v15  # "callerIsDeviceOwnerAdmin":Z
    :cond_1e0
    move/from16 v18, v15

    move-wide v14, v8

    .end local v8  # "ident":J
    .end local v15  # "callerIsDeviceOwnerAdmin":Z
    .restart local v14  # "ident":J
    .restart local v18  # "callerIsDeviceOwnerAdmin":Z
    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v3, v0, v11, v10}, Lcom/android/internal/widget/LockPatternUtils;->clearLock([BIZ)Z

    .line 5200
    :goto_1e8
    const/4 v0, 0x1

    move v3, v0

    move v0, v10

    .local v0, "result":Z
    goto :goto_21e

    .line 5225
    .end local v0  # "result":Z
    .end local v14  # "ident":J
    .end local v18  # "callerIsDeviceOwnerAdmin":Z
    .restart local v8  # "ident":J
    .restart local v15  # "callerIsDeviceOwnerAdmin":Z
    :catchall_1ec
    move-exception v0

    move/from16 v18, v15

    move-wide v14, v8

    .end local v8  # "ident":J
    .end local v15  # "callerIsDeviceOwnerAdmin":Z
    .restart local v14  # "ident":J
    .restart local v18  # "callerIsDeviceOwnerAdmin":Z
    goto :goto_24b

    .line 5202
    .end local v14  # "ident":J
    .end local v18  # "callerIsDeviceOwnerAdmin":Z
    .restart local v8  # "ident":J
    .restart local v15  # "callerIsDeviceOwnerAdmin":Z
    :cond_1f1
    move/from16 v18, v15

    move-wide v14, v8

    .end local v8  # "ident":J
    .end local v15  # "callerIsDeviceOwnerAdmin":Z
    .restart local v14  # "ident":J
    .restart local v18  # "callerIsDeviceOwnerAdmin":Z
    invoke-static/range {p1 .. p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_20e

    .line 5203
    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual/range {p1 .. p1}, Ljava/lang/String;->getBytes()[B

    move-result-object v4

    const/4 v5, 0x2

    move v6, v13

    move-wide/from16 v7, p2

    move-object/from16 v9, p4

    move v0, v10

    move/from16 v10, p7

    invoke-virtual/range {v3 .. v10}, Lcom/android/internal/widget/LockPatternUtils;->setLockCredentialWithToken([BIIJ[BI)Z

    move-result v3

    .local v3, "result":Z
    goto :goto_21e

    .line 5207
    .end local v3  # "result":Z
    :cond_20e
    move v0, v10

    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    const/4 v4, 0x0

    const/4 v5, -0x1

    move v6, v13

    move-wide/from16 v7, p2

    move-object/from16 v9, p4

    move/from16 v10, p7

    invoke-virtual/range {v3 .. v10}, Lcom/android/internal/widget/LockPatternUtils;->setLockCredentialWithToken([BIIJ[BI)Z

    move-result v3

    .line 5212
    .restart local v3  # "result":Z
    :goto_21e
    and-int/lit8 v4, p5, 0x1

    if-eqz v4, :cond_223

    goto :goto_224

    :cond_223
    const/4 v0, 0x0

    :goto_224
    move v4, v0

    .line 5213
    .local v4, "requireEntry":Z
    const/4 v0, -0x1

    if-eqz v4, :cond_22e

    .line 5214
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    const/4 v6, 0x2

    invoke-virtual {v5, v6, v0}, Lcom/android/internal/widget/LockPatternUtils;->requireStrongAuth(II)V

    .line 5217
    :cond_22e
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v5

    monitor-enter v5
    :try_end_233
    .catchall {:try_start_1dc .. :try_end_233} :catchall_24a

    .line 5218
    if-eqz v4, :cond_236

    move v0, v2

    .line 5219
    .local v0, "newOwner":I
    :cond_236
    :try_start_236
    iget v6, v12, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    if-eq v6, v0, :cond_23f

    .line 5220
    iput v0, v12, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    .line 5221
    invoke-direct {v1, v11}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 5223
    .end local v0  # "newOwner":I
    :cond_23f
    monitor-exit v5
    :try_end_240
    .catchall {:try_start_236 .. :try_end_240} :catchall_247

    .line 5225
    .end local v4  # "requireEntry":Z
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5226
    nop

    .line 5227
    return v3

    .line 5223
    .restart local v4  # "requireEntry":Z
    :catchall_247
    move-exception v0

    :try_start_248
    monitor-exit v5
    :try_end_249
    .catchall {:try_start_248 .. :try_end_249} :catchall_247

    .end local v12  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v13  # "quality":I
    .end local v14  # "ident":J
    .end local v16  # "doNotAskCredentialsOnBoot":Z
    .end local v18  # "callerIsDeviceOwnerAdmin":Z
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "password":Ljava/lang/String;
    .end local p2  # "tokenHandle":J
    .end local p4  # "token":[B
    .end local p5  # "flags":I
    .end local p6  # "callingUid":I
    .end local p7  # "userHandle":I
    :try_start_249
    throw v0
    :try_end_24a
    .catchall {:try_start_249 .. :try_end_24a} :catchall_24a

    .line 5225
    .end local v3  # "result":Z
    .end local v4  # "requireEntry":Z
    .restart local v12  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .restart local v13  # "quality":I
    .restart local v14  # "ident":J
    .restart local v16  # "doNotAskCredentialsOnBoot":Z
    .restart local v18  # "callerIsDeviceOwnerAdmin":Z
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "password":Ljava/lang/String;
    .restart local p2  # "tokenHandle":J
    .restart local p4  # "token":[B
    .restart local p5  # "flags":I
    .restart local p6  # "callingUid":I
    .restart local p7  # "userHandle":I
    :catchall_24a
    move-exception v0

    :goto_24b
    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0

    .line 5170
    .end local v12  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v13  # "quality":I
    .end local v14  # "ident":J
    .end local v16  # "doNotAskCredentialsOnBoot":Z
    .end local v18  # "callerIsDeviceOwnerAdmin":Z
    :catchall_251
    move-exception v0

    :try_start_252
    monitor-exit v3
    :try_end_253
    .catchall {:try_start_252 .. :try_end_253} :catchall_251

    throw v0
.end method

.method private resolveDelegateReceiver(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;
    .registers 12
    .param p1, "scope"  # Ljava/lang/String;
    .param p2, "action"  # Ljava/lang/String;
    .param p3, "userId"  # I

    .line 6229
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 6230
    :try_start_5
    invoke-direct {p0, p1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDelegatePackagesInternalLocked(Ljava/lang/String;I)Ljava/util/List;

    move-result-object v1

    .line 6231
    .local v1, "delegates":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    monitor-exit v0
    :try_end_a
    .catchall {:try_start_5 .. :try_end_a} :catchall_7b

    .line 6232
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v0

    const/4 v2, 0x0

    if-nez v0, :cond_12

    .line 6233
    return-object v2

    .line 6234
    :cond_12
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v0

    const/4 v3, 0x1

    if-le v0, v3, :cond_30

    .line 6235
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "More than one delegate holds "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v3, "DevicePolicyManager"

    invoke-static {v3, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 6236
    return-object v2

    .line 6238
    :cond_30
    const/4 v0, 0x0

    invoke-interface {v1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 6239
    .local v4, "pkg":Ljava/lang/String;
    new-instance v5, Landroid/content/Intent;

    invoke-direct {v5, p2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6240
    .local v5, "intent":Landroid/content/Intent;
    invoke-virtual {v5, v4}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 6243
    :try_start_3f
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-interface {v6, v5, v2, v0, p3}, Landroid/content/pm/IPackageManager;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;

    move-result-object v6

    .line 6244
    invoke-virtual {v6}, Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;

    move-result-object v6
    :try_end_49
    .catch Landroid/os/RemoteException; {:try_start_3f .. :try_end_49} :catch_79

    .line 6247
    .local v6, "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    nop

    .line 6248
    invoke-interface {v6}, Ljava/util/List;->size()I

    move-result v7

    .line 6249
    .local v7, "count":I
    if-lt v7, v3, :cond_78

    .line 6250
    if-le v7, v3, :cond_6b

    .line 6251
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " defines more than one delegate receiver for "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "DevicePolicyManager"

    invoke-static {v3, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6253
    :cond_6b
    invoke-interface {v6, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/content/pm/ResolveInfo;

    iget-object v0, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    invoke-virtual {v0}, Landroid/content/pm/ActivityInfo;->getComponentName()Landroid/content/ComponentName;

    move-result-object v0

    return-object v0

    .line 6255
    :cond_78
    return-object v2

    .line 6245
    .end local v6  # "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .end local v7  # "count":I
    :catch_79
    move-exception v0

    .line 6246
    .local v0, "e":Landroid/os/RemoteException;
    return-object v2

    .line 6231
    .end local v0  # "e":Landroid/os/RemoteException;
    .end local v1  # "delegates":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .end local v4  # "pkg":Ljava/lang/String;
    .end local v5  # "intent":Landroid/content/Intent;
    :catchall_7b
    move-exception v1

    :try_start_7c
    monitor-exit v0
    :try_end_7d
    .catchall {:try_start_7c .. :try_end_7d} :catchall_7b

    throw v1
.end method

.method private revertTransferOwnershipIfNecessaryLocked()V
    .registers 5

    .line 3594
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mTransferOwnershipMetadataManager:Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager;->metadataFileExists()Z

    move-result v0

    if-nez v0, :cond_9

    .line 3595
    return-void

    .line 3597
    :cond_9
    const-string v0, "DevicePolicyManager"

    const-string v1, "Owner transfer metadata file exists! Reverting transfer."

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 3598
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mTransferOwnershipMetadataManager:Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager;

    .line 3599
    invoke-virtual {v0}, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager;->loadMetadataFile()Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;

    move-result-object v0

    .line 3601
    .local v0, "metadata":Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;
    iget-object v1, v0, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;->adminType:Ljava/lang/String;

    const-string/jumbo v2, "profile-owner"

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_33

    .line 3602
    iget-object v1, v0, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;->targetComponent:Landroid/content/ComponentName;

    iget-object v2, v0, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;->sourceComponent:Landroid/content/ComponentName;

    iget v3, v0, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;->userId:I

    invoke-direct {p0, v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->transferProfileOwnershipLocked(Landroid/content/ComponentName;Landroid/content/ComponentName;I)V

    .line 3604
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->deleteTransferOwnershipMetadataFileLocked()V

    .line 3605
    iget v1, v0, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;->userId:I

    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->deleteTransferOwnershipBundleLocked(I)V

    goto :goto_4e

    .line 3606
    :cond_33
    iget-object v1, v0, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;->adminType:Ljava/lang/String;

    const-string v2, "device-owner"

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_4e

    .line 3607
    iget-object v1, v0, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;->targetComponent:Landroid/content/ComponentName;

    iget-object v2, v0, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;->sourceComponent:Landroid/content/ComponentName;

    iget v3, v0, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;->userId:I

    invoke-direct {p0, v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->transferDeviceOwnershipLocked(Landroid/content/ComponentName;Landroid/content/ComponentName;I)V

    .line 3609
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->deleteTransferOwnershipMetadataFileLocked()V

    .line 3610
    iget v1, v0, Lcom/android/server/devicepolicy/TransferOwnershipMetadataManager$Metadata;->userId:I

    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->deleteTransferOwnershipBundleLocked(I)V

    .line 3612
    :cond_4e
    :goto_4e
    const/4 v1, 0x1

    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateSystemUpdateFreezePeriodsRecord(Z)V

    .line 3613
    return-void
.end method

.method private saveGlobalProxyLocked(Ljava/lang/String;Ljava/lang/String;)V
    .registers 9
    .param p1, "proxySpec"  # Ljava/lang/String;
    .param p2, "exclusionList"  # Ljava/lang/String;

    .line 6981
    if-nez p2, :cond_4

    .line 6982
    const-string p2, ""

    .line 6984
    :cond_4
    if-nez p1, :cond_8

    .line 6985
    const-string p1, ""

    .line 6988
    :cond_8
    invoke-virtual {p1}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object p1

    .line 6989
    const-string v0, ":"

    invoke-virtual {p1, v0}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    .line 6990
    .local v0, "data":[Ljava/lang/String;
    const/16 v1, 0x1f90

    .line 6991
    .local v1, "proxyPort":I
    array-length v2, v0

    const/4 v3, 0x1

    if-le v2, v3, :cond_22

    .line 6993
    :try_start_18
    aget-object v2, v0, v3

    invoke-static {v2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v2
    :try_end_1e
    .catch Ljava/lang/NumberFormatException; {:try_start_18 .. :try_end_1e} :catch_20

    move v1, v2

    .line 6994
    :goto_1f
    goto :goto_22

    :catch_20
    move-exception v2

    goto :goto_1f

    .line 6996
    :cond_22
    :goto_22
    invoke-virtual {p2}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object p2

    .line 6998
    new-instance v2, Landroid/net/ProxyInfo;

    const/4 v3, 0x0

    aget-object v4, v0, v3

    invoke-direct {v2, v4, v1, p2}, Landroid/net/ProxyInfo;-><init>(Ljava/lang/String;ILjava/lang/String;)V

    .line 6999
    .local v2, "proxyProperties":Landroid/net/ProxyInfo;
    invoke-virtual {v2}, Landroid/net/ProxyInfo;->isValid()Z

    move-result v4

    if-nez v4, :cond_4f

    .line 7000
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Invalid proxy properties, ignoring: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Landroid/net/ProxyInfo;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "DevicePolicyManager"

    invoke-static {v4, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 7001
    return-void

    .line 7003
    :cond_4f
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    aget-object v3, v0, v3

    const-string v5, "global_http_proxy_host"

    invoke-virtual {v4, v5, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalPutString(Ljava/lang/String;Ljava/lang/String;)V

    .line 7004
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string v4, "global_http_proxy_port"

    invoke-virtual {v3, v4, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalPutInt(Ljava/lang/String;I)V

    .line 7005
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string v4, "global_http_proxy_exclusion_list"

    invoke-virtual {v3, v4, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalPutString(Ljava/lang/String;Ljava/lang/String;)V

    .line 7007
    return-void
.end method

.method private saveSettingsLocked(I)V
    .registers 23
    .param p1, "userHandle"  # I

    .line 3030
    const-string/jumbo v0, "lock-task-component"

    const-string/jumbo v1, "lock-task-features"

    const-string v2, "accepted-ca-certificate"

    const-string v3, "delegation"

    const-string/jumbo v4, "password-validity"

    const-string v5, "admin"

    const-string v6, "failed-password-attempts"

    const-string/jumbo v7, "password-owner"

    const-string/jumbo v8, "policies"

    invoke-virtual/range {p0 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v9

    .line 3031
    .local v9, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    invoke-direct/range {p0 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->makeJournaledFile(I)Lcom/android/internal/util/JournaledFile;

    move-result-object v10

    .line 3032
    .local v10, "journal":Lcom/android/internal/util/JournaledFile;
    const/4 v11, 0x0

    .line 3034
    .local v11, "stream":Ljava/io/FileOutputStream;
    :try_start_20
    new-instance v12, Ljava/io/FileOutputStream;

    invoke-virtual {v10}, Lcom/android/internal/util/JournaledFile;->chooseForWrite()Ljava/io/File;

    move-result-object v13

    const/4 v14, 0x0

    invoke-direct {v12, v13, v14}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;Z)V

    move-object v11, v12

    .line 3035
    new-instance v12, Lcom/android/internal/util/FastXmlSerializer;

    invoke-direct {v12}, Lcom/android/internal/util/FastXmlSerializer;-><init>()V

    .line 3036
    .local v12, "out":Lorg/xmlpull/v1/XmlSerializer;
    sget-object v13, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v13}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v13

    invoke-interface {v12, v11, v13}, Lorg/xmlpull/v1/XmlSerializer;->setOutput(Ljava/io/OutputStream;Ljava/lang/String;)V

    .line 3037
    const/4 v13, 0x1

    invoke-static {v13}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v15

    const/4 v14, 0x0

    invoke-interface {v12, v14, v15}, Lorg/xmlpull/v1/XmlSerializer;->startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V

    .line 3039
    invoke-interface {v12, v14, v8}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3040
    iget-object v15, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRestrictionsProvider:Landroid/content/ComponentName;
    :try_end_47
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_20 .. :try_end_47} :catch_323
    .catch Ljava/io/IOException; {:try_start_20 .. :try_end_47} :catch_323

    if-eqz v15, :cond_5d

    .line 3041
    :try_start_49
    const-string/jumbo v15, "permission-provider"

    iget-object v13, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRestrictionsProvider:Landroid/content/ComponentName;

    .line 3042
    invoke-virtual {v13}, Landroid/content/ComponentName;->flattenToString()Ljava/lang/String;

    move-result-object v13

    .line 3041
    invoke-interface {v12, v14, v15, v13}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
    :try_end_55
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_49 .. :try_end_55} :catch_56
    .catch Ljava/io/IOException; {:try_start_49 .. :try_end_55} :catch_56

    goto :goto_5d

    .line 3208
    .end local v12  # "out":Lorg/xmlpull/v1/XmlSerializer;
    :catch_56
    move-exception v0

    move-object/from16 v3, p0

    move-object/from16 v19, v10

    goto/16 :goto_328

    .line 3044
    .restart local v12  # "out":Lorg/xmlpull/v1/XmlSerializer;
    :cond_5d
    :goto_5d
    :try_start_5d
    iget-boolean v13, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserSetupComplete:Z
    :try_end_5f
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_5d .. :try_end_5f} :catch_323
    .catch Ljava/io/IOException; {:try_start_5d .. :try_end_5f} :catch_323

    if-eqz v13, :cond_6d

    .line 3045
    :try_start_61
    const-string/jumbo v13, "setup-complete"

    .line 3046
    const/4 v15, 0x1

    invoke-static {v15}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    move-result-object v14

    .line 3045
    const/4 v15, 0x0

    invoke-interface {v12, v15, v13, v14}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
    :try_end_6d
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_61 .. :try_end_6d} :catch_56
    .catch Ljava/io/IOException; {:try_start_61 .. :try_end_6d} :catch_56

    .line 3048
    :cond_6d
    :try_start_6d
    iget-boolean v13, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPaired:Z
    :try_end_6f
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_6d .. :try_end_6f} :catch_323
    .catch Ljava/io/IOException; {:try_start_6d .. :try_end_6f} :catch_323

    if-eqz v13, :cond_7c

    .line 3049
    :try_start_71
    const-string v13, "device-paired"

    .line 3050
    const/4 v14, 0x1

    invoke-static {v14}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    move-result-object v15

    .line 3049
    const/4 v14, 0x0

    invoke-interface {v12, v14, v13, v15}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
    :try_end_7c
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_71 .. :try_end_7c} :catch_56
    .catch Ljava/io/IOException; {:try_start_71 .. :try_end_7c} :catch_56

    .line 3052
    :cond_7c
    :try_start_7c
    iget-boolean v13, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDeviceProvisioningConfigApplied:Z
    :try_end_7e
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_7c .. :try_end_7e} :catch_323
    .catch Ljava/io/IOException; {:try_start_7c .. :try_end_7e} :catch_323

    if-eqz v13, :cond_8b

    .line 3053
    :try_start_80
    const-string v13, "device-provisioning-config-applied"

    .line 3054
    const/4 v14, 0x1

    invoke-static {v14}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    move-result-object v14

    .line 3053
    const/4 v15, 0x0

    invoke-interface {v12, v15, v13, v14}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
    :try_end_8b
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_80 .. :try_end_8b} :catch_56
    .catch Ljava/io/IOException; {:try_start_80 .. :try_end_8b} :catch_56

    .line 3056
    :cond_8b
    :try_start_8b
    iget v13, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserProvisioningState:I
    :try_end_8d
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_8b .. :try_end_8d} :catch_323
    .catch Ljava/io/IOException; {:try_start_8b .. :try_end_8d} :catch_323

    if-eqz v13, :cond_9c

    .line 3057
    :try_start_8f
    const-string/jumbo v13, "provisioning-state"

    iget v14, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserProvisioningState:I

    .line 3058
    invoke-static {v14}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v14

    .line 3057
    const/4 v15, 0x0

    invoke-interface {v12, v15, v13, v14}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
    :try_end_9c
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_8f .. :try_end_9c} :catch_56
    .catch Ljava/io/IOException; {:try_start_8f .. :try_end_9c} :catch_56

    .line 3060
    :cond_9c
    :try_start_9c
    iget v13, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPermissionPolicy:I
    :try_end_9e
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_9c .. :try_end_9e} :catch_323
    .catch Ljava/io/IOException; {:try_start_9c .. :try_end_9e} :catch_323

    if-eqz v13, :cond_ad

    .line 3061
    :try_start_a0
    const-string/jumbo v13, "permission-policy"

    iget v14, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPermissionPolicy:I

    .line 3062
    invoke-static {v14}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v14

    .line 3061
    const/4 v15, 0x0

    invoke-interface {v12, v15, v13, v14}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
    :try_end_ad
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_a0 .. :try_end_ad} :catch_56
    .catch Ljava/io/IOException; {:try_start_a0 .. :try_end_ad} :catch_56

    .line 3066
    :cond_ad
    const/4 v13, 0x0

    move v14, v13

    .local v14, "i":I
    :goto_af
    :try_start_af
    iget-object v13, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v13}, Landroid/util/ArrayMap;->size()I

    move-result v13
    :try_end_b5
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_af .. :try_end_b5} :catch_323
    .catch Ljava/io/IOException; {:try_start_af .. :try_end_b5} :catch_323

    if-ge v14, v13, :cond_10b

    .line 3067
    :try_start_b7
    iget-object v13, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v13, v14}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Ljava/lang/String;

    .line 3068
    .local v13, "delegatePackage":Ljava/lang/String;
    iget-object v15, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v15, v14}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Ljava/util/List;

    .line 3071
    .local v15, "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-interface {v15}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v16

    :goto_cb
    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->hasNext()Z

    move-result v17

    if-eqz v17, :cond_fb

    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Ljava/lang/String;

    move-object/from16 v18, v17

    .line 3072
    .local v18, "scope":Ljava/lang/String;
    move-object/from16 v17, v15

    const/4 v15, 0x0

    .end local v15  # "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .local v17, "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-interface {v12, v15, v3}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3073
    const-string v15, "delegatePackage"
    :try_end_e1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_b7 .. :try_end_e1} :catch_104
    .catch Ljava/io/IOException; {:try_start_b7 .. :try_end_e1} :catch_104

    move-object/from16 v19, v10

    const/4 v10, 0x0

    .end local v10  # "journal":Lcom/android/internal/util/JournaledFile;
    .local v19, "journal":Lcom/android/internal/util/JournaledFile;
    :try_start_e4
    invoke-interface {v12, v10, v15, v13}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3074
    const-string/jumbo v15, "scope"

    move-object/from16 v20, v13

    move-object/from16 v13, v18

    .end local v18  # "scope":Ljava/lang/String;
    .local v13, "scope":Ljava/lang/String;
    .local v20, "delegatePackage":Ljava/lang/String;
    invoke-interface {v12, v10, v15, v13}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3075
    invoke-interface {v12, v10, v3}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3076
    move-object/from16 v15, v17

    move-object/from16 v10, v19

    move-object/from16 v13, v20

    .end local v13  # "scope":Ljava/lang/String;
    goto :goto_cb

    .line 3071
    .end local v17  # "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .end local v19  # "journal":Lcom/android/internal/util/JournaledFile;
    .end local v20  # "delegatePackage":Ljava/lang/String;
    .restart local v10  # "journal":Lcom/android/internal/util/JournaledFile;
    .local v13, "delegatePackage":Ljava/lang/String;
    .restart local v15  # "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_fb
    move-object/from16 v19, v10

    move-object/from16 v20, v13

    move-object/from16 v17, v15

    .line 3066
    .end local v10  # "journal":Lcom/android/internal/util/JournaledFile;
    .end local v13  # "delegatePackage":Ljava/lang/String;
    .end local v15  # "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .restart local v19  # "journal":Lcom/android/internal/util/JournaledFile;
    add-int/lit8 v14, v14, 0x1

    goto :goto_af

    .line 3208
    .end local v12  # "out":Lorg/xmlpull/v1/XmlSerializer;
    .end local v14  # "i":I
    .end local v19  # "journal":Lcom/android/internal/util/JournaledFile;
    .restart local v10  # "journal":Lcom/android/internal/util/JournaledFile;
    :catch_104
    move-exception v0

    move-object/from16 v19, v10

    move-object/from16 v3, p0

    goto/16 :goto_328

    .line 3066
    .restart local v12  # "out":Lorg/xmlpull/v1/XmlSerializer;
    .restart local v14  # "i":I
    :cond_10b
    move-object/from16 v19, v10

    .line 3079
    .end local v10  # "journal":Lcom/android/internal/util/JournaledFile;
    .end local v14  # "i":I
    .restart local v19  # "journal":Lcom/android/internal/util/JournaledFile;
    iget-object v3, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3
    :try_end_113
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_e4 .. :try_end_113} :catch_31f
    .catch Ljava/io/IOException; {:try_start_e4 .. :try_end_113} :catch_31f

    .line 3080
    .local v3, "N":I
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_114
    const-string/jumbo v13, "name"

    if-ge v10, v3, :cond_145

    .line 3081
    :try_start_119
    iget-object v14, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v14, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 3082
    .local v14, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v14, :cond_13e

    .line 3083
    const/4 v15, 0x0

    invoke-interface {v12, v15, v5}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3084
    iget-object v15, v14, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v15}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v15

    invoke-virtual {v15}, Landroid/content/ComponentName;->flattenToString()Ljava/lang/String;

    move-result-object v15

    move/from16 v16, v3

    const/4 v3, 0x0

    .end local v3  # "N":I
    .local v16, "N":I
    invoke-interface {v12, v3, v13, v15}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3085
    invoke-virtual {v14, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->writeToXml(Lorg/xmlpull/v1/XmlSerializer;)V

    .line 3086
    invoke-interface {v12, v3, v5}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    goto :goto_140

    .line 3082
    .end local v16  # "N":I
    .restart local v3  # "N":I
    :cond_13e
    move/from16 v16, v3

    .line 3080
    .end local v3  # "N":I
    .end local v14  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v16  # "N":I
    :goto_140
    add-int/lit8 v10, v10, 0x1

    move/from16 v3, v16

    goto :goto_114

    .end local v16  # "N":I
    .restart local v3  # "N":I
    :cond_145
    move/from16 v16, v3

    .line 3090
    .end local v3  # "N":I
    .end local v10  # "i":I
    .restart local v16  # "N":I
    iget v3, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I
    :try_end_149
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_119 .. :try_end_149} :catch_31f
    .catch Ljava/io/IOException; {:try_start_119 .. :try_end_149} :catch_31f

    const-string/jumbo v5, "value"

    if-ltz v3, :cond_15e

    .line 3091
    const/4 v3, 0x0

    :try_start_14f
    invoke-interface {v12, v3, v7}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3092
    iget v10, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    invoke-static {v10}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v10

    invoke-interface {v12, v3, v5, v10}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3093
    invoke-interface {v12, v3, v7}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3096
    :cond_15e
    iget v3, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mFailedPasswordAttempts:I

    if-eqz v3, :cond_172

    .line 3097
    const/4 v3, 0x0

    invoke-interface {v12, v3, v6}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3098
    iget v7, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mFailedPasswordAttempts:I

    invoke-static {v7}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v7

    invoke-interface {v12, v3, v5, v7}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3099
    invoke-interface {v12, v3, v6}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
    :try_end_172
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_14f .. :try_end_172} :catch_31f
    .catch Ljava/io/IOException; {:try_start_14f .. :try_end_172} :catch_31f

    .line 3105
    :cond_172
    move-object/from16 v3, p0

    :try_start_174
    iget-object v6, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->storageManagerIsFileBasedEncryptionEnabled()Z

    move-result v6

    if-nez v6, :cond_18c

    .line 3106
    const/4 v6, 0x0

    invoke-interface {v12, v6, v4}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3107
    iget-boolean v7, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordValidAtLastCheckpoint:Z

    .line 3108
    invoke-static {v7}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    move-result-object v7

    .line 3107
    invoke-interface {v12, v6, v5, v7}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3109
    invoke-interface {v12, v6, v4}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3112
    :cond_18c
    const/4 v4, 0x0

    move v6, v4

    .local v6, "i":I
    :goto_18e
    iget-object v4, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAcceptedCaCertificates:Landroid/util/ArraySet;

    invoke-virtual {v4}, Landroid/util/ArraySet;->size()I

    move-result v4

    if-ge v6, v4, :cond_1ac

    .line 3113
    const/4 v4, 0x0

    invoke-interface {v12, v4, v2}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3114
    iget-object v4, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAcceptedCaCertificates:Landroid/util/ArraySet;

    invoke-virtual {v4, v6}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    const/4 v7, 0x0

    invoke-interface {v12, v7, v13, v4}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3115
    invoke-interface {v12, v7, v2}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3112
    add-int/lit8 v6, v6, 0x1

    goto :goto_18e

    .line 3118
    .end local v6  # "i":I
    :cond_1ac
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1ad
    iget-object v4, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskPackages:Ljava/util/List;

    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v4

    if-ge v2, v4, :cond_1cb

    .line 3119
    iget-object v4, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskPackages:Ljava/util/List;

    invoke-interface {v4, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 3120
    .local v4, "component":Ljava/lang/String;
    const/4 v6, 0x0

    invoke-interface {v12, v6, v0}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3121
    invoke-interface {v12, v6, v13, v4}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3122
    invoke-interface {v12, v6, v0}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3118
    nop

    .end local v4  # "component":Ljava/lang/String;
    add-int/lit8 v2, v2, 0x1

    goto :goto_1ad

    .line 3125
    .end local v2  # "i":I
    :cond_1cb
    iget v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskFeatures:I

    if-eqz v0, :cond_1df

    .line 3126
    const/4 v0, 0x0

    invoke-interface {v12, v0, v1}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3127
    iget v2, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskFeatures:I

    invoke-static {v2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v2

    invoke-interface {v12, v0, v5, v2}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3128
    invoke-interface {v12, v0, v1}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3131
    :cond_1df
    iget-boolean v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mStatusBarDisabled:Z

    if-eqz v0, :cond_1fc

    .line 3132
    const-string/jumbo v0, "statusbar"

    const/4 v1, 0x0

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3133
    const-string v0, "disabled"

    iget-boolean v1, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mStatusBarDisabled:Z

    invoke-static {v1}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    move-result-object v1

    const/4 v2, 0x0

    invoke-interface {v12, v2, v0, v1}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3134
    const-string/jumbo v0, "statusbar"

    invoke-interface {v12, v2, v0}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3137
    :cond_1fc
    iget-boolean v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->doNotAskCredentialsOnBoot:Z

    if-eqz v0, :cond_20b

    .line 3138
    const-string v0, "do-not-ask-credentials-on-boot"

    const/4 v1, 0x0

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3139
    const-string v0, "do-not-ask-credentials-on-boot"

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3142
    :cond_20b
    iget-object v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAffiliationIds:Ljava/util/Set;

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_211
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_230

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    .line 3143
    .local v1, "id":Ljava/lang/String;
    const-string v2, "affiliation-id"

    const/4 v4, 0x0

    invoke-interface {v12, v4, v2}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3144
    const-string/jumbo v2, "id"

    invoke-interface {v12, v4, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3145
    const-string v2, "affiliation-id"

    invoke-interface {v12, v4, v2}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3146
    nop

    .end local v1  # "id":Ljava/lang/String;
    goto :goto_211

    .line 3148
    :cond_230
    iget-wide v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastSecurityLogRetrievalTime:J

    const-wide/16 v6, 0x0

    cmp-long v0, v0, v6

    if-ltz v0, :cond_24e

    .line 3149
    const-string/jumbo v0, "last-security-log-retrieval"

    const/4 v1, 0x0

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3150
    iget-wide v13, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastSecurityLogRetrievalTime:J

    .line 3151
    invoke-static {v13, v14}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v0

    .line 3150
    invoke-interface {v12, v1, v5, v0}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3152
    const-string/jumbo v0, "last-security-log-retrieval"

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3155
    :cond_24e
    iget-wide v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastBugReportRequestTime:J

    cmp-long v0, v0, v6

    if-ltz v0, :cond_26a

    .line 3156
    const-string/jumbo v0, "last-bug-report-request"

    const/4 v1, 0x0

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3157
    iget-wide v13, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastBugReportRequestTime:J

    .line 3158
    invoke-static {v13, v14}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v0

    .line 3157
    invoke-interface {v12, v1, v5, v0}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3159
    const-string/jumbo v0, "last-bug-report-request"

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3162
    :cond_26a
    iget-wide v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastNetworkLogsRetrievalTime:J

    cmp-long v0, v0, v6

    if-ltz v0, :cond_286

    .line 3163
    const-string/jumbo v0, "last-network-log-retrieval"

    const/4 v1, 0x0

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3164
    iget-wide v13, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastNetworkLogsRetrievalTime:J

    .line 3165
    invoke-static {v13, v14}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v0

    .line 3164
    invoke-interface {v12, v1, v5, v0}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3166
    const-string/jumbo v0, "last-network-log-retrieval"

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3169
    :cond_286
    iget-boolean v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminBroadcastPending:Z

    if-eqz v0, :cond_29e

    .line 3170
    const-string v0, "admin-broadcast-pending"

    const/4 v1, 0x0

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3171
    iget-boolean v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminBroadcastPending:Z

    .line 3172
    invoke-static {v0}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    move-result-object v0

    .line 3171
    invoke-interface {v12, v1, v5, v0}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3173
    const-string v0, "admin-broadcast-pending"

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3176
    :cond_29e
    iget-object v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mInitBundle:Landroid/os/PersistableBundle;

    if-eqz v0, :cond_2b5

    .line 3177
    const-string/jumbo v0, "initialization-bundle"

    const/4 v1, 0x0

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3178
    iget-object v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mInitBundle:Landroid/os/PersistableBundle;

    invoke-virtual {v0, v12}, Landroid/os/PersistableBundle;->saveToXml(Lorg/xmlpull/v1/XmlSerializer;)V

    .line 3179
    const-string/jumbo v0, "initialization-bundle"

    const/4 v1, 0x0

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3182
    :cond_2b5
    iget-wide v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    cmp-long v0, v0, v6

    if-eqz v0, :cond_2d1

    .line 3183
    const-string/jumbo v0, "password-token"

    const/4 v1, 0x0

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3184
    iget-wide v6, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    .line 3185
    invoke-static {v6, v7}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v0

    .line 3184
    invoke-interface {v12, v1, v5, v0}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3186
    const-string/jumbo v0, "password-token"

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3189
    :cond_2d1
    iget-boolean v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mCurrentInputMethodSet:Z

    if-eqz v0, :cond_2e0

    .line 3190
    const-string v0, "current-ime-set"

    const/4 v1, 0x0

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3191
    const-string v0, "current-ime-set"

    invoke-interface {v12, v1, v0}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3194
    :cond_2e0
    iget-object v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mOwnerInstalledCaCerts:Ljava/util/Set;

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_2e6
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_306

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    .line 3195
    .local v1, "cert":Ljava/lang/String;
    const-string/jumbo v2, "owner-installed-ca-cert"

    const/4 v4, 0x0

    invoke-interface {v12, v4, v2}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3196
    const-string v2, "alias"

    invoke-interface {v12, v4, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3197
    const-string/jumbo v2, "owner-installed-ca-cert"

    invoke-interface {v12, v4, v2}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3198
    nop

    .end local v1  # "cert":Ljava/lang/String;
    goto :goto_2e6

    .line 3200
    :cond_306
    const/4 v0, 0x0

    invoke-interface {v12, v0, v8}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 3202
    invoke-interface {v12}, Lorg/xmlpull/v1/XmlSerializer;->endDocument()V

    .line 3203
    invoke-virtual {v11}, Ljava/io/FileOutputStream;->flush()V

    .line 3204
    invoke-static {v11}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z

    .line 3205
    invoke-virtual {v11}, Ljava/io/FileOutputStream;->close()V

    .line 3206
    invoke-virtual/range {v19 .. v19}, Lcom/android/internal/util/JournaledFile;->commit()V

    .line 3207
    invoke-direct/range {p0 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendChangedNotification(I)V
    :try_end_31c
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_174 .. :try_end_31c} :catch_31d
    .catch Ljava/io/IOException; {:try_start_174 .. :try_end_31c} :catch_31d

    .line 3218
    .end local v12  # "out":Lorg/xmlpull/v1/XmlSerializer;
    .end local v16  # "N":I
    goto :goto_33c

    .line 3208
    :catch_31d
    move-exception v0

    goto :goto_328

    :catch_31f
    move-exception v0

    move-object/from16 v3, p0

    goto :goto_328

    .end local v19  # "journal":Lcom/android/internal/util/JournaledFile;
    .local v10, "journal":Lcom/android/internal/util/JournaledFile;
    :catch_323
    move-exception v0

    move-object/from16 v3, p0

    move-object/from16 v19, v10

    .end local v10  # "journal":Lcom/android/internal/util/JournaledFile;
    .restart local v19  # "journal":Lcom/android/internal/util/JournaledFile;
    :goto_328
    move-object v1, v0

    .line 3209
    .local v1, "e":Ljava/lang/Exception;
    const-string v0, "DevicePolicyManager"

    const-string v2, "failed writing file"

    invoke-static {v0, v2, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3211
    if-eqz v11, :cond_338

    .line 3212
    :try_start_332
    invoke-virtual {v11}, Ljava/io/FileOutputStream;->close()V
    :try_end_335
    .catch Ljava/io/IOException; {:try_start_332 .. :try_end_335} :catch_336

    goto :goto_338

    .line 3214
    :catch_336
    move-exception v0

    goto :goto_339

    .line 3216
    :cond_338
    :goto_338
    nop

    .line 3217
    :goto_339
    invoke-virtual/range {v19 .. v19}, Lcom/android/internal/util/JournaledFile;->rollback()V

    .line 3219
    .end local v1  # "e":Ljava/lang/Exception;
    :goto_33c
    return-void
.end method

.method private saveUserRestrictionsLocked(I)V
    .registers 2
    .param p1, "userId"  # I

    .line 10088
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 10089
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushUserRestrictions(I)V

    .line 10090
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendChangedNotification(I)V

    .line 10091
    return-void
.end method

.method private sendActiveAdminCommand(Ljava/lang/String;Landroid/os/Bundle;ILandroid/content/ComponentName;)V
    .registers 8
    .param p1, "action"  # Ljava/lang/String;
    .param p2, "extras"  # Landroid/os/Bundle;
    .param p3, "userHandle"  # I
    .param p4, "receiverComponent"  # Landroid/content/ComponentName;

    .line 7438
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0, p1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7439
    .local v0, "intent":Landroid/content/Intent;
    invoke-virtual {v0, p4}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 7440
    if-eqz p2, :cond_d

    .line 7441
    invoke-virtual {v0, p2}, Landroid/content/Intent;->putExtras(Landroid/os/Bundle;)Landroid/content/Intent;

    .line 7443
    :cond_d
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {p3}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v2

    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 7444
    return-void
.end method

.method private sendAdminCommandForLockscreenPoliciesLocked(Ljava/lang/String;II)V
    .registers 7
    .param p1, "action"  # Ljava/lang/String;
    .param p2, "reqPolicy"  # I
    .param p3, "userHandle"  # I

    .line 2948
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 2949
    .local v0, "extras":Landroid/os/Bundle;
    invoke-static {p3}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v1

    const-string v2, "android.intent.extra.USER"

    invoke-virtual {v0, v2, v1}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 2950
    invoke-direct {p0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSeparateProfileChallengeEnabled(I)Z

    move-result v1

    if-eqz v1, :cond_18

    .line 2951
    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Ljava/lang/String;IILandroid/os/Bundle;)V

    goto :goto_1b

    .line 2953
    :cond_18
    invoke-direct {p0, p1, p2, p3, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandToSelfAndProfilesLocked(Ljava/lang/String;IILandroid/os/Bundle;)V

    .line 2955
    :goto_1b
    return-void
.end method

.method private sendAdminCommandToSelfAndProfilesLocked(Ljava/lang/String;IILandroid/os/Bundle;)V
    .registers 9
    .param p1, "action"  # Ljava/lang/String;
    .param p2, "reqPolicy"  # I
    .param p3, "userHandle"  # I
    .param p4, "adminExtras"  # Landroid/os/Bundle;

    .line 2937
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v0, p3}, Landroid/os/UserManager;->getProfileIdsWithDisabled(I)[I

    move-result-object v0

    .line 2938
    .local v0, "profileIds":[I
    array-length v1, v0

    const/4 v2, 0x0

    :goto_8
    if-ge v2, v1, :cond_12

    aget v3, v0, v2

    .line 2939
    .local v3, "profileId":I
    invoke-virtual {p0, p1, p2, v3, p4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Ljava/lang/String;IILandroid/os/Bundle;)V

    .line 2938
    .end local v3  # "profileId":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_8

    .line 2941
    :cond_12
    return-void
.end method

.method private sendChangedNotification(I)V
    .registers 7
    .param p1, "userHandle"  # I

    .line 3222
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.app.action.DEVICE_POLICY_MANAGER_STATE_CHANGED"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 3223
    .local v0, "intent":Landroid/content/Intent;
    const/high16 v1, 0x40000000  # 2.0f

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 3224
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 3226
    .local v1, "ident":J
    :try_start_12
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    new-instance v4, Landroid/os/UserHandle;

    invoke-direct {v4, p1}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {v3, v0, v4}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_1c
    .catchall {:try_start_12 .. :try_end_1c} :catchall_23

    .line 3228
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 3229
    nop

    .line 3230
    return-void

    .line 3228
    :catchall_23
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method private sendDelegationChangedBroadcast(Ljava/lang/String;Ljava/util/ArrayList;I)V
    .registers 7
    .param p1, "delegatePackage"  # Ljava/lang/String;
    .param p3, "userId"  # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .line 6122
    .local p2, "scopes":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.app.action.APPLICATION_DELEGATION_SCOPES_CHANGED"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6125
    .local v0, "intent":Landroid/content/Intent;
    const/high16 v1, 0x40000000  # 2.0f

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 6127
    invoke-virtual {v0, p1}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 6129
    const-string v1, "android.app.extra.DELEGATION_SCOPES"

    invoke-virtual {v0, v1, p2}, Landroid/content/Intent;->putStringArrayListExtra(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;

    .line 6131
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {p3}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v2

    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 6132
    return-void
.end method

.method private sendNetworkLoggingNotificationLocked()V
    .registers 11

    .line 13381
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 13382
    .local v0, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v0, :cond_af

    iget-boolean v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->isNetworkLoggingEnabled:Z

    if-nez v1, :cond_c

    goto/16 :goto_af

    .line 13385
    :cond_c
    iget v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->numNetworkLoggingNotifications:I

    const/4 v2, 0x2

    if-lt v1, v2, :cond_12

    .line 13387
    return-void

    .line 13389
    :cond_12
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v3

    .line 13390
    .local v3, "now":J
    iget-wide v5, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->lastNetworkLoggingNotificationTimeMs:J

    sub-long v5, v3, v5

    sget-wide v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->MS_PER_DAY:J

    cmp-long v1, v5, v7

    if-gez v1, :cond_21

    .line 13391
    return-void

    .line 13393
    :cond_21
    iget v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->numNetworkLoggingNotifications:I

    const/4 v5, 0x1

    add-int/2addr v1, v5

    iput v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->numNetworkLoggingNotifications:I

    .line 13394
    iget v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->numNetworkLoggingNotifications:I

    if-lt v1, v2, :cond_30

    .line 13396
    const-wide/16 v1, 0x0

    iput-wide v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->lastNetworkLoggingNotificationTimeMs:J

    goto :goto_32

    .line 13398
    :cond_30
    iput-wide v3, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->lastNetworkLoggingNotificationTimeMs:J

    .line 13400
    :goto_32
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.app.action.SHOW_DEVICE_MONITORING_DIALOG"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 13401
    .local v1, "intent":Landroid/content/Intent;
    const-string v2, "com.android.systemui"

    invoke-virtual {v1, v2}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 13402
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    sget-object v6, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    const/4 v7, 0x0

    invoke-static {v2, v7, v1, v7, v6}, Landroid/app/PendingIntent;->getBroadcastAsUser(Landroid/content/Context;ILandroid/content/Intent;ILandroid/os/UserHandle;)Landroid/app/PendingIntent;

    move-result-object v2

    .line 13404
    .local v2, "pendingIntent":Landroid/app/PendingIntent;
    new-instance v6, Landroid/app/Notification$Builder;

    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    sget-object v8, Lcom/android/internal/notification/SystemNotificationChannels;->DEVICE_ADMIN:Ljava/lang/String;

    invoke-direct {v6, v7, v8}, Landroid/app/Notification$Builder;-><init>(Landroid/content/Context;Ljava/lang/String;)V

    const v7, 0x108039b

    .line 13406
    invoke-virtual {v6, v7}, Landroid/app/Notification$Builder;->setSmallIcon(I)Landroid/app/Notification$Builder;

    move-result-object v6

    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 13407
    const v8, 0x1040451

    invoke-virtual {v7, v8}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Landroid/app/Notification$Builder;->setContentTitle(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v6

    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 13408
    const v9, 0x1040450

    invoke-virtual {v7, v9}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Landroid/app/Notification$Builder;->setContentText(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v6

    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 13409
    invoke-virtual {v7, v8}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Landroid/app/Notification$Builder;->setTicker(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v6

    .line 13410
    invoke-virtual {v6, v5}, Landroid/app/Notification$Builder;->setShowWhen(Z)Landroid/app/Notification$Builder;

    move-result-object v5

    .line 13411
    invoke-virtual {v5, v2}, Landroid/app/Notification$Builder;->setContentIntent(Landroid/app/PendingIntent;)Landroid/app/Notification$Builder;

    move-result-object v5

    new-instance v6, Landroid/app/Notification$BigTextStyle;

    invoke-direct {v6}, Landroid/app/Notification$BigTextStyle;-><init>()V

    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 13413
    invoke-virtual {v7, v9}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Landroid/app/Notification$BigTextStyle;->bigText(Ljava/lang/CharSequence;)Landroid/app/Notification$BigTextStyle;

    move-result-object v6

    .line 13412
    invoke-virtual {v5, v6}, Landroid/app/Notification$Builder;->setStyle(Landroid/app/Notification$Style;)Landroid/app/Notification$Builder;

    move-result-object v5

    .line 13414
    invoke-virtual {v5}, Landroid/app/Notification$Builder;->build()Landroid/app/Notification;

    move-result-object v5

    .line 13415
    .local v5, "notification":Landroid/app/Notification;
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getNotificationManager()Landroid/app/NotificationManager;

    move-result-object v6

    const/16 v7, 0x3ea

    invoke-virtual {v6, v7, v5}, Landroid/app/NotificationManager;->notify(ILandroid/app/Notification;)V

    .line 13416
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v6}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v6

    invoke-direct {p0, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 13417
    return-void

    .line 13383
    .end local v1  # "intent":Landroid/content/Intent;
    .end local v2  # "pendingIntent":Landroid/app/PendingIntent;
    .end local v3  # "now":J
    .end local v5  # "notification":Landroid/app/Notification;
    :cond_af
    :goto_af
    return-void
.end method

.method private sendOwnerChangedBroadcast(Ljava/lang/String;I)V
    .registers 6
    .param p1, "broadcast"  # Ljava/lang/String;
    .param p2, "userId"  # I

    .line 7447
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0, p1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7448
    const/high16 v1, 0x1000000

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    move-result-object v0

    .line 7449
    .local v0, "intent":Landroid/content/Intent;
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {p2}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v2

    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 7450
    return-void
.end method

.method private sendPrivateKeyAliasResponse(Ljava/lang/String;Landroid/os/IBinder;)V
    .registers 7
    .param p1, "alias"  # Ljava/lang/String;
    .param p2, "responseBinder"  # Landroid/os/IBinder;

    .line 6007
    nop

    .line 6008
    invoke-static {p2}, Landroid/security/IKeyChainAliasCallback$Stub;->asInterface(Landroid/os/IBinder;)Landroid/security/IKeyChainAliasCallback;

    move-result-object v0

    .line 6012
    .local v0, "keyChainAliasResponse":Landroid/security/IKeyChainAliasCallback;
    :try_start_5
    invoke-interface {v0, p1}, Landroid/security/IKeyChainAliasCallback;->alias(Ljava/lang/String;)V
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_8} :catch_9

    .line 6017
    goto :goto_11

    .line 6013
    :catch_9
    move-exception v1

    .line 6016
    .local v1, "e":Ljava/lang/Exception;
    const-string v2, "DevicePolicyManager"

    const-string v3, "error while responding to callback"

    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6018
    .end local v1  # "e":Ljava/lang/Exception;
    :goto_11
    return-void
.end method

.method private sendProfileOwnerCommand(Ljava/lang/String;Landroid/os/Bundle;I)V
    .registers 5
    .param p1, "action"  # Ljava/lang/String;
    .param p2, "extras"  # Landroid/os/Bundle;
    .param p3, "userHandle"  # I

    .line 7432
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 7433
    invoke-virtual {v0, p3}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerComponent(I)Landroid/content/ComponentName;

    move-result-object v0

    .line 7432
    invoke-direct {p0, p1, p2, p3, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendActiveAdminCommand(Ljava/lang/String;Landroid/os/Bundle;ILandroid/content/ComponentName;)V

    .line 7434
    return-void
.end method

.method private sendWipeProfileNotification(Ljava/lang/String;)V
    .registers 5
    .param p1, "wipeReasonForUser"  # Ljava/lang/String;

    .line 6607
    new-instance v0, Landroid/app/Notification$Builder;

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    sget-object v2, Lcom/android/internal/notification/SystemNotificationChannels;->DEVICE_ADMIN:Ljava/lang/String;

    invoke-direct {v0, v1, v2}, Landroid/app/Notification$Builder;-><init>(Landroid/content/Context;Ljava/lang/String;)V

    .line 6609
    const v1, 0x108008a

    invoke-virtual {v0, v1}, Landroid/app/Notification$Builder;->setSmallIcon(I)Landroid/app/Notification$Builder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 6610
    const v2, 0x10407b0

    invoke-virtual {v1, v2}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/app/Notification$Builder;->setContentTitle(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v0

    .line 6611
    invoke-virtual {v0, p1}, Landroid/app/Notification$Builder;->setContentText(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 6612
    const v2, 0x106001c

    invoke-virtual {v1, v2}, Landroid/content/Context;->getColor(I)I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/app/Notification$Builder;->setColor(I)Landroid/app/Notification$Builder;

    move-result-object v0

    new-instance v1, Landroid/app/Notification$BigTextStyle;

    invoke-direct {v1}, Landroid/app/Notification$BigTextStyle;-><init>()V

    .line 6613
    invoke-virtual {v1, p1}, Landroid/app/Notification$BigTextStyle;->bigText(Ljava/lang/CharSequence;)Landroid/app/Notification$BigTextStyle;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/app/Notification$Builder;->setStyle(Landroid/app/Notification$Style;)Landroid/app/Notification$Builder;

    move-result-object v0

    .line 6614
    invoke-virtual {v0}, Landroid/app/Notification$Builder;->build()Landroid/app/Notification;

    move-result-object v0

    .line 6615
    .local v0, "notification":Landroid/app/Notification;
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getNotificationManager()Landroid/app/NotificationManager;

    move-result-object v1

    const/16 v2, 0x3e9

    invoke-virtual {v1, v2, v0}, Landroid/app/NotificationManager;->notify(ILandroid/app/Notification;)V

    .line 6616
    return-void
.end method

.method private setActiveAdmin(Landroid/content/ComponentName;ZILandroid/os/Bundle;)V
    .registers 21
    .param p1, "adminReceiver"  # Landroid/content/ComponentName;
    .param p2, "refreshing"  # Z
    .param p3, "userHandle"  # I
    .param p4, "onEnableData"  # Landroid/os/Bundle;

    .line 3788
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move/from16 v3, p3

    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v4, 0x0

    const-string v5, "android.permission.MANAGE_DEVICE_ADMINS"

    invoke-virtual {v0, v5, v4}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 3790
    invoke-direct {v1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 3792
    invoke-virtual {v1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v5

    .line 3793
    .local v5, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    const/4 v0, 0x1

    invoke-virtual {v1, v2, v3, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->findAdmin(Landroid/content/ComponentName;IZ)Landroid/app/admin/DeviceAdminInfo;

    move-result-object v6

    .line 3795
    .local v6, "info":Landroid/app/admin/DeviceAdminInfo;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v7

    monitor-enter v7

    .line 3796
    :try_start_1f
    invoke-direct {v1, v2, v6, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkActiveAdminPrecondition(Landroid/content/ComponentName;Landroid/app/admin/DeviceAdminInfo;Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;)V

    .line 3797
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v8
    :try_end_28
    .catchall {:try_start_1f .. :try_end_28} :catchall_b3

    .line 3799
    .local v8, "ident":J
    nop

    .line 3800
    :try_start_29
    invoke-virtual {v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 3801
    .local v0, "existingAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-nez p2, :cond_3a

    if-nez v0, :cond_32

    goto :goto_3a

    .line 3802
    :cond_32
    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string v10, "Admin is already added"

    invoke-direct {v4, v10}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v5  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v6  # "info":Landroid/app/admin/DeviceAdminInfo;
    .end local v8  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "adminReceiver":Landroid/content/ComponentName;
    .end local p2  # "refreshing":Z
    .end local p3  # "userHandle":I
    .end local p4  # "onEnableData":Landroid/os/Bundle;
    throw v4

    .line 3804
    .restart local v5  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .restart local v6  # "info":Landroid/app/admin/DeviceAdminInfo;
    .restart local v8  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "adminReceiver":Landroid/content/ComponentName;
    .restart local p2  # "refreshing":Z
    .restart local p3  # "userHandle":I
    .restart local p4  # "onEnableData":Landroid/os/Bundle;
    :cond_3a
    :goto_3a
    new-instance v10, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    const/4 v11, 0x0

    invoke-direct {v10, v6, v11}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;-><init>(Landroid/app/admin/DeviceAdminInfo;Z)V

    .line 3805
    .local v10, "newAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    nop

    .line 3806
    if-eqz v0, :cond_46

    iget-boolean v11, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->testOnlyAdmin:Z

    goto :goto_4e

    .line 3807
    :cond_46
    invoke-virtual/range {p1 .. p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v11

    invoke-direct {v1, v11, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isPackageTestOnly(Ljava/lang/String;I)Z

    move-result v11

    :goto_4e
    iput-boolean v11, v10, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->testOnlyAdmin:Z

    .line 3808
    iget-object v11, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v11, v2, v10}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3809
    const/4 v11, -0x1

    .line 3810
    .local v11, "replaceIndex":I
    iget-object v12, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v12}, Ljava/util/ArrayList;->size()I

    move-result v12

    .line 3811
    .local v12, "N":I
    const/4 v13, 0x0

    .local v13, "i":I
    :goto_5d
    if-ge v13, v12, :cond_78

    .line 3812
    iget-object v14, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v14, v13}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 3813
    .local v14, "oldAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v15, v14, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v15}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v15

    invoke-virtual {v15, v2}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v15

    if-eqz v15, :cond_75

    .line 3814
    move v11, v13

    .line 3815
    goto :goto_78

    .line 3811
    .end local v14  # "oldAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_75
    add-int/lit8 v13, v13, 0x1

    goto :goto_5d

    .line 3818
    .end local v13  # "i":I
    :cond_78
    :goto_78
    const/4 v13, -0x1

    if-ne v11, v13, :cond_91

    .line 3819
    iget-object v13, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v13, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3820
    invoke-virtual {v6}, Landroid/app/admin/DeviceAdminInfo;->getPackageName()Ljava/lang/String;

    move-result-object v13

    invoke-direct {v1, v13, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enableIfNecessary(Ljava/lang/String;I)V

    .line 3821
    iget-object v13, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUsageStatsManagerInternal:Landroid/app/usage/UsageStatsManagerInternal;

    .line 3822
    invoke-virtual/range {p1 .. p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v14

    .line 3821
    invoke-virtual {v13, v14, v3}, Landroid/app/usage/UsageStatsManagerInternal;->onActiveAdminAdded(Ljava/lang/String;I)V

    goto :goto_96

    .line 3824
    :cond_91
    iget-object v13, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v13, v11, v10}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 3826
    :goto_96
    invoke-direct {v1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 3827
    const-string v13, "android.app.action.DEVICE_ADMIN_ENABLED"
    :try_end_9b
    .catchall {:try_start_29 .. :try_end_9b} :catchall_aa

    move-object/from16 v14, p4

    :try_start_9d
    invoke-virtual {v1, v10, v13, v14, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/os/Bundle;Landroid/content/BroadcastReceiver;)V
    :try_end_a0
    .catchall {:try_start_9d .. :try_end_a0} :catchall_a8

    .line 3830
    .end local v0  # "existingAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v10  # "newAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v11  # "replaceIndex":I
    .end local v12  # "N":I
    :try_start_a0
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 3831
    nop

    .line 3832
    .end local v8  # "ident":J
    monitor-exit v7

    .line 3833
    return-void

    .line 3830
    .restart local v8  # "ident":J
    :catchall_a8
    move-exception v0

    goto :goto_ad

    :catchall_aa
    move-exception v0

    move-object/from16 v14, p4

    :goto_ad
    iget-object v4, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v8, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v5  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v6  # "info":Landroid/app/admin/DeviceAdminInfo;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "adminReceiver":Landroid/content/ComponentName;
    .end local p2  # "refreshing":Z
    .end local p3  # "userHandle":I
    .end local p4  # "onEnableData":Landroid/os/Bundle;
    throw v0

    .line 3832
    .end local v8  # "ident":J
    .restart local v5  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .restart local v6  # "info":Landroid/app/admin/DeviceAdminInfo;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "adminReceiver":Landroid/content/ComponentName;
    .restart local p2  # "refreshing":Z
    .restart local p3  # "userHandle":I
    .restart local p4  # "onEnableData":Landroid/os/Bundle;
    :catchall_b3
    move-exception v0

    move-object/from16 v14, p4

    :goto_b6
    monitor-exit v7
    :try_end_b7
    .catchall {:try_start_a0 .. :try_end_b7} :catchall_b8

    throw v0

    :catchall_b8
    move-exception v0

    goto :goto_b6
.end method

.method private setDelegatedScopePreO(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V
    .registers 11
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "delegatePackage"  # Ljava/lang/String;
    .param p3, "scope"  # Ljava/lang/String;

    .line 6354
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 6356
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 6357
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 6359
    const/4 v2, -0x1

    :try_start_11
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 6360
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 6362
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    if-eqz p2, :cond_36

    .line 6364
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v3, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/List;

    .line 6365
    .local v3, "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    if-nez v3, :cond_2a

    .line 6366
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    move-object v3, v4

    .line 6368
    :cond_2a
    invoke-interface {v3, p3}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_36

    .line 6369
    invoke-interface {v3, p3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 6370
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDelegatedScopes(Landroid/content/ComponentName;Ljava/lang/String;Ljava/util/List;)V

    .line 6375
    .end local v3  # "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_36
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_37
    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    if-ge v3, v4, :cond_69

    .line 6376
    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v4, v3}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 6377
    .local v4, "currentPackage":Ljava/lang/String;
    iget-object v5, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v5, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/util/List;

    .line 6379
    .local v5, "currentScopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-virtual {v4, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_66

    invoke-interface {v5, p3}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_66

    .line 6380
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6, v5}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 6381
    .local v6, "newScopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-interface {v6, p3}, Ljava/util/List;->remove(Ljava/lang/Object;)Z

    .line 6382
    invoke-virtual {p0, p1, v4, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDelegatedScopes(Landroid/content/ComponentName;Ljava/lang/String;Ljava/util/List;)V

    .line 6375
    .end local v4  # "currentPackage":Ljava/lang/String;
    .end local v5  # "currentScopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .end local v6  # "newScopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_66
    add-int/lit8 v3, v3, 0x1

    goto :goto_37

    .line 6385
    .end local v2  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v3  # "i":I
    :cond_69
    monitor-exit v1

    .line 6386
    return-void

    .line 6385
    :catchall_6b
    move-exception v2

    monitor-exit v1
    :try_end_6d
    .catchall {:try_start_11 .. :try_end_6d} :catchall_6b

    throw v2
.end method

.method private setDeviceOwnerRemoteBugreportUriAndHash(Ljava/lang/String;Ljava/lang/String;)V
    .registers 5
    .param p1, "bugreportUri"  # Ljava/lang/String;
    .param p2, "bugreportHash"  # Ljava/lang/String;

    .line 7460
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7461
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/devicepolicy/Owners;->setDeviceOwnerRemoteBugreportUriAndHash(Ljava/lang/String;Ljava/lang/String;)V

    .line 7462
    monitor-exit v0

    .line 7463
    return-void

    .line 7462
    :catchall_c
    move-exception v1

    monitor-exit v0
    :try_end_e
    .catchall {:try_start_5 .. :try_end_e} :catchall_c

    throw v1
.end method

.method private setDeviceOwnerSystemPropertyLocked()V
    .registers 7

    .line 2445
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 2446
    const/4 v1, 0x0

    const-string v2, "device_provisioned"

    invoke-virtual {v0, v2, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalGetInt(Ljava/lang/String;I)I

    move-result v0

    if-eqz v0, :cond_c

    const/4 v1, 0x1

    :cond_c
    move v0, v1

    .line 2447
    .local v0, "deviceProvisioned":Z
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v1

    .line 2450
    .local v1, "hasDeviceOwner":Z
    if-nez v1, :cond_18

    if-nez v0, :cond_18

    .line 2451
    return-void

    .line 2455
    :cond_18
    invoke-static {}, Landroid/os/storage/StorageManager;->inCryptKeeperBounce()Z

    move-result v2

    if-eqz v2, :cond_1f

    .line 2456
    return-void

    .line 2459
    :cond_1f
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string/jumbo v3, "ro.device_owner"

    const-string v4, ""

    invoke-virtual {v2, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->systemPropertiesGet(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/String;->isEmpty()Z

    move-result v2

    const-string v4, "DevicePolicyManager"

    if-nez v2, :cond_38

    .line 2460
    const-string v2, "Trying to set ro.device_owner, but it has already been set?"

    invoke-static {v4, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_55

    .line 2462
    :cond_38
    invoke-static {v1}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    move-result-object v2

    .line 2463
    .local v2, "value":Ljava/lang/String;
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v3, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V

    .line 2464
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Set ro.device_owner property to "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v4, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2466
    .end local v2  # "value":Ljava/lang/String;
    :goto_55
    return-void
.end method

.method private setDoNotAskCredentialsOnBoot()V
    .registers 5

    .line 5240
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 5241
    const/4 v1, 0x0

    :try_start_6
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 5242
    .local v2, "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-boolean v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->doNotAskCredentialsOnBoot:Z

    if-nez v3, :cond_14

    .line 5243
    const/4 v3, 0x1

    iput-boolean v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->doNotAskCredentialsOnBoot:Z

    .line 5244
    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 5246
    .end local v2  # "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :cond_14
    monitor-exit v0

    .line 5247
    return-void

    .line 5246
    :catchall_16
    move-exception v1

    monitor-exit v0
    :try_end_18
    .catchall {:try_start_6 .. :try_end_18} :catchall_16

    throw v1
.end method

.method private setEncryptionRequested(Z)V
    .registers 2
    .param p1, "encrypt"  # Z

    .line 7165
    return-void
.end method

.method private setExpirationAlarmCheckLocked(Landroid/content/Context;IZ)V
    .registers 23
    .param p1, "context"  # Landroid/content/Context;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 2637
    move-object/from16 v1, p0

    move/from16 v2, p2

    move/from16 v3, p3

    const/4 v0, 0x0

    invoke-direct {v1, v0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordExpirationLocked(Landroid/content/ComponentName;IZ)J

    move-result-wide v4

    .line 2638
    .local v4, "expiration":J
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v6

    .line 2639
    .local v6, "now":J
    sub-long v8, v4, v6

    .line 2641
    .local v8, "timeToExpire":J
    const-wide/16 v10, 0x0

    cmp-long v0, v4, v10

    if-nez v0, :cond_1a

    .line 2643
    const-wide/16 v12, 0x0

    .local v12, "alarmTime":J
    goto :goto_2d

    .line 2644
    .end local v12  # "alarmTime":J
    :cond_1a
    cmp-long v0, v8, v10

    if-gtz v0, :cond_22

    .line 2646
    sget-wide v12, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->MS_PER_DAY:J

    add-long/2addr v12, v6

    .restart local v12  # "alarmTime":J
    goto :goto_2d

    .line 2650
    .end local v12  # "alarmTime":J
    :cond_22
    sget-wide v12, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->MS_PER_DAY:J

    rem-long v12, v8, v12

    .line 2651
    .local v12, "alarmInterval":J
    cmp-long v0, v12, v10

    if-nez v0, :cond_2c

    .line 2652
    sget-wide v12, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->MS_PER_DAY:J

    .line 2654
    :cond_2c
    add-long/2addr v12, v6

    .line 2657
    .local v12, "alarmTime":J
    :goto_2d
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v14

    .line 2659
    .local v14, "token":J
    if-eqz v3, :cond_40

    :try_start_35
    invoke-virtual {v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v0
    :try_end_39
    .catchall {:try_start_35 .. :try_end_39} :catchall_3a

    goto :goto_41

    .line 2670
    :catchall_3a
    move-exception v0

    move-object/from16 v3, p1

    move-wide/from16 v17, v4

    goto :goto_7b

    .line 2659
    :cond_40
    move v0, v2

    .line 2660
    .local v0, "affectedUserHandle":I
    :goto_41
    :try_start_41
    iget-object v10, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getAlarmManager()Landroid/app/AlarmManager;

    move-result-object v10

    .line 2661
    .local v10, "am":Landroid/app/AlarmManager;
    new-instance v11, Landroid/content/Intent;

    const-string v2, "com.android.server.ACTION_EXPIRED_PASSWORD_NOTIFICATION"

    invoke-direct {v11, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 2664
    invoke-static {v0}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v2
    :try_end_52
    .catchall {:try_start_41 .. :try_end_52} :catchall_76

    .line 2661
    move-object/from16 v3, p1

    move/from16 v16, v0

    move-wide/from16 v17, v4

    const/16 v0, 0x15c3

    const/high16 v4, 0x48000000  # 131072.0f

    .end local v0  # "affectedUserHandle":I
    .end local v4  # "expiration":J
    .local v16, "affectedUserHandle":I
    .local v17, "expiration":J
    :try_start_5c
    invoke-static {v3, v0, v11, v4, v2}, Landroid/app/PendingIntent;->getBroadcastAsUser(Landroid/content/Context;ILandroid/content/Intent;ILandroid/os/UserHandle;)Landroid/app/PendingIntent;

    move-result-object v0

    .line 2665
    .local v0, "pi":Landroid/app/PendingIntent;
    invoke-virtual {v10, v0}, Landroid/app/AlarmManager;->cancel(Landroid/app/PendingIntent;)V

    .line 2666
    const-wide/16 v4, 0x0

    cmp-long v2, v12, v4

    if-eqz v2, :cond_6d

    .line 2667
    const/4 v2, 0x1

    invoke-virtual {v10, v2, v12, v13, v0}, Landroid/app/AlarmManager;->set(IJLandroid/app/PendingIntent;)V
    :try_end_6d
    .catchall {:try_start_5c .. :try_end_6d} :catchall_74

    .line 2670
    .end local v0  # "pi":Landroid/app/PendingIntent;
    .end local v10  # "am":Landroid/app/AlarmManager;
    .end local v16  # "affectedUserHandle":I
    :cond_6d
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 2671
    nop

    .line 2672
    return-void

    .line 2670
    :catchall_74
    move-exception v0

    goto :goto_7b

    .end local v17  # "expiration":J
    .restart local v4  # "expiration":J
    :catchall_76
    move-exception v0

    move-object/from16 v3, p1

    move-wide/from16 v17, v4

    .end local v4  # "expiration":J
    .restart local v17  # "expiration":J
    :goto_7b
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0
.end method

.method private setLockTaskFeaturesLocked(II)V
    .registers 4
    .param p1, "userHandle"  # I
    .param p2, "flags"  # I

    .line 10715
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    .line 10716
    .local v0, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iput p2, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskFeatures:I

    .line 10717
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 10718
    invoke-direct {p0, p2, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateLockTaskFeaturesLocked(II)V

    .line 10719
    return-void
.end method

.method private setLockTaskPackagesLocked(ILjava/util/List;)V
    .registers 4
    .param p1, "userHandle"  # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;)V"
        }
    .end annotation

    .line 10666
    .local p2, "packages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    .line 10667
    .local v0, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iput-object p2, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskPackages:Ljava/util/List;

    .line 10670
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 10671
    invoke-direct {p0, p2, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateLockTaskPackagesLocked(Ljava/util/List;I)V

    .line 10672
    return-void
.end method

.method private setNetworkLoggingActiveInternal(Z)V
    .registers 8
    .param p1, "active"  # Z

    .line 13236
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13237
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1
    :try_end_b
    .catchall {:try_start_5 .. :try_end_b} :catchall_62

    .line 13239
    .local v1, "callingIdentity":J
    const/4 v3, 0x0

    if-eqz p1, :cond_33

    .line 13240
    :try_start_e
    new-instance v4, Lcom/android/server/devicepolicy/NetworkLogger;

    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v5

    invoke-direct {v4, p0, v5}, Lcom/android/server/devicepolicy/NetworkLogger;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Landroid/content/pm/PackageManagerInternal;)V

    iput-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    .line 13241
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/NetworkLogger;->startNetworkLogging()Z

    move-result v4

    if-nez v4, :cond_2c

    .line 13242
    iput-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    .line 13243
    const-string v3, "DevicePolicyManager"

    const-string v4, "Network logging could not be started due to the logging service not being available yet."

    invoke-static {v3, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 13246
    :cond_2c
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybePauseDeviceWideLoggingLocked()V

    .line 13247
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendNetworkLoggingNotificationLocked()V

    goto :goto_53

    .line 13249
    :cond_33
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    if-eqz v4, :cond_46

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/NetworkLogger;->stopNetworkLogging()Z

    move-result v4

    if-nez v4, :cond_46

    .line 13250
    const-string v4, "DevicePolicyManager"

    const-string v5, "Network logging could not be stopped due to the logging service not being available yet."

    invoke-static {v4, v5}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 13253
    :cond_46
    iput-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    .line 13254
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getNotificationManager()Landroid/app/NotificationManager;

    move-result-object v3

    const/16 v4, 0x3ea

    invoke-virtual {v3, v4}, Landroid/app/NotificationManager;->cancel(I)V
    :try_end_53
    .catchall {:try_start_e .. :try_end_53} :catchall_5b

    .line 13257
    :goto_53
    :try_start_53
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13258
    nop

    .line 13259
    .end local v1  # "callingIdentity":J
    monitor-exit v0

    .line 13260
    return-void

    .line 13257
    .restart local v1  # "callingIdentity":J
    :catchall_5b
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "active":Z
    throw v3

    .line 13259
    .end local v1  # "callingIdentity":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "active":Z
    :catchall_62
    move-exception v1

    monitor-exit v0
    :try_end_64
    .catchall {:try_start_53 .. :try_end_64} :catchall_62

    throw v1
.end method

.method private setOverrideApnsEnabledUnchecked(Z)V
    .registers 8
    .param p1, "enabled"  # Z

    .line 14037
    new-instance v0, Landroid/content/ContentValues;

    invoke-direct {v0}, Landroid/content/ContentValues;-><init>()V

    .line 14038
    .local v0, "value":Landroid/content/ContentValues;
    invoke-static {p1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v1

    const-string v2, "enforced"

    invoke-virtual {v0, v2, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Boolean;)V

    .line 14039
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 14041
    .local v1, "id":J
    :try_start_14
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    sget-object v4, Landroid/provider/Telephony$Carriers;->ENFORCE_MANAGED_URI:Landroid/net/Uri;

    const/4 v5, 0x0

    invoke-virtual {v3, v4, v0, v5, v5}, Landroid/content/ContentResolver;->update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
    :try_end_20
    .catchall {:try_start_14 .. :try_end_20} :catchall_27

    .line 14044
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 14045
    nop

    .line 14046
    return-void

    .line 14044
    :catchall_27
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method private setStatusBarDisabledInternal(ZI)Z
    .registers 12
    .param p1, "disabled"  # Z
    .param p2, "userId"  # I

    .line 11078
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 11080
    .local v0, "ident":J
    const/4 v2, 0x0

    :try_start_7
    const-string/jumbo v3, "statusbar"

    .line 11081
    invoke-static {v3}, Landroid/os/ServiceManager;->checkService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v3

    .line 11080
    invoke-static {v3}, Lcom/android/internal/statusbar/IStatusBarService$Stub;->asInterface(Landroid/os/IBinder;)Lcom/android/internal/statusbar/IStatusBarService;

    move-result-object v3

    .line 11082
    .local v3, "statusBarService":Lcom/android/internal/statusbar/IStatusBarService;
    if-eqz v3, :cond_3d

    .line 11083
    if-eqz p1, :cond_19

    const/high16 v4, 0x2070000

    goto :goto_1a

    :cond_19
    move v4, v2

    .line 11084
    .local v4, "flags1":I
    :goto_1a
    const/4 v5, 0x1

    if-eqz p1, :cond_1f

    move v6, v5

    goto :goto_20

    :cond_1f
    move v6, v2

    .line 11085
    .local v6, "flags2":I
    :goto_20
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mToken:Landroid/os/Binder;

    iget-object v8, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v8}, Landroid/content/Context;->getPackageName()Ljava/lang/String;

    move-result-object v8

    invoke-interface {v3, v4, v7, v8, p2}, Lcom/android/internal/statusbar/IStatusBarService;->disableForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V

    .line 11086
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mToken:Landroid/os/Binder;

    iget-object v8, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v8}, Landroid/content/Context;->getPackageName()Ljava/lang/String;

    move-result-object v8

    invoke-interface {v3, v6, v7, v8, p2}, Lcom/android/internal/statusbar/IStatusBarService;->disable2ForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V
    :try_end_36
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_36} :catch_46
    .catchall {:try_start_7 .. :try_end_36} :catchall_44

    .line 11087
    nop

    .line 11092
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 11087
    return v5

    .line 11092
    .end local v3  # "statusBarService":Lcom/android/internal/statusbar/IStatusBarService;
    .end local v4  # "flags1":I
    .end local v6  # "flags2":I
    :cond_3d
    nop

    :goto_3e
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 11093
    goto :goto_50

    .line 11092
    :catchall_44
    move-exception v2

    goto :goto_51

    .line 11089
    :catch_46
    move-exception v3

    .line 11090
    .local v3, "e":Landroid/os/RemoteException;
    :try_start_47
    const-string v4, "DevicePolicyManager"

    const-string v5, "Failed to disable the status bar"

    invoke-static {v4, v5, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4e
    .catchall {:try_start_47 .. :try_end_4e} :catchall_44

    .line 11092
    nop

    .end local v3  # "e":Landroid/os/RemoteException;
    goto :goto_3e

    .line 11094
    :goto_50
    return v2

    .line 11092
    :goto_51
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private shareBugreportWithDeviceOwnerIfExists(Ljava/lang/String;Ljava/lang/String;)V
    .registers 14
    .param p1, "bugreportUriString"  # Ljava/lang/String;
    .param p2, "bugreportHash"  # Ljava/lang/String;

    .line 7553
    const/4 v0, 0x0

    .line 7555
    .local v0, "pfd":Landroid/os/ParcelFileDescriptor;
    const/4 v1, 0x1

    const/4 v2, 0x0

    const/4 v3, 0x0

    if-eqz p1, :cond_76

    .line 7558
    :try_start_6
    invoke-static {p1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v4

    .line 7559
    .local v4, "bugreportUri":Landroid/net/Uri;
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v5}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    const-string/jumbo v6, "r"

    invoke-virtual {v5, v4, v6}, Landroid/content/ContentResolver;->openFileDescriptor(Landroid/net/Uri;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;

    move-result-object v5

    move-object v0, v5

    .line 7561
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v5

    monitor-enter v5
    :try_end_1d
    .catch Ljava/io/FileNotFoundException; {:try_start_6 .. :try_end_1d} :catch_74
    .catchall {:try_start_6 .. :try_end_1d} :catchall_72

    .line 7562
    :try_start_1d
    new-instance v6, Landroid/content/Intent;

    const-string v7, "android.app.action.BUGREPORT_SHARE"

    invoke-direct {v6, v7}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7563
    .local v6, "intent":Landroid/content/Intent;
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v7}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v7

    invoke-virtual {v6, v7}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 7564
    const-string v7, "application/vnd.android.bugreport"

    invoke-virtual {v6, v4, v7}, Landroid/content/Intent;->setDataAndType(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;

    .line 7565
    const-string v7, "android.app.extra.BUGREPORT_HASH"

    invoke-virtual {v6, v7, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 7566
    invoke-virtual {v6, v1}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 7568
    const-class v7, Lcom/android/server/uri/UriGrantsManagerInternal;

    invoke-static {v7}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/uri/UriGrantsManagerInternal;

    const/16 v8, 0x7d0

    iget-object v9, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 7570
    invoke-virtual {v9}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v9

    invoke-virtual {v9}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v9

    iget-object v10, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 7571
    invoke-virtual {v10}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v10

    .line 7569
    invoke-interface {v7, v8, v9, v6, v10}, Lcom/android/server/uri/UriGrantsManagerInternal;->grantUriPermissionFromIntent(ILjava/lang/String;Landroid/content/Intent;I)V

    .line 7572
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    iget-object v8, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v8}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v8

    invoke-static {v8}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v8

    invoke-virtual {v7, v6, v8}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 7573
    .end local v6  # "intent":Landroid/content/Intent;
    monitor-exit v5
    :try_end_67
    .catchall {:try_start_1d .. :try_end_67} :catchall_6f

    .line 7581
    .end local v4  # "bugreportUri":Landroid/net/Uri;
    if-eqz v0, :cond_93

    .line 7582
    :try_start_69
    invoke-virtual {v0}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_6c
    .catch Ljava/io/IOException; {:try_start_69 .. :try_end_6c} :catch_6d

    goto :goto_93

    .line 7584
    :catch_6d
    move-exception v1

    goto :goto_94

    .line 7573
    .restart local v4  # "bugreportUri":Landroid/net/Uri;
    :catchall_6f
    move-exception v6

    :try_start_70
    monitor-exit v5
    :try_end_71
    .catchall {:try_start_70 .. :try_end_71} :catchall_6f

    .end local v0  # "pfd":Landroid/os/ParcelFileDescriptor;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "bugreportUriString":Ljava/lang/String;
    .end local p2  # "bugreportHash":Ljava/lang/String;
    :try_start_71
    throw v6

    .line 7580
    .end local v4  # "bugreportUri":Landroid/net/Uri;
    .restart local v0  # "pfd":Landroid/os/ParcelFileDescriptor;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "bugreportUriString":Ljava/lang/String;
    .restart local p2  # "bugreportHash":Ljava/lang/String;
    :catchall_72
    move-exception v1

    goto :goto_9e

    .line 7574
    :catch_74
    move-exception v4

    goto :goto_7c

    .line 7556
    :cond_76
    new-instance v4, Ljava/io/FileNotFoundException;

    invoke-direct {v4}, Ljava/io/FileNotFoundException;-><init>()V

    .end local v0  # "pfd":Landroid/os/ParcelFileDescriptor;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "bugreportUriString":Ljava/lang/String;
    .end local p2  # "bugreportHash":Ljava/lang/String;
    throw v4
    :try_end_7c
    .catch Ljava/io/FileNotFoundException; {:try_start_71 .. :try_end_7c} :catch_74
    .catchall {:try_start_71 .. :try_end_7c} :catchall_72

    .line 7575
    .restart local v0  # "pfd":Landroid/os/ParcelFileDescriptor;
    .local v4, "e":Ljava/io/FileNotFoundException;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "bugreportUriString":Ljava/lang/String;
    .restart local p2  # "bugreportHash":Ljava/lang/String;
    :goto_7c
    :try_start_7c
    new-instance v5, Landroid/os/Bundle;

    invoke-direct {v5}, Landroid/os/Bundle;-><init>()V

    .line 7576
    .local v5, "extras":Landroid/os/Bundle;
    const-string v6, "android.app.extra.BUGREPORT_FAILURE_REASON"

    invoke-virtual {v5, v6, v1}, Landroid/os/Bundle;->putInt(Ljava/lang/String;I)V

    .line 7578
    const-string v1, "android.app.action.BUGREPORT_FAILED"

    invoke-virtual {p0, v1, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendDeviceOwnerCommand(Ljava/lang/String;Landroid/os/Bundle;)V
    :try_end_8b
    .catchall {:try_start_7c .. :try_end_8b} :catchall_72

    .line 7581
    .end local v4  # "e":Ljava/io/FileNotFoundException;
    .end local v5  # "extras":Landroid/os/Bundle;
    if-eqz v0, :cond_93

    .line 7582
    :try_start_8d
    invoke-virtual {v0}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_90
    .catch Ljava/io/IOException; {:try_start_8d .. :try_end_90} :catch_91

    goto :goto_93

    .line 7584
    :catch_91
    move-exception v1

    goto :goto_94

    .line 7586
    :cond_93
    :goto_93
    nop

    .line 7587
    :goto_94
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportSharingAccepted:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v1, v2}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 7588
    invoke-direct {p0, v3, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDeviceOwnerRemoteBugreportUriAndHash(Ljava/lang/String;Ljava/lang/String;)V

    .line 7589
    nop

    .line 7590
    return-void

    .line 7581
    :goto_9e
    if-eqz v0, :cond_a6

    .line 7582
    :try_start_a0
    invoke-virtual {v0}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_a3
    .catch Ljava/io/IOException; {:try_start_a0 .. :try_end_a3} :catch_a4

    goto :goto_a6

    .line 7584
    :catch_a4
    move-exception v4

    goto :goto_a7

    .line 7586
    :cond_a6
    :goto_a6
    nop

    .line 7587
    :goto_a7
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportSharingAccepted:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v4, v2}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 7588
    invoke-direct {p0, v3, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDeviceOwnerRemoteBugreportUriAndHash(Ljava/lang/String;Ljava/lang/String;)V

    throw v1
.end method

.method private static shouldCheckIfDelegatePackageIsInstalled(Ljava/lang/String;ILjava/util/List;)Z
    .registers 7
    .param p0, "delegatePackage"  # Ljava/lang/String;
    .param p1, "targetSdk"  # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "I",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;)Z"
        }
    .end annotation

    .line 6027
    .local p2, "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    const/4 v0, 0x1

    const/16 v1, 0x18

    if-lt p1, v1, :cond_6

    .line 6028
    return v0

    .line 6031
    :cond_6
    invoke-interface {p2}, Ljava/util/List;->size()I

    move-result v1

    const/4 v2, 0x0

    if-ne v1, v0, :cond_1c

    invoke-interface {p2, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    const-string v3, "delegation-cert-install"

    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1c

    .line 6032
    return v2

    .line 6035
    :cond_1c
    invoke-interface {p2}, Ljava/util/List;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_23

    .line 6036
    return v2

    .line 6039
    :cond_23
    return v0
.end method

.method private shouldOverwritePoliciesFromXml(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "deviceAdminComponent"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 3454
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProfileOwner(Landroid/content/ComponentName;I)Z

    move-result v0

    if-nez v0, :cond_e

    .line 3455
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v0

    if-nez v0, :cond_e

    const/4 v0, 0x1

    goto :goto_f

    :cond_e
    const/4 v0, 0x0

    .line 3454
    :goto_f
    return v0
.end method

.method private startOwnerService(ILjava/lang/String;)V
    .registers 6
    .param p1, "userId"  # I
    .param p2, "actionForLog"  # Ljava/lang/String;

    .line 3673
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getOwnerComponent(I)Landroid/content/ComponentName;

    move-result-object v0

    .line 3674
    .local v0, "owner":Landroid/content/ComponentName;
    if-eqz v0, :cond_f

    .line 3675
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mDeviceAdminServiceController:Lcom/android/server/devicepolicy/DeviceAdminServiceController;

    .line 3676
    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    .line 3675
    invoke-virtual {v1, v2, p1, p2}, Lcom/android/server/devicepolicy/DeviceAdminServiceController;->startServiceForOwner(Ljava/lang/String;ILjava/lang/String;)V

    .line 3678
    :cond_f
    return-void
.end method

.method private startUninstallIntent(Ljava/lang/String;I)V
    .registers 8
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userId"  # I

    .line 12878
    new-instance v0, Landroid/util/Pair;

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-direct {v0, p1, v1}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 12879
    .local v0, "packageUserPair":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/String;Ljava/lang/Integer;>;"
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 12880
    :try_start_e
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mPackagesToRemove:Ljava/util/Set;

    invoke-interface {v2, v0}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_18

    .line 12882
    monitor-exit v1

    return-void

    .line 12884
    :cond_18
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mPackagesToRemove:Ljava/util/Set;

    invoke-interface {v2, v0}, Ljava/util/Set;->remove(Ljava/lang/Object;)Z

    .line 12885
    monitor-exit v1
    :try_end_1e
    .catchall {:try_start_e .. :try_end_1e} :catchall_73

    .line 12887
    :try_start_1e
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    const/4 v2, 0x0

    invoke-interface {v1, p1, v2, p2}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;

    move-result-object v1
    :try_end_29
    .catch Landroid/os/RemoteException; {:try_start_1e .. :try_end_29} :catch_2d

    if-nez v1, :cond_2c

    .line 12889
    return-void

    .line 12893
    :cond_2c
    goto :goto_35

    .line 12891
    :catch_2d
    move-exception v1

    .line 12892
    .local v1, "re":Landroid/os/RemoteException;
    const-string v2, "DevicePolicyManager"

    const-string v3, "Failure talking to PackageManager while getting package info"

    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12896
    .end local v1  # "re":Landroid/os/RemoteException;
    :goto_35
    :try_start_35
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v1

    invoke-interface {v1, p1, p2}, Landroid/app/IActivityManager;->forceStopPackage(Ljava/lang/String;I)V
    :try_end_3e
    .catch Landroid/os/RemoteException; {:try_start_35 .. :try_end_3e} :catch_3f

    .line 12899
    goto :goto_47

    .line 12897
    :catch_3f
    move-exception v1

    .line 12898
    .restart local v1  # "re":Landroid/os/RemoteException;
    const-string v2, "DevicePolicyManager"

    const-string v3, "Failure talking to ActivityManager while force stopping package"

    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 12900
    .end local v1  # "re":Landroid/os/RemoteException;
    :goto_47
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "package:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    .line 12901
    .local v1, "packageURI":Landroid/net/Uri;
    new-instance v2, Landroid/content/Intent;

    const-string v3, "android.intent.action.UNINSTALL_PACKAGE"

    invoke-direct {v2, v3, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 12902
    .local v2, "uninstallIntent":Landroid/content/Intent;
    const/high16 v3, 0x10000000

    invoke-virtual {v2, v3}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 12903
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {p2}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v4

    invoke-virtual {v3, v2, v4}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 12904
    return-void

    .line 12885
    .end local v1  # "packageURI":Landroid/net/Uri;
    .end local v2  # "uninstallIntent":Landroid/content/Intent;
    :catchall_73
    move-exception v2

    :try_start_74
    monitor-exit v1
    :try_end_75
    .catchall {:try_start_74 .. :try_end_75} :catchall_73

    throw v2
.end method

.method private stopOwnerService(ILjava/lang/String;)V
    .registers 4
    .param p1, "userId"  # I
    .param p2, "actionForLog"  # Ljava/lang/String;

    .line 3681
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mDeviceAdminServiceController:Lcom/android/server/devicepolicy/DeviceAdminServiceController;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/devicepolicy/DeviceAdminServiceController;->stopServiceForOwner(ILjava/lang/String;)V

    .line 3682
    return-void
.end method

.method private stopUserUnchecked(I)I
    .registers 7
    .param p1, "userId"  # I

    .line 9911
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 9913
    .local v0, "id":J
    const/4 v2, 0x1

    :try_start_7
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v3

    const/4 v4, 0x0

    invoke-interface {v3, p1, v2, v4}, Landroid/app/IActivityManager;->stopUser(IZLandroid/app/IStopUserCallback;)I

    move-result v3
    :try_end_12
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_12} :catch_33
    .catchall {:try_start_7 .. :try_end_12} :catchall_2c

    const/4 v4, -0x2

    if-eq v3, v4, :cond_25

    if-eqz v3, :cond_1e

    .line 9919
    nop

    .line 9925
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9919
    return v2

    .line 9915
    :cond_1e
    const/4 v2, 0x0

    .line 9925
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9915
    return v2

    .line 9917
    :cond_25
    const/4 v2, 0x4

    .line 9925
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9917
    return v2

    .line 9925
    :catchall_2c
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2

    .line 9921
    :catch_33
    move-exception v3

    .line 9923
    .local v3, "e":Landroid/os/RemoteException;
    nop

    .line 9925
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9923
    return v2
.end method

.method private toggleBackupServiceActive(IZ)V
    .registers 8
    .param p1, "userId"  # I
    .param p2, "makeActive"  # Z

    .line 8131
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 8133
    .local v0, "ident":J
    :try_start_6
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIBackupManager()Landroid/app/backup/IBackupManager;

    move-result-object v2

    if-eqz v2, :cond_17

    .line 8134
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIBackupManager()Landroid/app/backup/IBackupManager;

    move-result-object v2

    .line 8135
    invoke-interface {v2, p1, p2}, Landroid/app/backup/IBackupManager;->setBackupServiceActive(IZ)V
    :try_end_17
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_17} :catch_20
    .catchall {:try_start_6 .. :try_end_17} :catchall_1e

    .line 8140
    :cond_17
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8141
    nop

    .line 8143
    return-void

    .line 8140
    :catchall_1e
    move-exception v2

    goto :goto_29

    .line 8137
    :catch_20
    move-exception v2

    .line 8138
    .local v2, "e":Landroid/os/RemoteException;
    :try_start_21
    new-instance v3, Ljava/lang/IllegalStateException;

    const-string v4, "Failed deactivating backup service."

    invoke-direct {v3, v4, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    .end local v0  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "userId":I
    .end local p2  # "makeActive":Z
    throw v3
    :try_end_29
    .catchall {:try_start_21 .. :try_end_29} :catchall_1e

    .line 8140
    .end local v2  # "e":Landroid/os/RemoteException;
    .restart local v0  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "userId":I
    .restart local p2  # "makeActive":Z
    :goto_29
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private transferActiveAdminUncheckedLocked(Landroid/content/ComponentName;Landroid/content/ComponentName;I)V
    .registers 10
    .param p1, "incomingReceiver"  # Landroid/content/ComponentName;
    .param p2, "outgoingReceiver"  # Landroid/content/ComponentName;
    .param p3, "userHandle"  # I

    .line 3886
    invoke-virtual {p0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    .line 3887
    .local v0, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v1, p2}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_15

    iget-object v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    .line 3888
    invoke-virtual {v1, p1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_15

    .line 3890
    return-void

    .line 3892
    :cond_15
    const/4 v1, 0x1

    invoke-virtual {p0, p1, p3, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->findAdmin(Landroid/content/ComponentName;IZ)Landroid/app/admin/DeviceAdminInfo;

    move-result-object v1

    .line 3894
    .local v1, "incomingDeviceInfo":Landroid/app/admin/DeviceAdminInfo;
    iget-object v2, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v2, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 3895
    .local v2, "adminToTransfer":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUid()I

    move-result v3

    .line 3897
    .local v3, "oldAdminUid":I
    invoke-virtual {v2, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->transfer(Landroid/app/admin/DeviceAdminInfo;)V

    .line 3898
    iget-object v4, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v4, p2}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 3899
    iget-object v4, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v4, p1, v2}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3900
    iget v4, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    if-ne v4, v3, :cond_3d

    .line 3901
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUid()I

    move-result v4

    iput v4, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    .line 3904
    :cond_3d
    invoke-direct {p0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 3905
    const/4 v4, 0x0

    const-string v5, "android.app.action.DEVICE_ADMIN_ENABLED"

    invoke-virtual {p0, v2, v5, v4, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/os/Bundle;Landroid/content/BroadcastReceiver;)V

    .line 3907
    return-void
.end method

.method private transferDeviceOwnershipLocked(Landroid/content/ComponentName;Landroid/content/ComponentName;I)V
    .registers 7
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "target"  # Landroid/content/ComponentName;
    .param p3, "userId"  # I

    .line 13788
    invoke-direct {p0, p2, p1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->transferActiveAdminUncheckedLocked(Landroid/content/ComponentName;Landroid/content/ComponentName;I)V

    .line 13789
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0, p2}, Lcom/android/server/devicepolicy/Owners;->transferDeviceOwnership(Landroid/content/ComponentName;)V

    .line 13790
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Device owner set: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " on user "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "DevicePolicyManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13791
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->writeDeviceOwner()V

    .line 13792
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mDeviceAdminServiceController:Lcom/android/server/devicepolicy/DeviceAdminServiceController;

    .line 13793
    invoke-virtual {p2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    .line 13792
    const-string/jumbo v2, "transfer-device-owner"

    invoke-virtual {v0, v1, p3, v2}, Lcom/android/server/devicepolicy/DeviceAdminServiceController;->startServiceForOwner(Ljava/lang/String;ILjava/lang/String;)V

    .line 13794
    return-void
.end method

.method private transferProfileOwnershipLocked(Landroid/content/ComponentName;Landroid/content/ComponentName;I)V
    .registers 7
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "target"  # Landroid/content/ComponentName;
    .param p3, "profileOwnerUserId"  # I

    .line 13776
    invoke-direct {p0, p2, p1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->transferActiveAdminUncheckedLocked(Landroid/content/ComponentName;Landroid/content/ComponentName;I)V

    .line 13777
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0, p2, p3}, Lcom/android/server/devicepolicy/Owners;->transferProfileOwner(Landroid/content/ComponentName;I)V

    .line 13778
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Profile owner set: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " on user "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "DevicePolicyManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13779
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0, p3}, Lcom/android/server/devicepolicy/Owners;->writeProfileOwner(I)V

    .line 13780
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mDeviceAdminServiceController:Lcom/android/server/devicepolicy/DeviceAdminServiceController;

    .line 13781
    invoke-virtual {p2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    .line 13780
    const-string/jumbo v2, "transfer-profile-owner"

    invoke-virtual {v0, v1, p3, v2}, Lcom/android/server/devicepolicy/DeviceAdminServiceController;->startServiceForOwner(Ljava/lang/String;ILjava/lang/String;)V

    .line 13782
    return-void
.end method

.method public static translateIdAttestationFlags(I)[I
    .registers 9
    .param p0, "idAttestationFlags"  # I
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 5773
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    .line 5774
    .local v0, "idTypeToAttestationFlag":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Integer;>;"
    const/4 v1, 0x2

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const/4 v2, 0x1

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v0, v1, v2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5775
    const/4 v2, 0x4

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v0, v2, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5776
    const/16 v1, 0x8

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    const/4 v2, 0x3

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v0, v1, v2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5778
    invoke-static {p0}, Ljava/lang/Integer;->bitCount(I)I

    move-result v1

    .line 5781
    .local v1, "numFlagsSet":I
    if-nez v1, :cond_30

    .line 5782
    const/4 v2, 0x0

    return-object v2

    .line 5788
    :cond_30
    and-int/lit8 v2, p0, 0x1

    if-eqz v2, :cond_38

    .line 5789
    add-int/lit8 v1, v1, -0x1

    .line 5790
    and-int/lit8 p0, p0, -0x2

    .line 5793
    :cond_38
    new-array v2, v1, [I

    .line 5794
    .local v2, "attestationUtilsFlags":[I
    const/4 v3, 0x0

    .line 5795
    .local v3, "i":I
    invoke-interface {v0}, Ljava/util/Map;->keySet()Ljava/util/Set;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_43
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_66

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Integer;

    .line 5796
    .local v5, "idType":Ljava/lang/Integer;
    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    move-result v6

    and-int/2addr v6, p0

    if-eqz v6, :cond_65

    .line 5797
    add-int/lit8 v6, v3, 0x1

    .end local v3  # "i":I
    .local v6, "i":I
    invoke-interface {v0, v5}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/Integer;

    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I

    move-result v7

    aput v7, v2, v3

    move v3, v6

    .line 5799
    .end local v5  # "idType":Ljava/lang/Integer;
    .end local v6  # "i":I
    .restart local v3  # "i":I
    :cond_65
    goto :goto_43

    .line 5801
    :cond_66
    return-object v2
.end method

.method private updateDeviceOwnerLocked()V
    .registers 6

    .line 3482
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 3486
    .local v0, "ident":J
    :try_start_6
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v2

    .line 3487
    .local v2, "deviceOwnerComponent":Landroid/content/ComponentName;
    if-eqz v2, :cond_24

    .line 3488
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v3

    .line 3489
    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-interface {v3, v4}, Landroid/app/IActivityManager;->updateDeviceOwner(Ljava/lang/String;)V
    :try_end_1b
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_1b} :catch_23
    .catchall {:try_start_6 .. :try_end_1b} :catchall_1c

    goto :goto_24

    .line 3494
    .end local v2  # "deviceOwnerComponent":Landroid/content/ComponentName;
    :catchall_1c
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2

    .line 3491
    :catch_23
    move-exception v2

    .line 3494
    :cond_24
    :goto_24
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 3495
    nop

    .line 3496
    return-void
.end method

.method private updateLockTaskFeaturesLocked(II)V
    .registers 7
    .param p1, "flags"  # I
    .param p2, "userId"  # I

    .line 3471
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 3473
    .local v0, "ident":J
    :try_start_6
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityTaskManager()Landroid/app/IActivityTaskManager;

    move-result-object v2

    invoke-interface {v2, p2, p1}, Landroid/app/IActivityTaskManager;->updateLockTaskFeatures(II)V
    :try_end_f
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_f} :catch_17
    .catchall {:try_start_6 .. :try_end_f} :catchall_10

    goto :goto_18

    .line 3477
    :catchall_10
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2

    .line 3474
    :catch_17
    move-exception v2

    .line 3477
    :goto_18
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 3478
    nop

    .line 3479
    return-void
.end method

.method private updateLockTaskPackagesLocked(Ljava/util/List;I)V
    .registers 7
    .param p2, "userId"  # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .line 3459
    .local p1, "packages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 3461
    .local v0, "ident":J
    :try_start_6
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v2

    .line 3462
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v3

    new-array v3, v3, [Ljava/lang/String;

    invoke-interface {p1, v3}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v3

    check-cast v3, [Ljava/lang/String;

    invoke-interface {v2, p2, v3}, Landroid/app/IActivityManager;->updateLockTaskPackages(I[Ljava/lang/String;)V
    :try_end_1b
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_1b} :catch_23
    .catchall {:try_start_6 .. :try_end_1b} :catchall_1c

    goto :goto_24

    .line 3466
    :catchall_1c
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2

    .line 3463
    :catch_23
    move-exception v2

    .line 3466
    :goto_24
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 3467
    nop

    .line 3468
    return-void
.end method

.method private updateMaximumTimeToLockLocked(I)V
    .registers 13
    .param p1, "userId"  # I

    .line 5284
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v0

    if-eqz v0, :cond_9

    .line 5285
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateProfileLockTimeoutLocked(I)V

    .line 5289
    :cond_9
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 5292
    .local v0, "ident":J
    :try_start_f
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v2

    .line 5293
    .local v2, "parentId":I
    nop

    .line 5294
    const/4 v3, 0x0

    invoke-direct {p0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v4

    .line 5293
    invoke-direct {p0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getMaximumTimeToLockPolicyFromAdmins(Ljava/util/List;)J

    move-result-wide v4

    .line 5296
    .local v4, "timeMs":J
    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserDataUnchecked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v6

    .line 5297
    .local v6, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-wide v7, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastMaximumTimeToLock:J
    :try_end_23
    .catchall {:try_start_f .. :try_end_23} :catchall_50

    cmp-long v7, v7, v4

    if-nez v7, :cond_2d

    .line 5310
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5298
    return-void

    .line 5300
    :cond_2d
    :try_start_2d
    iput-wide v4, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastMaximumTimeToLock:J

    .line 5302
    iget-wide v7, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastMaximumTimeToLock:J

    const-wide v9, 0x7fffffffffffffffL

    cmp-long v7, v7, v9

    if-eqz v7, :cond_42

    .line 5305
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string/jumbo v8, "stay_on_while_plugged_in"

    invoke-virtual {v7, v8, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalPutInt(Ljava/lang/String;I)V

    .line 5307
    :cond_42
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPowerManagerInternal()Landroid/os/PowerManagerInternal;

    move-result-object v7

    invoke-virtual {v7, v3, v4, v5}, Landroid/os/PowerManagerInternal;->setMaximumScreenOffTimeoutFromDeviceAdmin(IJ)V
    :try_end_49
    .catchall {:try_start_2d .. :try_end_49} :catchall_50

    .line 5310
    .end local v2  # "parentId":I
    .end local v6  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5311
    nop

    .line 5312
    return-void

    .line 5310
    .end local v4  # "timeMs":J
    :catchall_50
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private updatePasswordExpirationsLocked(I)V
    .registers 12
    .param p1, "userHandle"  # I

    .line 6716
    new-instance v0, Landroid/util/ArraySet;

    invoke-direct {v0}, Landroid/util/ArraySet;-><init>()V

    .line 6717
    .local v0, "affectedUserIds":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/Integer;>;"
    const/4 v1, 0x0

    invoke-direct {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v1

    .line 6719
    .local v1, "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v2

    .line 6720
    .local v2, "N":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_f
    if-ge v3, v2, :cond_41

    .line 6721
    invoke-interface {v1, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 6722
    .local v4, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v5, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    const/4 v6, 0x6

    invoke-virtual {v5, v6}, Landroid/app/admin/DeviceAdminInfo;->usesPolicy(I)Z

    move-result v5

    if-eqz v5, :cond_3e

    .line 6723
    invoke-virtual {v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v5

    invoke-virtual {v5}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v5

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v0, v5}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 6724
    iget-wide v5, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationTimeout:J

    .line 6725
    .local v5, "timeout":J
    const-wide/16 v7, 0x0

    cmp-long v9, v5, v7

    if-lez v9, :cond_3c

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v7

    add-long/2addr v7, v5

    .line 6726
    .local v7, "expiration":J
    :cond_3c
    iput-wide v7, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationDate:J

    .line 6720
    .end local v4  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v5  # "timeout":J
    .end local v7  # "expiration":J
    :cond_3e
    add-int/lit8 v3, v3, 0x1

    goto :goto_f

    .line 6729
    .end local v3  # "i":I
    :cond_41
    invoke-virtual {v0}, Landroid/util/ArraySet;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_45
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_59

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    .line 6730
    .local v4, "affectedUserId":I
    invoke-direct {p0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 6731
    .end local v4  # "affectedUserId":I
    goto :goto_45

    .line 6732
    :cond_59
    return-void
.end method

.method private updatePasswordQualityCacheForUserGroup(I)V
    .registers 9
    .param p1, "userId"  # I

    .line 4201
    const/4 v0, -0x1

    if-ne p1, v0, :cond_a

    .line 4202
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v0}, Landroid/os/UserManager;->getUsers()Ljava/util/List;

    move-result-object v0

    .local v0, "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    goto :goto_10

    .line 4204
    .end local v0  # "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :cond_a
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v0, p1}, Landroid/os/UserManager;->getProfiles(I)Ljava/util/List;

    move-result-object v0

    .line 4206
    .restart local v0  # "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :goto_10
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_14
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_2e

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/UserInfo;

    .line 4207
    .local v2, "userInfo":Landroid/content/pm/UserInfo;
    iget v3, v2, Landroid/content/pm/UserInfo;->id:I

    .line 4208
    .local v3, "currentUserId":I
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mPolicyCache:Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;

    const/4 v5, 0x0

    const/4 v6, 0x0

    .line 4209
    invoke-virtual {p0, v5, v3, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordQuality(Landroid/content/ComponentName;IZ)I

    move-result v5

    .line 4208
    invoke-virtual {v4, v3, v5}, Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;->setPasswordQuality(II)V

    .line 4210
    .end local v2  # "userInfo":Landroid/content/pm/UserInfo;
    .end local v3  # "currentUserId":I
    goto :goto_14

    .line 4211
    :cond_2e
    return-void
.end method

.method private updatePasswordValidityCheckpointLocked(IZ)V
    .registers 7
    .param p1, "userHandle"  # I
    .param p2, "parent"  # Z
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = {
            "getLockObject()"
        }
    .end annotation

    .line 4174
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCredentialOwner(IZ)I

    move-result v0

    .line 4175
    .local v0, "credentialOwner":I
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 4176
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserPasswordMetricsLocked(I)Landroid/app/admin/PasswordMetrics;

    move-result-object v2

    .line 4177
    .local v2, "metrics":Landroid/app/admin/PasswordMetrics;
    if-nez v2, :cond_14

    .line 4178
    new-instance v3, Landroid/app/admin/PasswordMetrics;

    invoke-direct {v3}, Landroid/app/admin/PasswordMetrics;-><init>()V

    move-object v2, v3

    .line 4180
    :cond_14
    nop

    .line 4181
    invoke-direct {p0, v2, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isPasswordSufficientForUserWithoutCheckpointLocked(Landroid/app/admin/PasswordMetrics;IZ)Z

    move-result v3

    iput-boolean v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordValidAtLastCheckpoint:Z

    .line 4184
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4185
    return-void
.end method

.method private updateProfileLockTimeoutLocked(I)V
    .registers 10
    .param p1, "userId"  # I

    .line 5316
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSeparateProfileChallengeEnabled(I)Z

    move-result v0

    if-eqz v0, :cond_10

    .line 5317
    const/4 v0, 0x0

    .line 5318
    invoke-direct {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v0

    .line 5317
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getMaximumTimeToLockPolicyFromAdmins(Ljava/util/List;)J

    move-result-wide v0

    .local v0, "timeMs":J
    goto :goto_15

    .line 5320
    .end local v0  # "timeMs":J
    :cond_10
    const-wide v0, 0x7fffffffffffffffL

    .line 5323
    .restart local v0  # "timeMs":J
    :goto_15
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserDataUnchecked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 5324
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-wide v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastMaximumTimeToLock:J

    cmp-long v3, v3, v0

    if-nez v3, :cond_20

    .line 5325
    return-void

    .line 5327
    :cond_20
    iput-wide v0, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastMaximumTimeToLock:J

    .line 5329
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v3

    .line 5331
    .local v3, "ident":J
    :try_start_28
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPowerManagerInternal()Landroid/os/PowerManagerInternal;

    move-result-object v5

    iget-wide v6, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastMaximumTimeToLock:J

    invoke-virtual {v5, p1, v6, v7}, Landroid/os/PowerManagerInternal;->setMaximumScreenOffTimeoutFromDeviceAdmin(IJ)V
    :try_end_31
    .catchall {:try_start_28 .. :try_end_31} :catchall_38

    .line 5334
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5335
    nop

    .line 5336
    return-void

    .line 5334
    :catchall_38
    move-exception v5

    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v5
.end method

.method private updateScreenCaptureDisabled(IZ)V
    .registers 5
    .param p1, "userHandle"  # I
    .param p2, "disabled"  # Z

    .line 7221
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mPolicyCache:Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;->setScreenCaptureDisabled(IZ)V

    .line 7222
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHandler:Landroid/os/Handler;

    new-instance v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$8;

    invoke-direct {v1, p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$8;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;I)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 7232
    return-void
.end method

.method private updateSystemUpdateFreezePeriodsRecord(Z)V
    .registers 12
    .param p1, "saveIfChanged"  # Z

    .line 11558
    const-string v0, "DevicePolicyManager"

    const-string/jumbo v1, "updateSystemUpdateFreezePeriodsRecord"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11559
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 11560
    :try_start_d
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getSystemUpdatePolicy()Landroid/app/admin/SystemUpdatePolicy;

    move-result-object v1

    .line 11561
    .local v1, "policy":Landroid/app/admin/SystemUpdatePolicy;
    if-nez v1, :cond_17

    .line 11562
    monitor-exit v0

    return-void

    .line 11564
    :cond_17
    invoke-static {}, Ljava/time/LocalDate;->now()Ljava/time/LocalDate;

    move-result-object v2

    .line 11565
    .local v2, "now":Ljava/time/LocalDate;
    invoke-virtual {v1, v2}, Landroid/app/admin/SystemUpdatePolicy;->getCurrentFreezePeriod(Ljava/time/LocalDate;)Landroid/util/Pair;

    move-result-object v3

    .line 11566
    .local v3, "currentPeriod":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/time/LocalDate;Ljava/time/LocalDate;>;"
    if-nez v3, :cond_23

    .line 11567
    monitor-exit v0

    return-void

    .line 11569
    :cond_23
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/Owners;->getSystemUpdateFreezePeriodRecord()Landroid/util/Pair;

    move-result-object v4

    .line 11570
    .local v4, "record":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/time/LocalDate;Ljava/time/LocalDate;>;"
    iget-object v5, v4, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v5, Ljava/time/LocalDate;

    .line 11571
    .local v5, "start":Ljava/time/LocalDate;
    iget-object v6, v4, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v6, Ljava/time/LocalDate;

    .line 11573
    .local v6, "end":Ljava/time/LocalDate;
    if-eqz v6, :cond_7c

    if-nez v5, :cond_36

    goto :goto_7c

    .line 11576
    :cond_36
    const-wide/16 v7, 0x1

    invoke-virtual {v6, v7, v8}, Ljava/time/LocalDate;->plusDays(J)Ljava/time/LocalDate;

    move-result-object v9

    invoke-virtual {v2, v9}, Ljava/time/LocalDate;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_49

    .line 11578
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v7, v5, v2}, Lcom/android/server/devicepolicy/Owners;->setSystemUpdateFreezePeriodRecord(Ljava/time/LocalDate;Ljava/time/LocalDate;)Z

    move-result v7

    .local v7, "changed":Z
    goto :goto_82

    .line 11579
    .end local v7  # "changed":Z
    :cond_49
    invoke-virtual {v6, v7, v8}, Ljava/time/LocalDate;->plusDays(J)Ljava/time/LocalDate;

    move-result-object v7

    invoke-virtual {v2, v7}, Ljava/time/LocalDate;->isAfter(Ljava/time/chrono/ChronoLocalDate;)Z

    move-result v7

    if-eqz v7, :cond_6d

    .line 11580
    invoke-static {v3, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->withinRange(Landroid/util/Pair;Ljava/time/LocalDate;)Z

    move-result v7

    if-eqz v7, :cond_66

    invoke-static {v3, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->withinRange(Landroid/util/Pair;Ljava/time/LocalDate;)Z

    move-result v7

    if-eqz v7, :cond_66

    .line 11584
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v7, v5, v2}, Lcom/android/server/devicepolicy/Owners;->setSystemUpdateFreezePeriodRecord(Ljava/time/LocalDate;Ljava/time/LocalDate;)Z

    move-result v7

    .restart local v7  # "changed":Z
    goto :goto_82

    .line 11586
    .end local v7  # "changed":Z
    :cond_66
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v7, v2, v2}, Lcom/android/server/devicepolicy/Owners;->setSystemUpdateFreezePeriodRecord(Ljava/time/LocalDate;Ljava/time/LocalDate;)Z

    move-result v7

    .restart local v7  # "changed":Z
    goto :goto_82

    .line 11588
    .end local v7  # "changed":Z
    :cond_6d
    invoke-virtual {v2, v5}, Ljava/time/LocalDate;->isBefore(Ljava/time/chrono/ChronoLocalDate;)Z

    move-result v7

    if-eqz v7, :cond_7a

    .line 11590
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v7, v2, v2}, Lcom/android/server/devicepolicy/Owners;->setSystemUpdateFreezePeriodRecord(Ljava/time/LocalDate;Ljava/time/LocalDate;)Z

    move-result v7

    .restart local v7  # "changed":Z
    goto :goto_82

    .line 11592
    .end local v7  # "changed":Z
    :cond_7a
    const/4 v7, 0x0

    .restart local v7  # "changed":Z
    goto :goto_82

    .line 11575
    .end local v7  # "changed":Z
    :cond_7c
    :goto_7c
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v7, v2, v2}, Lcom/android/server/devicepolicy/Owners;->setSystemUpdateFreezePeriodRecord(Ljava/time/LocalDate;Ljava/time/LocalDate;)Z

    move-result v7

    .line 11594
    .restart local v7  # "changed":Z
    :goto_82
    if-eqz v7, :cond_8b

    if-eqz p1, :cond_8b

    .line 11595
    iget-object v8, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v8}, Lcom/android/server/devicepolicy/Owners;->writeDeviceOwner()V

    .line 11597
    .end local v1  # "policy":Landroid/app/admin/SystemUpdatePolicy;
    .end local v2  # "now":Ljava/time/LocalDate;
    .end local v3  # "currentPeriod":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/time/LocalDate;Ljava/time/LocalDate;>;"
    .end local v4  # "record":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/time/LocalDate;Ljava/time/LocalDate;>;"
    .end local v5  # "start":Ljava/time/LocalDate;
    .end local v6  # "end":Ljava/time/LocalDate;
    .end local v7  # "changed":Z
    :cond_8b
    monitor-exit v0

    .line 11598
    return-void

    .line 11597
    :catchall_8d
    move-exception v1

    monitor-exit v0
    :try_end_8f
    .catchall {:try_start_d .. :try_end_8f} :catchall_8d

    throw v1
.end method

.method static validateQualityConstant(I)V
    .registers 4
    .param p0, "quality"  # I

    .line 3499
    if-eqz p0, :cond_3f

    const v0, 0x8000

    if-eq p0, v0, :cond_3f

    const/high16 v0, 0x10000

    if-eq p0, v0, :cond_3f

    const/high16 v0, 0x20000

    if-eq p0, v0, :cond_3f

    const/high16 v0, 0x30000

    if-eq p0, v0, :cond_3f

    const/high16 v0, 0x40000

    if-eq p0, v0, :cond_3f

    const/high16 v0, 0x50000

    if-eq p0, v0, :cond_3f

    const/high16 v0, 0x60000

    if-eq p0, v0, :cond_3f

    const/high16 v0, 0x80000

    if-ne p0, v0, :cond_24

    goto :goto_3f

    .line 3511
    :cond_24
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Invalid quality constant: 0x"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3512
    invoke-static {p0}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3509
    :cond_3f
    :goto_3f
    return-void
.end method

.method private wipeDataNoLock(Landroid/content/ComponentName;ILjava/lang/String;Ljava/lang/String;I)V
    .registers 13
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "flags"  # I
    .param p3, "internalReason"  # Ljava/lang/String;
    .param p4, "wipeReasonForUser"  # Ljava/lang/String;
    .param p5, "userId"  # I

    .line 6560
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->wtfIfInLock()V

    .line 6562
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 6566
    .local v0, "ident":J
    if-nez p5, :cond_f

    .line 6567
    :try_start_b
    const-string/jumbo v2, "no_factory_reset"

    .local v2, "restriction":Ljava/lang/String;
    goto :goto_1c

    .line 6568
    .end local v2  # "restriction":Ljava/lang/String;
    :cond_f
    invoke-direct {p0, p5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v2

    if-eqz v2, :cond_19

    .line 6569
    const-string/jumbo v2, "no_remove_managed_profile"

    .restart local v2  # "restriction":Ljava/lang/String;
    goto :goto_1c

    .line 6571
    .end local v2  # "restriction":Ljava/lang/String;
    :cond_19
    const-string/jumbo v2, "no_remove_user"

    .line 6573
    .restart local v2  # "restriction":Ljava/lang/String;
    :goto_1c
    invoke-direct {p0, p1, v2, p5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdminAffectedByRestriction(Landroid/content/ComponentName;Ljava/lang/String;I)Z

    move-result v3

    if-nez v3, :cond_68

    .line 6578
    and-int/lit8 v3, p2, 0x2

    if-eqz v3, :cond_45

    .line 6579
    invoke-virtual {p0, p1, p5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v3

    if-eqz v3, :cond_3d

    .line 6583
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v4, "persistent_data_block"

    .line 6584
    invoke-virtual {v3, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/service/persistentdata/PersistentDataBlockManager;

    .line 6585
    .local v3, "manager":Landroid/service/persistentdata/PersistentDataBlockManager;
    if-eqz v3, :cond_45

    .line 6586
    invoke-virtual {v3}, Landroid/service/persistentdata/PersistentDataBlockManager;->wipe()V

    goto :goto_45

    .line 6580
    .end local v3  # "manager":Landroid/service/persistentdata/PersistentDataBlockManager;
    :cond_3d
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Only device owner admins can set WIPE_RESET_PROTECTION_DATA"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "flags":I
    .end local p3  # "internalReason":Ljava/lang/String;
    .end local p4  # "wipeReasonForUser":Ljava/lang/String;
    .end local p5  # "userId":I
    throw v3

    .line 6593
    .restart local v0  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "flags":I
    .restart local p3  # "internalReason":Ljava/lang/String;
    .restart local p4  # "wipeReasonForUser":Ljava/lang/String;
    .restart local p5  # "userId":I
    :cond_45
    :goto_45
    const/4 v3, 0x0

    const/4 v4, 0x1

    if-nez p5, :cond_59

    .line 6594
    and-int/lit8 v5, p2, 0x1

    if-eqz v5, :cond_4f

    move v5, v4

    goto :goto_50

    :cond_4f
    move v5, v3

    :goto_50
    and-int/lit8 v6, p2, 0x4

    if-eqz v6, :cond_55

    move v3, v4

    :cond_55
    invoke-direct {p0, v5, p3, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->forceWipeDeviceNoLock(ZLjava/lang/String;Z)V

    goto :goto_61

    .line 6599
    :cond_59
    and-int/lit8 v5, p2, 0x8

    if-eqz v5, :cond_5e

    move v3, v4

    :cond_5e
    invoke-direct {p0, p5, p4, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->forceWipeUser(ILjava/lang/String;Z)V
    :try_end_61
    .catchall {:try_start_b .. :try_end_61} :catchall_87

    .line 6602
    .end local v2  # "restriction":Ljava/lang/String;
    :goto_61
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 6603
    nop

    .line 6604
    return-void

    .line 6574
    .restart local v2  # "restriction":Ljava/lang/String;
    :cond_68
    :try_start_68
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Cannot wipe data. "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " restriction is set for user "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "flags":I
    .end local p3  # "internalReason":Ljava/lang/String;
    .end local p4  # "wipeReasonForUser":Ljava/lang/String;
    .end local p5  # "userId":I
    throw v3
    :try_end_87
    .catchall {:try_start_68 .. :try_end_87} :catchall_87

    .line 6602
    .end local v2  # "restriction":Ljava/lang/String;
    .restart local v0  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "flags":I
    .restart local p3  # "internalReason":Ljava/lang/String;
    .restart local p4  # "wipeReasonForUser":Ljava/lang/String;
    .restart local p5  # "userId":I
    :catchall_87
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method private static withinRange(Landroid/util/Pair;Ljava/time/LocalDate;)Z
    .registers 3
    .param p1, "date"  # Ljava/time/LocalDate;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/Pair<",
            "Ljava/time/LocalDate;",
            "Ljava/time/LocalDate;",
            ">;",
            "Ljava/time/LocalDate;",
            ")Z"
        }
    .end annotation

    .line 11537
    .local p0, "range":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/time/LocalDate;Ljava/time/LocalDate;>;"
    iget-object v0, p0, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v0, Ljava/time/chrono/ChronoLocalDate;

    invoke-virtual {p1, v0}, Ljava/time/LocalDate;->isBefore(Ljava/time/chrono/ChronoLocalDate;)Z

    move-result v0

    if-nez v0, :cond_16

    iget-object v0, p0, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v0, Ljava/time/chrono/ChronoLocalDate;

    invoke-virtual {p1, v0}, Ljava/time/LocalDate;->isAfter(Ljava/time/chrono/ChronoLocalDate;)Z

    move-result v0

    if-nez v0, :cond_16

    const/4 v0, 0x1

    goto :goto_17

    :cond_16
    const/4 v0, 0x0

    :goto_17
    return v0
.end method

.method private wtfIfInLock()V
    .registers 3

    .line 8547
    invoke-static {p0}, Ljava/lang/Thread;->holdsLock(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 8548
    const-string v0, "DevicePolicyManager"

    const-string v1, "Shouldn\'t be called with DPMS lock held"

    invoke-static {v0, v1}, Landroid/util/Slog;->wtfStack(Ljava/lang/String;Ljava/lang/String;)I

    .line 8550
    :cond_d
    return-void
.end method


# virtual methods
.method public addCrossProfileIntentFilter(Landroid/content/ComponentName;Landroid/content/IntentFilter;I)V
    .registers 15
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "filter"  # Landroid/content/IntentFilter;
    .param p3, "flags"  # I

    .line 9112
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9113
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 9114
    .local v0, "callingUserId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v7

    monitor-enter v7

    .line 9115
    const/4 v1, -0x1

    :try_start_f
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 9117
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1
    :try_end_18
    .catchall {:try_start_f .. :try_end_18} :catchall_80

    move-wide v8, v1

    .line 9119
    .local v8, "id":J
    :try_start_19
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v1, v0}, Landroid/os/UserManager;->getProfileParent(I)Landroid/content/pm/UserInfo;

    move-result-object v1

    move-object v10, v1

    .line 9120
    .local v10, "parent":Landroid/content/pm/UserInfo;
    if-nez v10, :cond_30

    .line 9121
    const-string v1, "DevicePolicyManager"

    const-string v2, "Cannot call addCrossProfileIntentFilter if there is no parent"

    invoke-static {v1, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_29
    .catch Landroid/os/RemoteException; {:try_start_19 .. :try_end_29} :catch_5e
    .catchall {:try_start_19 .. :try_end_29} :catchall_57

    .line 9136
    :try_start_29
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v8, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v7
    :try_end_2f
    .catchall {:try_start_29 .. :try_end_2f} :catchall_80

    .line 9123
    return-void

    .line 9125
    :cond_30
    and-int/lit8 v1, p3, 0x1

    if-eqz v1, :cond_42

    .line 9126
    :try_start_34
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    .line 9127
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    iget v5, v10, Landroid/content/pm/UserInfo;->id:I

    const/4 v6, 0x0

    .line 9126
    move-object v2, p2

    move v4, v0

    invoke-interface/range {v1 .. v6}, Landroid/content/pm/IPackageManager;->addCrossProfileIntentFilter(Landroid/content/IntentFilter;Ljava/lang/String;III)V

    .line 9129
    :cond_42
    and-int/lit8 v1, p3, 0x2

    if-eqz v1, :cond_54

    .line 9130
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    iget v4, v10, Landroid/content/pm/UserInfo;->id:I

    const/4 v6, 0x0

    move-object v2, p2

    move v5, v0

    invoke-interface/range {v1 .. v6}, Landroid/content/pm/IPackageManager;->addCrossProfileIntentFilter(Landroid/content/IntentFilter;Ljava/lang/String;III)V
    :try_end_54
    .catch Landroid/os/RemoteException; {:try_start_34 .. :try_end_54} :catch_5e
    .catchall {:try_start_34 .. :try_end_54} :catchall_57

    .line 9136
    .end local v10  # "parent":Landroid/content/pm/UserInfo;
    :cond_54
    :try_start_54
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    goto :goto_61

    :catchall_57
    move-exception v1

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v8, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "callingUserId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "filter":Landroid/content/IntentFilter;
    .end local p3  # "flags":I
    throw v1

    .line 9133
    .restart local v0  # "callingUserId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "filter":Landroid/content/IntentFilter;
    .restart local p3  # "flags":I
    :catch_5e
    move-exception v1

    .line 9136
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    :goto_61
    invoke-virtual {v1, v8, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9137
    nop

    .line 9138
    .end local v8  # "id":J
    monitor-exit v7
    :try_end_66
    .catchall {:try_start_54 .. :try_end_66} :catchall_80

    .line 9139
    const/16 v1, 0x30

    .line 9140
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 9141
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 9142
    invoke-static {p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getIntentFilterActions(Landroid/content/IntentFilter;)[Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 9143
    invoke-virtual {v1, p3}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 9144
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 9145
    return-void

    .line 9138
    :catchall_80
    move-exception v1

    :try_start_81
    monitor-exit v7
    :try_end_82
    .catchall {:try_start_81 .. :try_end_82} :catchall_80

    throw v1
.end method

.method public addCrossProfileWidgetProvider(Landroid/content/ComponentName;Ljava/lang/String;)Z
    .registers 9
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;

    .line 4414
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 4415
    .local v0, "userId":I
    const/4 v1, 0x0

    .line 4417
    .local v1, "changedProviders":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 4418
    const/4 v3, -0x1

    :try_start_b
    invoke-virtual {p0, p1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 4420
    .local v3, "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->crossProfileWidgetProviders:Ljava/util/List;

    if-nez v4, :cond_1a

    .line 4421
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->crossProfileWidgetProviders:Ljava/util/List;

    .line 4423
    :cond_1a
    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->crossProfileWidgetProviders:Ljava/util/List;

    .line 4424
    .local v4, "providers":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-interface {v4, p2}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_2e

    .line 4425
    invoke-interface {v4, p2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 4426
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5, v4}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    move-object v1, v5

    .line 4427
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4429
    .end local v3  # "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v4  # "providers":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_2e
    monitor-exit v2
    :try_end_2f
    .catchall {:try_start_b .. :try_end_2f} :catchall_47

    .line 4431
    const/16 v2, 0x31

    .line 4432
    invoke-static {v2}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 4433
    invoke-virtual {v2, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 4434
    invoke-virtual {v2}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 4436
    if-eqz v1, :cond_45

    .line 4437
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLocalService:Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;

    invoke-static {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;->access$2100(Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;ILjava/util/List;)V

    .line 4438
    const/4 v2, 0x1

    return v2

    .line 4441
    :cond_45
    const/4 v2, 0x0

    return v2

    .line 4429
    :catchall_47
    move-exception v3

    :try_start_48
    monitor-exit v2
    :try_end_49
    .catchall {:try_start_48 .. :try_end_49} :catchall_47

    throw v3
.end method

.method public addOverrideApn(Landroid/content/ComponentName;Landroid/telephony/data/ApnSetting;)I
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "apnSetting"  # Landroid/telephony/data/ApnSetting;

    .line 13914
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-eqz v0, :cond_4f

    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasTelephonyFeature:Z

    if-nez v0, :cond_9

    goto :goto_4f

    .line 13917
    :cond_9
    const-string v0, "ComponentName is null in addOverrideApn"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13918
    const-string v0, "ApnSetting is null in addOverrideApn"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13919
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 13921
    const/4 v0, -0x1

    .line 13923
    .local v0, "operatedId":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 13925
    .local v1, "id":J
    :try_start_1d
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    sget-object v4, Landroid/provider/Telephony$Carriers;->DPC_URI:Landroid/net/Uri;

    invoke-virtual {p2}, Landroid/telephony/data/ApnSetting;->toContentValues()Landroid/content/ContentValues;

    move-result-object v5

    invoke-virtual {v3, v4, v5}, Landroid/content/ContentResolver;->insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;

    move-result-object v3
    :try_end_2d
    .catchall {:try_start_1d .. :try_end_2d} :catchall_48

    .line 13927
    .local v3, "resultUri":Landroid/net/Uri;
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13928
    nop

    .line 13929
    if-eqz v3, :cond_47

    .line 13931
    :try_start_35
    invoke-virtual {v3}, Landroid/net/Uri;->getLastPathSegment()Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v4
    :try_end_3d
    .catch Ljava/lang/NumberFormatException; {:try_start_35 .. :try_end_3d} :catch_3f

    move v0, v4

    .line 13934
    goto :goto_47

    .line 13932
    :catch_3f
    move-exception v4

    .line 13933
    .local v4, "e":Ljava/lang/NumberFormatException;
    const-string v5, "DevicePolicyManager"

    const-string v6, "Failed to parse inserted override APN id."

    invoke-static {v5, v6, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13937
    .end local v4  # "e":Ljava/lang/NumberFormatException;
    :cond_47
    :goto_47
    return v0

    .line 13927
    .end local v3  # "resultUri":Landroid/net/Uri;
    :catchall_48
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3

    .line 13915
    .end local v0  # "operatedId":I
    .end local v1  # "id":J
    :cond_4f
    :goto_4f
    const/4 v0, -0x1

    return v0
.end method

.method public addPersistentPreferredActivity(Landroid/content/ComponentName;Landroid/content/IntentFilter;Landroid/content/ComponentName;)V
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "filter"  # Landroid/content/IntentFilter;
    .param p3, "activity"  # Landroid/content/ComponentName;

    .line 8916
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 8917
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 8918
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 8919
    const/4 v2, -0x1

    :try_start_f
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 8921
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2
    :try_end_18
    .catchall {:try_start_f .. :try_end_18} :catchall_52

    .line 8923
    .local v2, "id":J
    :try_start_18
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-interface {v4, p2, p3, v0}, Landroid/content/pm/IPackageManager;->addPersistentPreferredActivity(Landroid/content/IntentFilter;Landroid/content/ComponentName;I)V

    .line 8924
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-interface {v4, v0}, Landroid/content/pm/IPackageManager;->flushPackageRestrictionsAsUser(I)V
    :try_end_22
    .catch Landroid/os/RemoteException; {:try_start_18 .. :try_end_22} :catch_2c
    .catchall {:try_start_18 .. :try_end_22} :catchall_25

    .line 8928
    :try_start_22
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    goto :goto_2f

    :catchall_25
    move-exception v4

    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "userHandle":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "filter":Landroid/content/IntentFilter;
    .end local p3  # "activity":Landroid/content/ComponentName;
    throw v4

    .line 8925
    .restart local v0  # "userHandle":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "filter":Landroid/content/IntentFilter;
    .restart local p3  # "activity":Landroid/content/ComponentName;
    :catch_2c
    move-exception v4

    .line 8928
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    :goto_2f
    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8929
    nop

    .line 8930
    .end local v2  # "id":J
    monitor-exit v1
    :try_end_34
    .catchall {:try_start_22 .. :try_end_34} :catchall_52

    .line 8932
    if-eqz p3, :cond_3b

    invoke-virtual {p3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    goto :goto_3c

    :cond_3b
    const/4 v1, 0x0

    .line 8933
    .local v1, "activityPackage":Ljava/lang/String;
    :goto_3c
    const/16 v2, 0x34

    .line 8934
    invoke-static {v2}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 8935
    invoke-virtual {v2, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 8936
    invoke-static {p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getIntentFilterActions(Landroid/content/IntentFilter;)[Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v1, v3}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings(Ljava/lang/String;[Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 8937
    invoke-virtual {v2}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 8938
    return-void

    .line 8930
    .end local v1  # "activityPackage":Ljava/lang/String;
    :catchall_52
    move-exception v2

    :try_start_53
    monitor-exit v1
    :try_end_54
    .catchall {:try_start_53 .. :try_end_54} :catchall_52

    throw v2
.end method

.method public approveCaCert(Ljava/lang/String;IZ)Z
    .registers 8
    .param p1, "alias"  # Ljava/lang/String;
    .param p2, "userId"  # I
    .param p3, "approval"  # Z

    .line 5544
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 5545
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 5546
    :try_start_8
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    iget-object v1, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAcceptedCaCertificates:Landroid/util/ArraySet;

    .line 5547
    .local v1, "certs":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    if-eqz p3, :cond_15

    invoke-interface {v1, p1}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    move-result v2

    goto :goto_19

    :cond_15
    invoke-interface {v1, p1}, Ljava/util/Set;->remove(Ljava/lang/Object;)Z

    move-result v2

    .line 5548
    .local v2, "changed":Z
    :goto_19
    if-nez v2, :cond_1e

    .line 5549
    const/4 v3, 0x0

    monitor-exit v0

    return v3

    .line 5551
    :cond_1e
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 5552
    .end local v1  # "certs":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    .end local v2  # "changed":Z
    monitor-exit v0
    :try_end_22
    .catchall {:try_start_8 .. :try_end_22} :catchall_29

    .line 5553
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mCertificateMonitor:Lcom/android/server/devicepolicy/CertificateMonitor;

    invoke-virtual {v0, p2}, Lcom/android/server/devicepolicy/CertificateMonitor;->onCertificateApprovalsChanged(I)V

    .line 5554
    const/4 v0, 0x1

    return v0

    .line 5552
    :catchall_29
    move-exception v1

    :try_start_2a
    monitor-exit v0
    :try_end_2b
    .catchall {:try_start_2a .. :try_end_2b} :catchall_29

    throw v1
.end method

.method public bindDeviceAdminServiceAsUser(Landroid/content/ComponentName;Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Landroid/app/IServiceConnection;II)Z
    .registers 26
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "caller"  # Landroid/app/IApplicationThread;
    .param p3, "activtiyToken"  # Landroid/os/IBinder;
    .param p4, "serviceIntent"  # Landroid/content/Intent;
    .param p5, "connection"  # Landroid/app/IServiceConnection;
    .param p6, "flags"  # I
    .param p7, "targetUserId"  # I

    .line 13020
    move-object/from16 v1, p0

    move-object/from16 v11, p4

    move/from16 v12, p7

    iget-boolean v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v13, 0x0

    if-nez v0, :cond_c

    .line 13021
    return v13

    .line 13023
    :cond_c
    invoke-static/range {p1 .. p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13024
    invoke-static/range {p2 .. p2}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13025
    invoke-static/range {p4 .. p4}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13026
    nop

    .line 13027
    invoke-virtual/range {p4 .. p4}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    if-nez v0, :cond_25

    invoke-virtual/range {p4 .. p4}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_23

    goto :goto_25

    :cond_23
    move v0, v13

    goto :goto_26

    :cond_25
    :goto_25
    const/4 v0, 0x1

    :goto_26
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Service intent must be explicit (with a package name or component): "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 13026
    invoke-static {v0, v2}, Lcom/android/internal/util/Preconditions;->checkArgument(ZLjava/lang/Object;)V

    .line 13030
    invoke-static/range {p5 .. p5}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13031
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    if-eq v0, v12, :cond_47

    const/4 v0, 0x1

    goto :goto_48

    :cond_47
    move v0, v13

    :goto_48
    const-string/jumbo v2, "target user id must be different from the calling user id"

    invoke-static {v0, v2}, Lcom/android/internal/util/Preconditions;->checkArgument(ZLjava/lang/Object;)V

    .line 13034
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getBindDeviceAdminTargetUsers(Landroid/content/ComponentName;)Ljava/util/List;

    move-result-object v0

    invoke-static/range {p7 .. p7}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v2

    invoke-interface {v0, v2}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_cb

    .line 13039
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 13040
    :try_start_61
    invoke-direct {v1, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getOwnerPackageNameForUserLocked(I)Ljava/lang/String;

    move-result-object v0

    move-object v15, v0

    .line 13041
    .local v15, "targetPackage":Ljava/lang/String;
    monitor-exit v2
    :try_end_67
    .catchall {:try_start_61 .. :try_end_67} :catchall_c8

    .line 13043
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v9

    .line 13046
    .local v9, "callingIdentity":J
    nop

    .line 13047
    :try_start_6e
    invoke-direct {v1, v11, v15, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->createCrossUserServiceIntent(Landroid/content/Intent;Ljava/lang/String;I)Landroid/content/Intent;

    move-result-object v0
    :try_end_72
    .catch Landroid/os/RemoteException; {:try_start_6e .. :try_end_72} :catch_bd
    .catchall {:try_start_6e .. :try_end_72} :catchall_b3

    .line 13048
    .local v0, "sanitizedIntent":Landroid/content/Intent;
    if-nez v0, :cond_7b

    .line 13050
    nop

    .line 13062
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v9, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13050
    return v13

    .line 13054
    :cond_7b
    :try_start_7b
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v2

    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 13056
    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    invoke-virtual {v11, v3}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;

    move-result-object v6

    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 13057
    invoke-virtual {v3}, Landroid/content/Context;->getOpPackageName()Ljava/lang/String;

    move-result-object v16
    :try_end_91
    .catch Landroid/os/RemoteException; {:try_start_7b .. :try_end_91} :catch_bd
    .catchall {:try_start_7b .. :try_end_91} :catchall_b3

    .line 13054
    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v7, p5

    move/from16 v8, p6

    move-object/from16 v17, v15

    move-wide v14, v9

    .end local v9  # "callingIdentity":J
    .end local v15  # "targetPackage":Ljava/lang/String;
    .local v14, "callingIdentity":J
    .local v17, "targetPackage":Ljava/lang/String;
    move-object/from16 v9, v16

    move/from16 v10, p7

    :try_start_a2
    invoke-interface/range {v2 .. v10}, Landroid/app/IActivityManager;->bindService(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;ILjava/lang/String;I)I

    move-result v2
    :try_end_a6
    .catch Landroid/os/RemoteException; {:try_start_a2 .. :try_end_a6} :catch_b1
    .catchall {:try_start_a2 .. :try_end_a6} :catchall_af

    if-eqz v2, :cond_a9

    const/4 v13, 0x1

    .line 13062
    :cond_a9
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13054
    return v13

    .line 13062
    .end local v0  # "sanitizedIntent":Landroid/content/Intent;
    :catchall_af
    move-exception v0

    goto :goto_b7

    .line 13059
    :catch_b1
    move-exception v0

    goto :goto_c1

    .line 13062
    .end local v14  # "callingIdentity":J
    .end local v17  # "targetPackage":Ljava/lang/String;
    .restart local v9  # "callingIdentity":J
    .restart local v15  # "targetPackage":Ljava/lang/String;
    :catchall_b3
    move-exception v0

    move-object/from16 v17, v15

    move-wide v14, v9

    .end local v9  # "callingIdentity":J
    .end local v15  # "targetPackage":Ljava/lang/String;
    .restart local v14  # "callingIdentity":J
    .restart local v17  # "targetPackage":Ljava/lang/String;
    :goto_b7
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0

    .line 13059
    .end local v14  # "callingIdentity":J
    .end local v17  # "targetPackage":Ljava/lang/String;
    .restart local v9  # "callingIdentity":J
    .restart local v15  # "targetPackage":Ljava/lang/String;
    :catch_bd
    move-exception v0

    move-object/from16 v17, v15

    move-wide v14, v9

    .line 13062
    .end local v9  # "callingIdentity":J
    .end local v15  # "targetPackage":Ljava/lang/String;
    .restart local v14  # "callingIdentity":J
    .restart local v17  # "targetPackage":Ljava/lang/String;
    :goto_c1
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13063
    nop

    .line 13066
    return v13

    .line 13041
    .end local v14  # "callingIdentity":J
    .end local v17  # "targetPackage":Ljava/lang/String;
    :catchall_c8
    move-exception v0

    :try_start_c9
    monitor-exit v2
    :try_end_ca
    .catchall {:try_start_c9 .. :try_end_ca} :catchall_c8

    throw v0

    .line 13035
    :cond_cb
    new-instance v0, Ljava/lang/SecurityException;

    const-string v2, "Not allowed to bind to target user id"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public checkDeviceIdentifierAccess(Ljava/lang/String;II)Z
    .registers 16
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "pid"  # I
    .param p3, "uid"  # I

    .line 8460
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    .line 8461
    .local v0, "callingUid":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingPid()I

    move-result v1

    .line 8462
    .local v1, "callingPid":I
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    const/4 v3, 0x3

    const/4 v4, 0x2

    const-string v5, "DevicePolicyManager"

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/16 v8, 0x2710

    if-lt v2, v8, :cond_4c

    if-ne v0, p3, :cond_1f

    if-ne v1, p2, :cond_1f

    goto :goto_4c

    .line 8464
    :cond_1f
    const/4 v2, 0x5

    new-array v2, v2, [Ljava/lang/Object;

    .line 8466
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    aput-object v8, v2, v7

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v2, v6

    aput-object p1, v2, v4

    invoke-static {p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v2, v3

    const/4 v3, 0x4

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v2, v3

    .line 8464
    const-string v3, "Calling uid %d, pid %d cannot check device identifier access for package %s (uid=%d, pid=%d)"

    invoke-static {v3, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .line 8467
    .local v2, "message":Ljava/lang/String;
    invoke-static {v5, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8468
    new-instance v3, Ljava/lang/SecurityException;

    invoke-direct {v3, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 8471
    .end local v2  # "message":Ljava/lang/String;
    :cond_4c
    :goto_4c
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 8473
    .local v2, "userId":I
    :try_start_50
    iget-object v8, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-interface {v8, p1, v7, v2}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v8

    .line 8477
    .local v8, "appInfo":Landroid/content/pm/ApplicationInfo;
    if-nez v8, :cond_66

    .line 8478
    const-string v3, "appInfo could not be found for package %s"

    new-array v4, v6, [Ljava/lang/Object;

    aput-object p1, v4, v7

    .line 8479
    invoke-static {v3, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .line 8478
    invoke-static {v5, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8480
    return v7

    .line 8481
    :cond_66
    iget v9, v8, Landroid/content/pm/ApplicationInfo;->uid:I
    :try_end_68
    .catch Landroid/os/RemoteException; {:try_start_50 .. :try_end_68} :catch_e1

    if-ne p3, v9, :cond_c0

    .line 8492
    .end local v8  # "appInfo":Landroid/content/pm/ApplicationInfo;
    nop

    .line 8495
    iget-object v8, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v9, "android.permission.READ_PHONE_STATE"

    invoke-virtual {v8, v9, p2, p3}, Landroid/content/Context;->checkPermission(Ljava/lang/String;II)I

    move-result v8

    if-eqz v8, :cond_76

    .line 8497
    return v7

    .line 8501
    :cond_76
    invoke-virtual {p0, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerComponent(Z)Landroid/content/ComponentName;

    move-result-object v8

    .line 8502
    .local v8, "deviceOwner":Landroid/content/ComponentName;
    const-string v9, "delegation-cert-install"

    if-eqz v8, :cond_8f

    invoke-virtual {v8}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v10, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-nez v10, :cond_8e

    .line 8503
    invoke-direct {p0, p1, p3, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerDelegate(Ljava/lang/String;ILjava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_8f

    .line 8504
    :cond_8e
    return v6

    .line 8507
    :cond_8f
    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAsUser(I)Landroid/content/ComponentName;

    move-result-object v10

    .line 8508
    .local v10, "profileOwner":Landroid/content/ComponentName;
    if-eqz v10, :cond_a6

    invoke-virtual {v10}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v11, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v11

    if-nez v11, :cond_a5

    .line 8509
    invoke-direct {p0, p1, p3, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerDelegate(Ljava/lang/String;ILjava/lang/String;)Z

    move-result v9

    if-eqz v9, :cond_a6

    .line 8510
    :cond_a5
    return v6

    .line 8513
    :cond_a6
    new-array v3, v3, [Ljava/lang/Object;

    aput-object p1, v3, v7

    .line 8514
    invoke-static {p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v3, v6

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v3, v4

    .line 8513
    const-string v4, "Package %s (uid=%d, pid=%d) cannot access Device IDs"

    invoke-static {v4, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-static {v5, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8515
    return v7

    .line 8482
    .end local v10  # "profileOwner":Landroid/content/ComponentName;
    .local v8, "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_c0
    :try_start_c0
    const-string v9, "Package %s (uid=%d) does not match provided uid %d"

    new-array v3, v3, [Ljava/lang/Object;

    aput-object p1, v3, v7

    iget v10, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 8483
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    aput-object v10, v3, v6

    invoke-static {p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v3, v4

    .line 8482
    invoke-static {v9, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .line 8484
    .local v3, "message":Ljava/lang/String;
    invoke-static {v5, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8485
    new-instance v4, Ljava/lang/SecurityException;

    invoke-direct {v4, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUid":I
    .end local v1  # "callingPid":I
    .end local v2  # "userId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "packageName":Ljava/lang/String;
    .end local p2  # "pid":I
    .end local p3  # "uid":I
    throw v4
    :try_end_e1
    .catch Landroid/os/RemoteException; {:try_start_c0 .. :try_end_e1} :catch_e1

    .line 8487
    .end local v3  # "message":Ljava/lang/String;
    .end local v8  # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v0  # "callingUid":I
    .restart local v1  # "callingPid":I
    .restart local v2  # "userId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "packageName":Ljava/lang/String;
    .restart local p2  # "pid":I
    .restart local p3  # "uid":I
    :catch_e1
    move-exception v3

    .line 8490
    .local v3, "e":Landroid/os/RemoteException;
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Exception caught obtaining appInfo for package "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v5, v4, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8491
    return v7
.end method

.method public checkProvisioningPreCondition(Ljava/lang/String;Ljava/lang/String;)I
    .registers 4
    .param p1, "action"  # Ljava/lang/String;
    .param p2, "packageName"  # Ljava/lang/String;

    .line 11902
    invoke-static {p2}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 11903
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageProfileAndDeviceOwners()V

    .line 11904
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkProvisioningPreConditionSkipPermission(Ljava/lang/String;Ljava/lang/String;)I

    move-result v0

    return v0
.end method

.method public choosePrivateKeyAlias(ILandroid/net/Uri;Ljava/lang/String;Landroid/os/IBinder;)V
    .registers 29
    .param p1, "uid"  # I
    .param p2, "uri"  # Landroid/net/Uri;
    .param p3, "alias"  # Ljava/lang/String;
    .param p4, "response"  # Landroid/os/IBinder;

    .line 5947
    move-object/from16 v1, p0

    move-object/from16 v2, p4

    invoke-direct/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    if-nez v0, :cond_b

    .line 5948
    return-void

    .line 5951
    :cond_b
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v12

    .line 5953
    .local v12, "caller":Landroid/os/UserHandle;
    invoke-virtual {v12}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v0

    invoke-virtual {v1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwner(I)Landroid/content/ComponentName;

    move-result-object v3

    .line 5954
    .local v3, "aliasChooser":Landroid/content/ComponentName;
    if-nez v3, :cond_39

    invoke-virtual {v12}, Landroid/os/UserHandle;->isSystem()Z

    move-result v0

    if-eqz v0, :cond_39

    .line 5955
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v4

    monitor-enter v4

    .line 5956
    :try_start_26
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 5957
    .local v0, "deviceOwnerAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v0, :cond_33

    .line 5958
    iget-object v5, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v5}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    move-object v3, v5

    .line 5960
    .end local v0  # "deviceOwnerAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_33
    monitor-exit v4

    move-object v13, v3

    goto :goto_3a

    :catchall_36
    move-exception v0

    monitor-exit v4
    :try_end_38
    .catchall {:try_start_26 .. :try_end_38} :catchall_36

    throw v0

    .line 5962
    :cond_39
    move-object v13, v3

    .end local v3  # "aliasChooser":Landroid/content/ComponentName;
    .local v13, "aliasChooser":Landroid/content/ComponentName;
    :goto_3a
    if-nez v13, :cond_41

    .line 5963
    const/4 v0, 0x0

    invoke-direct {v1, v0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendPrivateKeyAliasResponse(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 5964
    return-void

    .line 5967
    :cond_41
    new-instance v0, Landroid/content/Intent;

    const-string v3, "android.app.action.CHOOSE_PRIVATE_KEY_ALIAS"

    invoke-direct {v0, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    move-object v14, v0

    .line 5968
    .local v14, "intent":Landroid/content/Intent;
    const-string v0, "android.app.extra.CHOOSE_PRIVATE_KEY_SENDER_UID"

    move/from16 v15, p1

    invoke-virtual {v14, v0, v15}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 5969
    const-string v0, "android.app.extra.CHOOSE_PRIVATE_KEY_URI"

    move-object/from16 v11, p2

    invoke-virtual {v14, v0, v11}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    .line 5970
    const-string v0, "android.app.extra.CHOOSE_PRIVATE_KEY_ALIAS"

    move-object/from16 v10, p3

    invoke-virtual {v14, v0, v10}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 5971
    const-string v0, "android.app.extra.CHOOSE_PRIVATE_KEY_RESPONSE"

    invoke-virtual {v14, v0, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/IBinder;)Landroid/content/Intent;

    .line 5972
    const/high16 v0, 0x10000000

    invoke-virtual {v14, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 5975
    nop

    .line 5976
    invoke-virtual {v12}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v0

    .line 5975
    const-string v3, "delegation-cert-selection"

    const-string v4, "android.app.action.CHOOSE_PRIVATE_KEY_ALIAS"

    invoke-direct {v1, v3, v4, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->resolveDelegateReceiver(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v9

    .line 5979
    .local v9, "delegateReceiver":Landroid/content/ComponentName;
    if-eqz v9, :cond_7d

    .line 5980
    invoke-virtual {v14, v9}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 5981
    const/4 v0, 0x1

    move v8, v0

    .local v0, "isDelegate":Z
    goto :goto_82

    .line 5983
    .end local v0  # "isDelegate":Z
    :cond_7d
    invoke-virtual {v14, v13}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 5984
    const/4 v0, 0x0

    move v8, v0

    .line 5987
    .local v8, "isDelegate":Z
    :goto_82
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v6

    .line 5989
    .local v6, "id":J
    :try_start_88
    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v0, 0x0

    new-instance v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$6;

    invoke-direct {v5, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$6;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Landroid/os/IBinder;)V
    :try_end_90
    .catchall {:try_start_88 .. :try_end_90} :catchall_da

    const/16 v16, 0x0

    const/16 v17, -0x1

    const/16 v18, 0x0

    const/16 v19, 0x0

    move-object v4, v14

    move-object/from16 v20, v5

    move-object v5, v12

    move-wide/from16 v21, v6

    .end local v6  # "id":J
    .local v21, "id":J
    move-object v6, v0

    move-object/from16 v7, v20

    move/from16 v23, v8

    .end local v8  # "isDelegate":Z
    .local v23, "isDelegate":Z
    move-object/from16 v8, v16

    move-object/from16 v16, v9

    .end local v9  # "delegateReceiver":Landroid/content/ComponentName;
    .local v16, "delegateReceiver":Landroid/content/ComponentName;
    move/from16 v9, v17

    move-object/from16 v10, v18

    move-object/from16 v11, v19

    :try_start_ad
    invoke-virtual/range {v3 .. v11}, Landroid/content/Context;->sendOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V

    .line 5996
    const/16 v0, 0x16

    .line 5997
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 5998
    invoke-virtual {v14}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v3

    invoke-virtual {v0, v3}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0
    :try_end_be
    .catchall {:try_start_ad .. :try_end_be} :catchall_d4

    .line 5999
    move/from16 v3, v23

    .end local v23  # "isDelegate":Z
    .local v3, "isDelegate":Z
    :try_start_c0
    invoke-virtual {v0, v3}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 6000
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V
    :try_end_c7
    .catchall {:try_start_c0 .. :try_end_c7} :catchall_d0

    .line 6002
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    move-wide/from16 v4, v21

    .end local v21  # "id":J
    .local v4, "id":J
    invoke-virtual {v0, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 6003
    nop

    .line 6004
    return-void

    .line 6002
    .end local v4  # "id":J
    .restart local v21  # "id":J
    :catchall_d0
    move-exception v0

    move-wide/from16 v4, v21

    .end local v21  # "id":J
    .restart local v4  # "id":J
    goto :goto_df

    .end local v3  # "isDelegate":Z
    .end local v4  # "id":J
    .restart local v21  # "id":J
    .restart local v23  # "isDelegate":Z
    :catchall_d4
    move-exception v0

    move-wide/from16 v4, v21

    move/from16 v3, v23

    .end local v21  # "id":J
    .end local v23  # "isDelegate":Z
    .restart local v3  # "isDelegate":Z
    .restart local v4  # "id":J
    goto :goto_df

    .end local v3  # "isDelegate":Z
    .end local v4  # "id":J
    .end local v16  # "delegateReceiver":Landroid/content/ComponentName;
    .restart local v6  # "id":J
    .restart local v8  # "isDelegate":Z
    .restart local v9  # "delegateReceiver":Landroid/content/ComponentName;
    :catchall_da
    move-exception v0

    move-wide v4, v6

    move v3, v8

    move-object/from16 v16, v9

    .end local v6  # "id":J
    .end local v8  # "isDelegate":Z
    .end local v9  # "delegateReceiver":Landroid/content/ComponentName;
    .restart local v3  # "isDelegate":Z
    .restart local v4  # "id":J
    .restart local v16  # "delegateReceiver":Landroid/content/ComponentName;
    :goto_df
    iget-object v6, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0
.end method

.method public clearApplicationUserData(Landroid/content/ComponentName;Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;)V
    .registers 12
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;
    .param p3, "callback"  # Landroid/content/pm/IPackageDataObserver;

    .line 13600
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13601
    const-string/jumbo v0, "packageName is null"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13602
    const-string v0, "callback is null"

    invoke-static {p3, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13603
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 13604
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 13606
    .local v0, "userId":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 13608
    .local v1, "ident":J
    const/4 v3, 0x0

    :try_start_1e
    invoke-static {}, Landroid/app/ActivityManager;->getService()Landroid/app/IActivityManager;

    move-result-object v4

    invoke-interface {v4, p2, v3, p3, v0}, Landroid/app/IActivityManager;->clearApplicationUserData(Ljava/lang/String;ZLandroid/content/pm/IPackageDataObserver;I)Z
    :try_end_25
    .catch Landroid/os/RemoteException; {:try_start_1e .. :try_end_25} :catch_4b
    .catch Ljava/lang/SecurityException; {:try_start_1e .. :try_end_25} :catch_28
    .catchall {:try_start_1e .. :try_end_25} :catchall_26

    goto :goto_4c

    .line 13624
    :catchall_26
    move-exception v3

    goto :goto_45

    .line 13612
    :catch_28
    move-exception v4

    .line 13616
    .local v4, "se":Ljava/lang/SecurityException;
    :try_start_29
    const-string v5, "DevicePolicyManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Not allowed to clear application user data for package "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_3f
    .catchall {:try_start_29 .. :try_end_3f} :catchall_26

    .line 13619
    :try_start_3f
    invoke-interface {p3, p2, v3}, Landroid/content/pm/IPackageDataObserver;->onRemoveCompleted(Ljava/lang/String;Z)V
    :try_end_42
    .catch Landroid/os/RemoteException; {:try_start_3f .. :try_end_42} :catch_43
    .catchall {:try_start_3f .. :try_end_42} :catchall_26

    .line 13622
    goto :goto_4c

    .line 13620
    :catch_43
    move-exception v3

    goto :goto_4c

    .line 13624
    .end local v4  # "se":Ljava/lang/SecurityException;
    :goto_45
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3

    .line 13610
    :catch_4b
    move-exception v3

    .line 13624
    :goto_4c
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13625
    nop

    .line 13626
    return-void
.end method

.method public clearCrossProfileIntentFilters(Landroid/content/ComponentName;)V
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 9161
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9162
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 9163
    .local v0, "callingUserId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 9164
    const/4 v2, -0x1

    :try_start_f
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 9165
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2
    :try_end_18
    .catchall {:try_start_f .. :try_end_18} :catchall_55

    .line 9167
    .local v2, "id":J
    :try_start_18
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v4, v0}, Landroid/os/UserManager;->getProfileParent(I)Landroid/content/pm/UserInfo;

    move-result-object v4

    .line 9168
    .local v4, "parent":Landroid/content/pm/UserInfo;
    if-nez v4, :cond_2e

    .line 9169
    const-string v5, "DevicePolicyManager"

    const-string v6, "Cannot call clearCrossProfileIntentFilter if there is no parent"

    invoke-static {v5, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_27
    .catch Landroid/os/RemoteException; {:try_start_18 .. :try_end_27} :catch_4c
    .catchall {:try_start_18 .. :try_end_27} :catchall_45

    .line 9183
    :try_start_27
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v1
    :try_end_2d
    .catchall {:try_start_27 .. :try_end_2d} :catchall_55

    .line 9171
    return-void

    .line 9174
    :cond_2e
    :try_start_2e
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    .line 9175
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    .line 9174
    invoke-interface {v5, v0, v6}, Landroid/content/pm/IPackageManager;->clearCrossProfileIntentFilters(ILjava/lang/String;)V

    .line 9179
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    iget v6, v4, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v7

    invoke-interface {v5, v6, v7}, Landroid/content/pm/IPackageManager;->clearCrossProfileIntentFilters(ILjava/lang/String;)V
    :try_end_42
    .catch Landroid/os/RemoteException; {:try_start_2e .. :try_end_42} :catch_4c
    .catchall {:try_start_2e .. :try_end_42} :catchall_45

    .line 9183
    .end local v4  # "parent":Landroid/content/pm/UserInfo;
    :try_start_42
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    goto :goto_4f

    :catchall_45
    move-exception v4

    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "callingUserId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    throw v4

    .line 9180
    .restart local v0  # "callingUserId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    :catch_4c
    move-exception v4

    .line 9183
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    :goto_4f
    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9184
    nop

    .line 9185
    .end local v2  # "id":J
    monitor-exit v1

    .line 9186
    return-void

    .line 9185
    :catchall_55
    move-exception v2

    monitor-exit v1
    :try_end_57
    .catchall {:try_start_42 .. :try_end_57} :catchall_55

    throw v2
.end method

.method public clearDeviceOwner(Ljava/lang/String;)V
    .registers 12
    .param p1, "packageName"  # Ljava/lang/String;

    .line 7985
    const-string/jumbo v0, "packageName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7986
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    .line 7988
    .local v0, "callingUid":I
    :try_start_c
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    .line 7989
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 7988
    invoke-virtual {v1, p1, v2}, Landroid/content/pm/PackageManager;->getPackageUidAsUser(Ljava/lang/String;I)I

    move-result v1
    :try_end_1a
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_c .. :try_end_1a} :catch_97

    .line 7990
    .local v1, "uid":I
    if-ne v1, v0, :cond_8f

    .line 7995
    .end local v1  # "uid":I
    nop

    .line 7996
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 7997
    :try_start_22
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v1

    .line 7998
    .local v1, "deviceOwnerComponent":Landroid/content/ComponentName;
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v3

    .line 7999
    .local v3, "deviceOwnerUserId":I
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v4

    if-eqz v4, :cond_84

    .line 8000
    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_84

    .line 8001
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    if-ne v3, v4, :cond_84

    .line 8005
    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceUserUnlocked(I)V

    .line 8007
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v4

    .line 8008
    .local v4, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v5
    :try_end_53
    .catchall {:try_start_22 .. :try_end_53} :catchall_8c

    .line 8010
    .local v5, "ident":J
    :try_start_53
    invoke-direct {p0, v4, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearDeviceOwnerLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;I)V

    .line 8011
    invoke-virtual {p0, v1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeActiveAdminLocked(Landroid/content/ComponentName;I)V

    .line 8012
    const-string v7, "android.app.action.DEVICE_OWNER_CHANGED"

    invoke-direct {p0, v7, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendOwnerChangedBroadcast(Ljava/lang/String;I)V
    :try_end_5e
    .catchall {:try_start_53 .. :try_end_5e} :catchall_7d

    .line 8015
    :try_start_5e
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v7, v5, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8016
    nop

    .line 8017
    const-string v7, "DevicePolicyManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Device owner removed: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8018
    nop

    .end local v1  # "deviceOwnerComponent":Landroid/content/ComponentName;
    .end local v3  # "deviceOwnerUserId":I
    .end local v4  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v5  # "ident":J
    monitor-exit v2

    .line 8019
    return-void

    .line 8015
    .restart local v1  # "deviceOwnerComponent":Landroid/content/ComponentName;
    .restart local v3  # "deviceOwnerUserId":I
    .restart local v4  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v5  # "ident":J
    :catchall_7d
    move-exception v7

    iget-object v8, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v8, v5, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "callingUid":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "packageName":Ljava/lang/String;
    throw v7

    .line 8002
    .end local v4  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v5  # "ident":J
    .restart local v0  # "callingUid":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "packageName":Ljava/lang/String;
    :cond_84
    new-instance v4, Ljava/lang/SecurityException;

    const-string v5, "clearDeviceOwner can only be called by the device owner"

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUid":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "packageName":Ljava/lang/String;
    throw v4

    .line 8018
    .end local v1  # "deviceOwnerComponent":Landroid/content/ComponentName;
    .end local v3  # "deviceOwnerUserId":I
    .restart local v0  # "callingUid":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "packageName":Ljava/lang/String;
    :catchall_8c
    move-exception v1

    monitor-exit v2
    :try_end_8e
    .catchall {:try_start_5e .. :try_end_8e} :catchall_8c

    throw v1

    .line 7991
    .local v1, "uid":I
    :cond_8f
    :try_start_8f
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Invalid packageName"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUid":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "packageName":Ljava/lang/String;
    throw v2
    :try_end_97
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_8f .. :try_end_97} :catch_97

    .line 7993
    .end local v1  # "uid":I
    .restart local v0  # "callingUid":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "packageName":Ljava/lang/String;
    :catch_97
    move-exception v1

    .line 7994
    .local v1, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V

    throw v2
.end method

.method public clearPackagePersistentPreferredActivities(Landroid/content/ComponentName;Ljava/lang/String;)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;

    .line 8942
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 8943
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 8944
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 8945
    const/4 v2, -0x1

    :try_start_f
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 8947
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2
    :try_end_18
    .catchall {:try_start_f .. :try_end_18} :catchall_35

    .line 8949
    .local v2, "id":J
    :try_start_18
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-interface {v4, p2, v0}, Landroid/content/pm/IPackageManager;->clearPackagePersistentPreferredActivities(Ljava/lang/String;I)V

    .line 8950
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-interface {v4, v0}, Landroid/content/pm/IPackageManager;->flushPackageRestrictionsAsUser(I)V
    :try_end_22
    .catch Landroid/os/RemoteException; {:try_start_18 .. :try_end_22} :catch_2c
    .catchall {:try_start_18 .. :try_end_22} :catchall_25

    .line 8954
    :try_start_22
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    goto :goto_2f

    :catchall_25
    move-exception v4

    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "userHandle":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "packageName":Ljava/lang/String;
    throw v4

    .line 8951
    .restart local v0  # "userHandle":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "packageName":Ljava/lang/String;
    :catch_2c
    move-exception v4

    .line 8954
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    :goto_2f
    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8955
    nop

    .line 8956
    .end local v2  # "id":J
    monitor-exit v1

    .line 8957
    return-void

    .line 8956
    :catchall_35
    move-exception v2

    monitor-exit v1
    :try_end_37
    .catchall {:try_start_22 .. :try_end_37} :catchall_35

    throw v2
.end method

.method public clearProfileOwner(Landroid/content/ComponentName;)V
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 8147
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 8148
    return-void

    .line 8150
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 8152
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 8153
    .local v0, "userId":I
    const-string v1, "clear profile owner"

    invoke-direct {p0, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceNotManagedProfile(ILjava/lang/String;)V

    .line 8154
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceUserUnlocked(I)V

    .line 8155
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 8157
    const/4 v2, -0x1

    .line 8158
    :try_start_1e
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 8160
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v3
    :try_end_28
    .catchall {:try_start_1e .. :try_end_28} :catchall_61

    .line 8162
    .local v3, "ident":J
    :try_start_28
    invoke-virtual {p0, v2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearProfileOwnerLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;I)V

    .line 8163
    invoke-virtual {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeActiveAdminLocked(Landroid/content/ComponentName;I)V

    .line 8164
    const-string v5, "android.app.action.PROFILE_OWNER_CHANGED"

    invoke-direct {p0, v5, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendOwnerChangedBroadcast(Ljava/lang/String;I)V
    :try_end_33
    .catchall {:try_start_28 .. :try_end_33} :catchall_5a

    .line 8167
    :try_start_33
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8168
    nop

    .line 8169
    const-string v5, "DevicePolicyManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Profile owner "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v7, " removed from user "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8170
    nop

    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "ident":J
    monitor-exit v1

    .line 8171
    return-void

    .line 8167
    .restart local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v3  # "ident":J
    :catchall_5a
    move-exception v5

    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "userId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    throw v5

    .line 8170
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "ident":J
    .restart local v0  # "userId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    :catchall_61
    move-exception v2

    monitor-exit v1
    :try_end_63
    .catchall {:try_start_33 .. :try_end_63} :catchall_61

    throw v2
.end method

.method public clearProfileOwnerLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;I)V
    .registers 5
    .param p1, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .param p2, "userId"  # I

    .line 8174
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mDeviceAdminServiceController:Lcom/android/server/devicepolicy/DeviceAdminServiceController;

    const-string v1, "clear-profile-owner"

    invoke-virtual {v0, p2, v1}, Lcom/android/server/devicepolicy/DeviceAdminServiceController;->stopServiceForOwner(ILjava/lang/String;)V

    .line 8176
    const/4 v0, 0x0

    if-eqz p1, :cond_14

    .line 8177
    iput-boolean v0, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCamera:Z

    .line 8178
    const/4 v1, 0x0

    iput-object v1, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->userRestrictions:Landroid/os/Bundle;

    .line 8179
    iget-object v1, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->defaultEnabledRestrictionsAlreadySet:Ljava/util/Set;

    invoke-interface {v1}, Ljava/util/Set;->clear()V

    .line 8181
    :cond_14
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 8182
    .local v1, "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iput-boolean v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mCurrentInputMethodSet:Z

    .line 8183
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mOwnerInstalledCaCerts:Ljava/util/Set;

    invoke-interface {v0}, Ljava/util/Set;->clear()V

    .line 8184
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 8185
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearUserPoliciesLocked(I)V

    .line 8186
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0, p2}, Lcom/android/server/devicepolicy/Owners;->removeProfileOwner(I)V

    .line 8187
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0, p2}, Lcom/android/server/devicepolicy/Owners;->writeProfileOwner(I)V

    .line 8188
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->deleteTransferOwnershipBundleLocked(I)V

    .line 8189
    return-void
.end method

.method public clearResetPasswordToken(Landroid/content/ComponentName;)Z
    .registers 12
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 13511
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_50

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_e

    goto :goto_50

    .line 13514
    :cond_e
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13515
    :try_start_13
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v2

    .line 13516
    .local v2, "userHandle":I
    const/4 v3, -0x1

    invoke-virtual {p0, p1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 13518
    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v3

    .line 13519
    .local v3, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-wide v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    const-wide/16 v6, 0x0

    cmp-long v4, v4, v6

    if-eqz v4, :cond_4b

    .line 13520
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v4
    :try_end_2f
    .catchall {:try_start_13 .. :try_end_2f} :catchall_4d

    .line 13522
    .local v4, "ident":J
    :try_start_2f
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    iget-wide v8, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    invoke-virtual {v1, v8, v9, v2}, Lcom/android/internal/widget/LockPatternUtils;->removeEscrowToken(JI)Z

    move-result v1

    .line 13524
    .local v1, "result":Z
    iput-wide v6, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    .line 13525
    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V
    :try_end_3c
    .catchall {:try_start_2f .. :try_end_3c} :catchall_44

    .line 13526
    nop

    .line 13528
    :try_start_3d
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v0

    .line 13526
    return v1

    .line 13528
    .end local v1  # "result":Z
    :catchall_44
    move-exception v1

    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    throw v1

    .line 13531
    .end local v2  # "userHandle":I
    .end local v3  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v4  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    :cond_4b
    monitor-exit v0

    .line 13532
    return v1

    .line 13531
    :catchall_4d
    move-exception v1

    monitor-exit v0
    :try_end_4f
    .catchall {:try_start_3d .. :try_end_4f} :catchall_4d

    throw v1

    .line 13512
    :cond_50
    :goto_50
    return v1
.end method

.method public clearSystemUpdatePolicyFreezePeriodRecord()V
    .registers 5

    .line 11602
    const-string v0, "clearSystemUpdatePolicyFreezePeriodRecord"

    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceShell(Ljava/lang/String;)V

    .line 11603
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 11605
    :try_start_a
    const-string v1, "DevicePolicyManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Clear freeze period record: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 11606
    invoke-virtual {v3}, Lcom/android/server/devicepolicy/Owners;->getSystemUpdateFreezePeriodRecordAsString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 11605
    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11607
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    const/4 v2, 0x0

    invoke-virtual {v1, v2, v2}, Lcom/android/server/devicepolicy/Owners;->setSystemUpdateFreezePeriodRecord(Ljava/time/LocalDate;Ljava/time/LocalDate;)Z

    move-result v1

    if-eqz v1, :cond_34

    .line 11608
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->writeDeviceOwner()V

    .line 11610
    :cond_34
    monitor-exit v0

    .line 11611
    return-void

    .line 11610
    :catchall_36
    move-exception v1

    monitor-exit v0
    :try_end_38
    .catchall {:try_start_a .. :try_end_38} :catchall_36

    throw v1
.end method

.method public createAdminSupportIntent(Ljava/lang/String;)Landroid/content/Intent;
    .registers 11
    .param p1, "restriction"  # Ljava/lang/String;

    .line 11441
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 11442
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    .line 11443
    .local v0, "uid":I
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    .line 11444
    .local v1, "userId":I
    const/4 v2, 0x0

    .line 11445
    .local v2, "intent":Landroid/content/Intent;
    const-string/jumbo v3, "policy_disable_camera"

    invoke-virtual {v3, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_28

    .line 11446
    const-string/jumbo v3, "policy_disable_screen_capture"

    invoke-virtual {v3, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_21

    goto :goto_28

    .line 11473
    :cond_21
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLocalService:Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;

    invoke-virtual {v3, v1, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;->createUserRestrictionSupportIntent(ILjava/lang/String;)Landroid/content/Intent;

    move-result-object v2

    goto :goto_92

    .line 11447
    :cond_28
    :goto_28
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v3

    monitor-enter v3

    .line 11448
    :try_start_2d
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    .line 11449
    .local v4, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v5, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    .line 11450
    .local v5, "N":I
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_38
    if-ge v6, v5, :cond_6b

    .line 11451
    iget-object v7, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 11452
    .local v7, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v8, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCamera:Z

    if-eqz v8, :cond_4f

    const-string/jumbo v8, "policy_disable_camera"

    .line 11453
    invoke-virtual {v8, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_5c

    :cond_4f
    iget-boolean v8, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableScreenCapture:Z

    if-eqz v8, :cond_68

    const-string/jumbo v8, "policy_disable_screen_capture"

    .line 11455
    invoke-virtual {v8, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_68

    .line 11456
    :cond_5c
    iget-object v8, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v8}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v8

    invoke-direct {p0, v8, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->createShowAdminSupportIntent(Landroid/content/ComponentName;I)Landroid/content/Intent;

    move-result-object v8

    move-object v2, v8

    .line 11457
    goto :goto_6b

    .line 11450
    .end local v7  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_68
    add-int/lit8 v6, v6, 0x1

    goto :goto_38

    .line 11462
    .end local v6  # "i":I
    :cond_6b
    :goto_6b
    if-nez v2, :cond_91

    const-string/jumbo v6, "policy_disable_camera"

    .line 11463
    invoke-virtual {v6, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_91

    .line 11464
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v6

    .line 11465
    .local v6, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v6, :cond_91

    iget-boolean v7, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCamera:Z

    if-eqz v7, :cond_91

    .line 11466
    iget-object v7, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v7}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v7

    iget-object v8, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 11467
    invoke-virtual {v8}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v8

    .line 11466
    invoke-direct {p0, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->createShowAdminSupportIntent(Landroid/content/ComponentName;I)Landroid/content/Intent;

    move-result-object v7

    move-object v2, v7

    .line 11470
    .end local v4  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v5  # "N":I
    .end local v6  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_91
    monitor-exit v3
    :try_end_92
    .catchall {:try_start_2d .. :try_end_92} :catchall_9a

    .line 11475
    :goto_92
    if-eqz v2, :cond_99

    .line 11476
    const-string v3, "android.app.extra.RESTRICTION"

    invoke-virtual {v2, v3, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 11478
    :cond_99
    return-object v2

    .line 11470
    :catchall_9a
    move-exception v4

    :try_start_9b
    monitor-exit v3
    :try_end_9c
    .catchall {:try_start_9b .. :try_end_9c} :catchall_9a

    throw v4
.end method

.method public createAndManageUser(Landroid/content/ComponentName;Ljava/lang/String;Landroid/content/ComponentName;Landroid/os/PersistableBundle;I)Landroid/os/UserHandle;
    .registers 30
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "name"  # Ljava/lang/String;
    .param p3, "profileOwner"  # Landroid/content/ComponentName;
    .param p4, "adminExtras"  # Landroid/os/PersistableBundle;
    .param p5, "flags"  # I

    .line 9634
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p3

    const-string v0, "admin is null"

    invoke-static {v2, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9635
    const-string/jumbo v0, "profileOwner is null"

    invoke-static {v3, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9636
    invoke-virtual/range {p1 .. p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual/range {p3 .. p3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1ee

    .line 9641
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/UserHandle;->isSystem()Z

    move-result v0

    if-eqz v0, :cond_1e6

    .line 9644
    and-int/lit8 v0, p5, 0x2

    if-eqz v0, :cond_31

    const/4 v0, 0x1

    goto :goto_32

    :cond_31
    const/4 v0, 0x0

    :goto_32
    move v6, v0

    .line 9645
    .local v6, "ephemeral":Z
    and-int/lit8 v0, p5, 0x4

    if-eqz v0, :cond_41

    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 9646
    invoke-static {v0}, Landroid/os/UserManager;->isDeviceInDemoMode(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_41

    const/4 v0, 0x1

    goto :goto_42

    :cond_41
    const/4 v0, 0x0

    :goto_42
    move v7, v0

    .line 9647
    .local v7, "demo":Z
    and-int/lit8 v0, p5, 0x10

    if-eqz v0, :cond_49

    const/4 v0, 0x1

    goto :goto_4a

    :cond_49
    const/4 v0, 0x0

    :goto_4a
    move v8, v0

    .line 9651
    .local v8, "leaveAllSystemAppsEnabled":Z
    const/4 v9, 0x0

    .line 9652
    .local v9, "user":Landroid/os/UserHandle;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v10

    monitor-enter v10

    .line 9653
    const/4 v0, -0x2

    :try_start_52
    invoke-virtual {v1, v2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 9655
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    move v11, v0

    .line 9656
    .local v11, "callingUid":I
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v12
    :try_end_62
    .catchall {:try_start_52 .. :try_end_62} :catchall_1df

    .line 9658
    .local v12, "id":J
    :try_start_62
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    invoke-virtual {v0, v11}, Landroid/content/pm/PackageManagerInternal;->getUidTargetSdkVersion(I)I

    move-result v0

    move v14, v0

    .line 9663
    .local v14, "targetSdkVersion":I
    const-class v0, Lcom/android/server/storage/DeviceStorageMonitorInternal;

    .line 9664
    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/storage/DeviceStorageMonitorInternal;

    .line 9665
    .local v0, "deviceStorageMonitorInternal":Lcom/android/server/storage/DeviceStorageMonitorInternal;
    invoke-interface {v0}, Lcom/android/server/storage/DeviceStorageMonitorInternal;->isMemoryLow()Z

    move-result v15
    :try_end_79
    .catchall {:try_start_62 .. :try_end_79} :catchall_1d6

    const/16 v16, 0x0

    const/16 v5, 0x1c

    if-eqz v15, :cond_9d

    .line 9666
    if-ge v14, v5, :cond_8e

    .line 9670
    nop

    .line 9701
    :try_start_82
    iget-object v4, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v12, v13}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v10
    :try_end_88
    .catchall {:try_start_82 .. :try_end_88} :catchall_89

    .line 9670
    return-object v16

    .line 9703
    .end local v0  # "deviceStorageMonitorInternal":Lcom/android/server/storage/DeviceStorageMonitorInternal;
    .end local v11  # "callingUid":I
    .end local v12  # "id":J
    .end local v14  # "targetSdkVersion":I
    :catchall_89
    move-exception v0

    move/from16 v18, v6

    goto/16 :goto_1e2

    .line 9667
    .restart local v0  # "deviceStorageMonitorInternal":Lcom/android/server/storage/DeviceStorageMonitorInternal;
    .restart local v11  # "callingUid":I
    .restart local v12  # "id":J
    .restart local v14  # "targetSdkVersion":I
    :cond_8e
    :try_start_8e
    new-instance v4, Landroid/os/ServiceSpecificException;

    const/4 v5, 0x5

    const-string/jumbo v15, "low device storage"

    invoke-direct {v4, v5, v15}, Landroid/os/ServiceSpecificException;-><init>(ILjava/lang/String;)V

    .end local v6  # "ephemeral":Z
    .end local v7  # "demo":Z
    .end local v8  # "leaveAllSystemAppsEnabled":Z
    .end local v9  # "user":Landroid/os/UserHandle;
    .end local v11  # "callingUid":I
    .end local v12  # "id":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "name":Ljava/lang/String;
    .end local p3  # "profileOwner":Landroid/content/ComponentName;
    .end local p4  # "adminExtras":Landroid/os/PersistableBundle;
    .end local p5  # "flags":I
    throw v4
    :try_end_98
    .catchall {:try_start_8e .. :try_end_98} :catchall_98

    .line 9701
    .end local v0  # "deviceStorageMonitorInternal":Lcom/android/server/storage/DeviceStorageMonitorInternal;
    .end local v14  # "targetSdkVersion":I
    .restart local v6  # "ephemeral":Z
    .restart local v7  # "demo":Z
    .restart local v8  # "leaveAllSystemAppsEnabled":Z
    .restart local v9  # "user":Landroid/os/UserHandle;
    .restart local v11  # "callingUid":I
    .restart local v12  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "name":Ljava/lang/String;
    .restart local p3  # "profileOwner":Landroid/content/ComponentName;
    .restart local p4  # "adminExtras":Landroid/os/PersistableBundle;
    .restart local p5  # "flags":I
    :catchall_98
    move-exception v0

    move/from16 v18, v6

    goto/16 :goto_1d9

    .line 9673
    .restart local v0  # "deviceStorageMonitorInternal":Lcom/android/server/storage/DeviceStorageMonitorInternal;
    .restart local v14  # "targetSdkVersion":I
    :cond_9d
    :try_start_9d
    iget-object v15, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v15}, Landroid/os/UserManager;->canAddMoreUsers()Z

    move-result v15
    :try_end_a3
    .catchall {:try_start_9d .. :try_end_a3} :catchall_1d6

    if-nez v15, :cond_b9

    .line 9674
    if-ge v14, v5, :cond_af

    .line 9678
    nop

    .line 9701
    :try_start_a8
    iget-object v4, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v12, v13}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v10
    :try_end_ae
    .catchall {:try_start_a8 .. :try_end_ae} :catchall_89

    .line 9678
    return-object v16

    .line 9675
    :cond_af
    :try_start_af
    new-instance v4, Landroid/os/ServiceSpecificException;

    const/4 v5, 0x6

    const-string/jumbo v15, "user limit reached"

    invoke-direct {v4, v5, v15}, Landroid/os/ServiceSpecificException;-><init>(ILjava/lang/String;)V

    .end local v6  # "ephemeral":Z
    .end local v7  # "demo":Z
    .end local v8  # "leaveAllSystemAppsEnabled":Z
    .end local v9  # "user":Landroid/os/UserHandle;
    .end local v11  # "callingUid":I
    .end local v12  # "id":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "name":Ljava/lang/String;
    .end local p3  # "profileOwner":Landroid/content/ComponentName;
    .end local p4  # "adminExtras":Landroid/os/PersistableBundle;
    .end local p5  # "flags":I
    throw v4

    .line 9682
    .restart local v6  # "ephemeral":Z
    .restart local v7  # "demo":Z
    .restart local v8  # "leaveAllSystemAppsEnabled":Z
    .restart local v9  # "user":Landroid/os/UserHandle;
    .restart local v11  # "callingUid":I
    .restart local v12  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "name":Ljava/lang/String;
    .restart local p3  # "profileOwner":Landroid/content/ComponentName;
    .restart local p4  # "adminExtras":Landroid/os/PersistableBundle;
    .restart local p5  # "flags":I
    :cond_b9
    const/4 v15, 0x0

    .line 9683
    .local v15, "userInfoFlags":I
    if-eqz v6, :cond_be

    .line 9684
    or-int/lit16 v15, v15, 0x100

    .line 9686
    :cond_be
    if-eqz v7, :cond_c2

    .line 9687
    or-int/lit16 v15, v15, 0x200

    .line 9689
    :cond_c2
    const/16 v17, 0x0

    .line 9690
    .local v17, "disallowedPackages":[Ljava/lang/String;
    if-nez v8, :cond_e0

    .line 9691
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOverlayPackagesProvider:Lcom/android/server/devicepolicy/OverlayPackagesProvider;

    .line 9692
    invoke-static {}, Landroid/os/UserHandle;->myUserId()I

    move-result v4

    move-object/from16 v19, v0

    .end local v0  # "deviceStorageMonitorInternal":Lcom/android/server/storage/DeviceStorageMonitorInternal;
    .local v19, "deviceStorageMonitorInternal":Lcom/android/server/storage/DeviceStorageMonitorInternal;
    const-string v0, "android.app.action.PROVISION_MANAGED_USER"

    .line 9691
    invoke-virtual {v5, v2, v4, v0}, Lcom/android/server/devicepolicy/OverlayPackagesProvider;->getNonRequiredApps(Landroid/content/ComponentName;ILjava/lang/String;)Ljava/util/Set;

    move-result-object v0

    const/4 v4, 0x0

    new-array v4, v4, [Ljava/lang/String;

    .line 9692
    invoke-interface {v0, v4}, Ljava/util/Set;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;
    :try_end_dd
    .catchall {:try_start_af .. :try_end_dd} :catchall_98

    move-object/from16 v17, v0

    goto :goto_e4

    .line 9690
    .end local v19  # "deviceStorageMonitorInternal":Lcom/android/server/storage/DeviceStorageMonitorInternal;
    .restart local v0  # "deviceStorageMonitorInternal":Lcom/android/server/storage/DeviceStorageMonitorInternal;
    :cond_e0
    move-object/from16 v19, v0

    .end local v0  # "deviceStorageMonitorInternal":Lcom/android/server/storage/DeviceStorageMonitorInternal;
    .restart local v19  # "deviceStorageMonitorInternal":Lcom/android/server/storage/DeviceStorageMonitorInternal;
    move-object/from16 v0, v17

    .line 9695
    .end local v17  # "disallowedPackages":[Ljava/lang/String;
    .local v0, "disallowedPackages":[Ljava/lang/String;
    :goto_e4
    :try_start_e4
    iget-object v4, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    move-object/from16 v5, p2

    invoke-virtual {v4, v5, v15, v0}, Landroid/os/UserManagerInternal;->createUserEvenWhenDisallowed(Ljava/lang/String;I[Ljava/lang/String;)Landroid/content/pm/UserInfo;

    move-result-object v4
    :try_end_ec
    .catchall {:try_start_e4 .. :try_end_ec} :catchall_1d6

    .line 9697
    .local v4, "userInfo":Landroid/content/pm/UserInfo;
    if-eqz v4, :cond_f4

    .line 9698
    :try_start_ee
    invoke-virtual {v4}, Landroid/content/pm/UserInfo;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v17
    :try_end_f2
    .catchall {:try_start_ee .. :try_end_f2} :catchall_98

    move-object/from16 v9, v17

    .line 9701
    .end local v0  # "disallowedPackages":[Ljava/lang/String;
    .end local v4  # "userInfo":Landroid/content/pm/UserInfo;
    .end local v15  # "userInfoFlags":I
    .end local v19  # "deviceStorageMonitorInternal":Lcom/android/server/storage/DeviceStorageMonitorInternal;
    :cond_f4
    :try_start_f4
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v12, v13}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9702
    nop

    .line 9703
    .end local v11  # "callingUid":I
    .end local v12  # "id":J
    monitor-exit v10
    :try_end_fb
    .catchall {:try_start_f4 .. :try_end_fb} :catchall_1df

    .line 9704
    if-nez v9, :cond_10b

    .line 9705
    const/16 v4, 0x1c

    if-ge v14, v4, :cond_102

    .line 9709
    return-object v16

    .line 9706
    :cond_102
    new-instance v0, Landroid/os/ServiceSpecificException;

    const-string v4, "failed to create user"

    const/4 v10, 0x1

    invoke-direct {v0, v10, v4}, Landroid/os/ServiceSpecificException;-><init>(ILjava/lang/String;)V

    throw v0

    .line 9713
    :cond_10b
    invoke-virtual {v9}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v4

    .line 9714
    .local v4, "userHandle":I
    new-instance v0, Landroid/content/Intent;

    const-string v10, "android.app.action.MANAGED_USER_CREATED"

    invoke-direct {v0, v10}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 9715
    const-string v10, "android.intent.extra.user_handle"

    invoke-virtual {v0, v10, v4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    move-result-object v0

    .line 9716
    const-string v10, "android.app.extra.PROVISIONING_LEAVE_ALL_SYSTEM_APPS_ENABLED"

    invoke-virtual {v0, v10, v8}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    move-result-object v0

    iget-object v10, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 9719
    invoke-static {v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getManagedProvisioningPackage(Landroid/content/Context;)Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v0, v10}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    move-result-object v0

    const/high16 v10, 0x10000000

    .line 9720
    invoke-virtual {v0, v10}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    move-result-object v10

    .line 9721
    .local v10, "intent":Landroid/content/Intent;
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    sget-object v11, Landroid/os/UserHandle;->SYSTEM:Landroid/os/UserHandle;

    invoke-virtual {v0, v10, v11}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 9723
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v11

    .line 9725
    .local v11, "id":J
    :try_start_13f
    invoke-virtual/range {p1 .. p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v0
    :try_end_143
    .catchall {:try_start_13f .. :try_end_143} :catchall_1b1

    move-object v13, v0

    .line 9728
    .local v13, "adminPkg":Ljava/lang/String;
    :try_start_144
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-interface {v0, v13, v4}, Landroid/content/pm/IPackageManager;->isPackageAvailable(Ljava/lang/String;I)Z

    move-result v0

    if-nez v0, :cond_15d

    .line 9729
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const/high16 v21, 0x400000

    const/16 v22, 0x1

    const/16 v23, 0x0

    move-object/from16 v18, v0

    move-object/from16 v19, v13

    move/from16 v20, v4

    invoke-interface/range {v18 .. v23}, Landroid/content/pm/IPackageManager;->installExistingPackageAsUser(Ljava/lang/String;IIILjava/util/List;)I
    :try_end_15d
    .catch Landroid/os/RemoteException; {:try_start_144 .. :try_end_15d} :catch_162
    .catchall {:try_start_144 .. :try_end_15d} :catchall_15e

    .line 9735
    :cond_15d
    goto :goto_163

    .line 9755
    .end local v13  # "adminPkg":Ljava/lang/String;
    :catchall_15e
    move-exception v0

    move/from16 v18, v6

    goto :goto_1b4

    .line 9733
    .restart local v13  # "adminPkg":Ljava/lang/String;
    :catch_162
    move-exception v0

    .line 9738
    :goto_163
    const/4 v15, 0x1

    :try_start_164
    invoke-virtual {v1, v3, v15, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setActiveAdmin(Landroid/content/ComponentName;ZI)V

    .line 9739
    invoke-static {}, Landroid/os/Process;->myUserHandle()Landroid/os/UserHandle;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v0

    invoke-virtual {v1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerName(I)Ljava/lang/String;

    move-result-object v0

    move-object v15, v0

    .line 9740
    .local v15, "ownerName":Ljava/lang/String;
    invoke-virtual {v1, v3, v15, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setProfileOwner(Landroid/content/ComponentName;Ljava/lang/String;I)Z

    .line 9742
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v17

    monitor-enter v17
    :try_end_17c
    .catchall {:try_start_164 .. :try_end_17c} :catchall_1b1

    .line 9743
    :try_start_17c
    invoke-virtual {v1, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    .line 9744
    .local v0, "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    move-object/from16 v5, p4

    iput-object v5, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mInitBundle:Landroid/os/PersistableBundle;

    .line 9745
    const/4 v5, 0x1

    iput-boolean v5, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminBroadcastPending:Z

    .line 9746
    invoke-direct {v1, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 9747
    .end local v0  # "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    monitor-exit v17
    :try_end_18b
    .catchall {:try_start_17c .. :try_end_18b} :catchall_1a8

    .line 9749
    and-int/lit8 v0, p5, 0x1

    if-eqz v0, :cond_19f

    .line 9750
    :try_start_18f
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string/jumbo v5, "user_setup_complete"
    :try_end_198
    .catchall {:try_start_18f .. :try_end_198} :catchall_1b1

    move/from16 v18, v6

    const/4 v6, 0x1

    .end local v6  # "ephemeral":Z
    .local v18, "ephemeral":Z
    :try_start_19b
    invoke-static {v0, v5, v6, v4}, Landroid/provider/Settings$Secure;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z
    :try_end_19e
    .catchall {:try_start_19b .. :try_end_19e} :catchall_1ad

    goto :goto_1a1

    .line 9749
    .end local v18  # "ephemeral":Z
    .restart local v6  # "ephemeral":Z
    :cond_19f
    move/from16 v18, v6

    .line 9754
    .end local v6  # "ephemeral":Z
    .restart local v18  # "ephemeral":Z
    :goto_1a1
    nop

    .line 9764
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v11, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9754
    return-object v9

    .line 9747
    .end local v18  # "ephemeral":Z
    .restart local v6  # "ephemeral":Z
    :catchall_1a8
    move-exception v0

    move/from16 v18, v6

    .end local v6  # "ephemeral":Z
    .restart local v18  # "ephemeral":Z
    :goto_1ab
    :try_start_1ab
    monitor-exit v17
    :try_end_1ac
    .catchall {:try_start_1ab .. :try_end_1ac} :catchall_1af

    .end local v4  # "userHandle":I
    .end local v7  # "demo":Z
    .end local v8  # "leaveAllSystemAppsEnabled":Z
    .end local v9  # "user":Landroid/os/UserHandle;
    .end local v10  # "intent":Landroid/content/Intent;
    .end local v11  # "id":J
    .end local v14  # "targetSdkVersion":I
    .end local v18  # "ephemeral":Z
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "name":Ljava/lang/String;
    .end local p3  # "profileOwner":Landroid/content/ComponentName;
    .end local p4  # "adminExtras":Landroid/os/PersistableBundle;
    .end local p5  # "flags":I
    :try_start_1ac
    throw v0
    :try_end_1ad
    .catchall {:try_start_1ac .. :try_end_1ad} :catchall_1ad

    .line 9755
    .end local v13  # "adminPkg":Ljava/lang/String;
    .end local v15  # "ownerName":Ljava/lang/String;
    .restart local v4  # "userHandle":I
    .restart local v7  # "demo":Z
    .restart local v8  # "leaveAllSystemAppsEnabled":Z
    .restart local v9  # "user":Landroid/os/UserHandle;
    .restart local v10  # "intent":Landroid/content/Intent;
    .restart local v11  # "id":J
    .restart local v14  # "targetSdkVersion":I
    .restart local v18  # "ephemeral":Z
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "name":Ljava/lang/String;
    .restart local p3  # "profileOwner":Landroid/content/ComponentName;
    .restart local p4  # "adminExtras":Landroid/os/PersistableBundle;
    .restart local p5  # "flags":I
    :catchall_1ad
    move-exception v0

    goto :goto_1b4

    .line 9747
    .restart local v13  # "adminPkg":Ljava/lang/String;
    .restart local v15  # "ownerName":Ljava/lang/String;
    :catchall_1af
    move-exception v0

    goto :goto_1ab

    .line 9755
    .end local v13  # "adminPkg":Ljava/lang/String;
    .end local v15  # "ownerName":Ljava/lang/String;
    .end local v18  # "ephemeral":Z
    .restart local v6  # "ephemeral":Z
    :catchall_1b1
    move-exception v0

    move/from16 v18, v6

    .line 9756
    .end local v6  # "ephemeral":Z
    .local v0, "re":Ljava/lang/Throwable;
    .restart local v18  # "ephemeral":Z
    :goto_1b4
    :try_start_1b4
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v5, v4}, Landroid/os/UserManager;->removeUser(I)Z
    :try_end_1b9
    .catchall {:try_start_1b4 .. :try_end_1b9} :catchall_1cf

    .line 9757
    const/16 v5, 0x1c

    if-ge v14, v5, :cond_1c4

    .line 9761
    nop

    .line 9764
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v11, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9761
    return-object v16

    .line 9758
    :cond_1c4
    :try_start_1c4
    new-instance v5, Landroid/os/ServiceSpecificException;

    .line 9759
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v6

    const/4 v13, 0x1

    invoke-direct {v5, v13, v6}, Landroid/os/ServiceSpecificException;-><init>(ILjava/lang/String;)V

    .end local v4  # "userHandle":I
    .end local v7  # "demo":Z
    .end local v8  # "leaveAllSystemAppsEnabled":Z
    .end local v9  # "user":Landroid/os/UserHandle;
    .end local v10  # "intent":Landroid/content/Intent;
    .end local v11  # "id":J
    .end local v14  # "targetSdkVersion":I
    .end local v18  # "ephemeral":Z
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "name":Ljava/lang/String;
    .end local p3  # "profileOwner":Landroid/content/ComponentName;
    .end local p4  # "adminExtras":Landroid/os/PersistableBundle;
    .end local p5  # "flags":I
    throw v5
    :try_end_1cf
    .catchall {:try_start_1c4 .. :try_end_1cf} :catchall_1cf

    .line 9764
    .end local v0  # "re":Ljava/lang/Throwable;
    .restart local v4  # "userHandle":I
    .restart local v7  # "demo":Z
    .restart local v8  # "leaveAllSystemAppsEnabled":Z
    .restart local v9  # "user":Landroid/os/UserHandle;
    .restart local v10  # "intent":Landroid/content/Intent;
    .restart local v11  # "id":J
    .restart local v14  # "targetSdkVersion":I
    .restart local v18  # "ephemeral":Z
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "name":Ljava/lang/String;
    .restart local p3  # "profileOwner":Landroid/content/ComponentName;
    .restart local p4  # "adminExtras":Landroid/os/PersistableBundle;
    .restart local p5  # "flags":I
    :catchall_1cf
    move-exception v0

    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v11, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0

    .line 9701
    .end local v4  # "userHandle":I
    .end local v10  # "intent":Landroid/content/Intent;
    .end local v14  # "targetSdkVersion":I
    .end local v18  # "ephemeral":Z
    .restart local v6  # "ephemeral":Z
    .local v11, "callingUid":I
    .restart local v12  # "id":J
    :catchall_1d6
    move-exception v0

    move/from16 v18, v6

    .end local v6  # "ephemeral":Z
    .restart local v18  # "ephemeral":Z
    :goto_1d9
    :try_start_1d9
    iget-object v4, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v12, v13}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v7  # "demo":Z
    .end local v8  # "leaveAllSystemAppsEnabled":Z
    .end local v9  # "user":Landroid/os/UserHandle;
    .end local v18  # "ephemeral":Z
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "name":Ljava/lang/String;
    .end local p3  # "profileOwner":Landroid/content/ComponentName;
    .end local p4  # "adminExtras":Landroid/os/PersistableBundle;
    .end local p5  # "flags":I
    throw v0

    .line 9703
    .end local v11  # "callingUid":I
    .end local v12  # "id":J
    .restart local v6  # "ephemeral":Z
    .restart local v7  # "demo":Z
    .restart local v8  # "leaveAllSystemAppsEnabled":Z
    .restart local v9  # "user":Landroid/os/UserHandle;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "name":Ljava/lang/String;
    .restart local p3  # "profileOwner":Landroid/content/ComponentName;
    .restart local p4  # "adminExtras":Landroid/os/PersistableBundle;
    .restart local p5  # "flags":I
    :catchall_1df
    move-exception v0

    move/from16 v18, v6

    .end local v6  # "ephemeral":Z
    .restart local v18  # "ephemeral":Z
    :goto_1e2
    monitor-exit v10
    :try_end_1e3
    .catchall {:try_start_1d9 .. :try_end_1e3} :catchall_1e4

    throw v0

    :catchall_1e4
    move-exception v0

    goto :goto_1e2

    .line 9642
    .end local v7  # "demo":Z
    .end local v8  # "leaveAllSystemAppsEnabled":Z
    .end local v9  # "user":Landroid/os/UserHandle;
    .end local v18  # "ephemeral":Z
    :cond_1e6
    new-instance v0, Ljava/lang/SecurityException;

    const-string v4, "createAndManageUser was called from non-system user"

    invoke-direct {v0, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9637
    :cond_1ee
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "profileOwner "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " and admin "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " are not in the same package"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v0, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method deleteTransferOwnershipBundleLocked(I)V
    .registers 5
    .param p1, "userId"  # I

    .line 14107
    new-instance v0, Ljava/io/File;

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->environmentGetUserSystemDirectory(I)Ljava/io/File;

    move-result-object v1

    const-string/jumbo v2, "transfer-ownership-parameters.xml"

    invoke-direct {v0, v1, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 14109
    .local v0, "parametersFile":Ljava/io/File;
    invoke-virtual {v0}, Ljava/io/File;->delete()Z

    .line 14110
    return-void
.end method

.method protected dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .registers 12
    .param p1, "fd"  # Ljava/io/FileDescriptor;
    .param p2, "pw"  # Ljava/io/PrintWriter;
    .param p3, "args"  # [Ljava/lang/String;

    .line 8853
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v1, "DevicePolicyManager"

    invoke-static {v0, v1, p2}, Lcom/android/internal/util/DumpUtils;->checkDumpPermission(Landroid/content/Context;Ljava/lang/String;Ljava/io/PrintWriter;)Z

    move-result v0

    if-nez v0, :cond_b

    return-void

    .line 8855
    :cond_b
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 8856
    :try_start_10
    const-string v1, "Current Device Policy Manager state:"

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8858
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    const-string v2, "  "

    invoke-virtual {v1, v2, p2}, Lcom/android/server/devicepolicy/Owners;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 8859
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mDeviceAdminServiceController:Lcom/android/server/devicepolicy/DeviceAdminServiceController;

    const-string v2, "  "

    invoke-virtual {v1, v2, p2}, Lcom/android/server/devicepolicy/DeviceAdminServiceController;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 8860
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserData:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 8861
    .local v1, "userCount":I
    const/4 v2, 0x0

    .local v2, "u":I
    :goto_2a
    if-ge v2, v1, :cond_cb

    .line 8862
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserData:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v3

    .line 8863
    .local v3, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 8864
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  Enabled Device Admins (User "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v5, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserHandle:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, ", provisioningState: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v5, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserProvisioningState:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, "):"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8866
    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    .line 8867
    .local v4, "N":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_65
    if-ge v5, v4, :cond_90

    .line 8868
    iget-object v6, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v6, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 8869
    .local v6, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v6, :cond_8d

    .line 8870
    const-string v7, "    "

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v7, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v7}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v7

    invoke-virtual {v7}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 8871
    const-string v7, ":"

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8872
    const-string v7, "      "

    invoke-virtual {v6, v7, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 8867
    .end local v6  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_8d
    add-int/lit8 v5, v5, 0x1

    goto :goto_65

    .line 8875
    .end local v5  # "i":I
    :cond_90
    iget-object v5, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRemovingAdmins:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v5

    if-nez v5, :cond_b8

    .line 8876
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "    Removing Device Admins (User "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserHandle:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, "): "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRemovingAdmins:Ljava/util/ArrayList;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8880
    :cond_b8
    const-string v5, " "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8881
    const-string v5, "    mPasswordOwner="

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v5, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(I)V

    .line 8861
    .end local v3  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v4  # "N":I
    add-int/lit8 v2, v2, 0x1

    goto/16 :goto_2a

    .line 8883
    .end local v2  # "u":I
    :cond_cb
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 8884
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mConstants:Lcom/android/server/devicepolicy/DevicePolicyConstants;

    const-string v3, "  "

    invoke-virtual {v2, v3, p2}, Lcom/android/server/devicepolicy/DevicePolicyConstants;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 8885
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 8886
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mStatLogger:Lcom/android/internal/util/StatLogger;

    const-string v3, "  "

    invoke-virtual {v2, p2, v3}, Lcom/android/internal/util/StatLogger;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 8887
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 8888
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Encryption Status: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getEncryptionStatus()I

    move-result v3

    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getEncryptionStatusName(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 8889
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 8890
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mPolicyCache:Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;

    const-string v3, "  "

    invoke-virtual {v2, v3, p2}, Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 8891
    .end local v1  # "userCount":I
    monitor-exit v0

    .line 8892
    return-void

    .line 8891
    :catchall_10a
    move-exception v1

    monitor-exit v0
    :try_end_10c
    .catchall {:try_start_10 .. :try_end_10c} :catchall_10a

    throw v1
.end method

.method public enableSystemApp(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V
    .registers 16
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "packageName"  # Ljava/lang/String;

    .line 10204
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10206
    const/4 v1, -0x1

    :try_start_6
    const-string v2, "delegation-enable-system-app"

    invoke-direct {p0, p1, p2, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 10209
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCurrentUserDemo()Z

    move-result v1

    .line 10211
    .local v1, "isDemo":Z
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    .line 10212
    .local v2, "userId":I
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v3
    :try_end_19
    .catchall {:try_start_6 .. :try_end_19} :catchall_95

    move-wide v9, v3

    .line 10220
    .local v9, "id":J
    :try_start_1a
    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v3

    move v11, v3

    .line 10221
    .local v11, "parentUserId":I
    if-nez v1, :cond_32

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-direct {p0, v3, p3, v11}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSystemApp(Landroid/content/pm/IPackageManager;Ljava/lang/String;I)Z

    move-result v3

    if-eqz v3, :cond_2a

    goto :goto_32

    .line 10222
    :cond_2a
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "Only system apps can be enabled this way."

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v1  # "isDemo":Z
    .end local v2  # "userId":I
    .end local v9  # "id":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageName":Ljava/lang/String;
    throw v3

    .line 10226
    .restart local v1  # "isDemo":Z
    .restart local v2  # "userId":I
    .restart local v9  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageName":Ljava/lang/String;
    :cond_32
    :goto_32
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const/high16 v6, 0x400000

    const/4 v7, 0x1

    const/4 v8, 0x0

    move-object v4, p3

    move v5, v2

    invoke-interface/range {v3 .. v8}, Landroid/content/pm/IPackageManager;->installExistingPackageAsUser(Ljava/lang/String;IIILjava/util/List;)I

    .line 10229
    if-eqz v1, :cond_4a

    .line 10231
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const/4 v5, 0x1

    const/4 v6, 0x1

    const-string v8, "DevicePolicyManager"

    move-object v4, p3

    move v7, v2

    invoke-interface/range {v3 .. v8}, Landroid/content/pm/IPackageManager;->setApplicationEnabledSetting(Ljava/lang/String;IIILjava/lang/String;)V
    :try_end_4a
    .catch Landroid/os/RemoteException; {:try_start_1a .. :try_end_4a} :catch_52
    .catchall {:try_start_1a .. :try_end_4a} :catchall_50

    .line 10239
    .end local v11  # "parentUserId":I
    :cond_4a
    :try_start_4a
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    :goto_4c
    invoke-virtual {v3, v9, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V
    :try_end_4f
    .catchall {:try_start_4a .. :try_end_4f} :catchall_95

    .line 10240
    goto :goto_6d

    .line 10239
    :catchall_50
    move-exception v3

    goto :goto_8f

    .line 10235
    :catch_52
    move-exception v3

    .line 10237
    .local v3, "re":Landroid/os/RemoteException;
    :try_start_53
    const-string v4, "DevicePolicyManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Failed to install "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_69
    .catchall {:try_start_53 .. :try_end_69} :catchall_50

    .line 10239
    nop

    .end local v3  # "re":Landroid/os/RemoteException;
    :try_start_6a
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    goto :goto_4c

    .line 10241
    .end local v1  # "isDemo":Z
    .end local v2  # "userId":I
    .end local v9  # "id":J
    :goto_6d
    monitor-exit v0
    :try_end_6e
    .catchall {:try_start_6a .. :try_end_6e} :catchall_95

    .line 10242
    const/4 v0, 0x1

    const/4 v1, 0x0

    if-nez p1, :cond_74

    move v2, v0

    goto :goto_75

    :cond_74
    move v2, v1

    .line 10243
    .local v2, "isDelegate":Z
    :goto_75
    const/16 v3, 0x40

    .line 10244
    invoke-static {v3}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 10245
    invoke-virtual {v3, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 10246
    invoke-virtual {v3, v2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    new-array v0, v0, [Ljava/lang/String;

    aput-object p3, v0, v1

    .line 10247
    invoke-virtual {v3, v0}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10248
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10249
    return-void

    .line 10239
    .restart local v1  # "isDemo":Z
    .local v2, "userId":I
    .restart local v9  # "id":J
    :goto_8f
    :try_start_8f
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v9, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageName":Ljava/lang/String;
    throw v3

    .line 10241
    .end local v1  # "isDemo":Z
    .end local v2  # "userId":I
    .end local v9  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageName":Ljava/lang/String;
    :catchall_95
    move-exception v1

    monitor-exit v0
    :try_end_97
    .catchall {:try_start_8f .. :try_end_97} :catchall_95

    throw v1
.end method

.method public enableSystemAppWithIntent(Landroid/content/ComponentName;Ljava/lang/String;Landroid/content/Intent;)I
    .registers 26
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "intent"  # Landroid/content/Intent;

    .line 10253
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    const/4 v5, 0x0

    .line 10254
    .local v5, "numberOfAppsInstalled":I
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v6

    monitor-enter v6

    .line 10256
    const/4 v0, -0x1

    :try_start_f
    const-string v7, "delegation-enable-system-app"

    invoke-direct {v1, v2, v3, v0, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 10259
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    move v13, v0

    .line 10260
    .local v13, "userId":I
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v7
    :try_end_1f
    .catchall {:try_start_f .. :try_end_1f} :catchall_f2

    move-wide v14, v7

    .line 10263
    .local v14, "id":J
    const/16 v16, 0x0

    :try_start_22
    invoke-virtual {v1, v13}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v0

    .line 10264
    .local v0, "parentUserId":I
    iget-object v7, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    iget-object v8, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 10266
    invoke-virtual {v8}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v8

    invoke-virtual {v4, v8}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;

    move-result-object v8

    const/high16 v9, 0xc0000

    .line 10265
    invoke-interface {v7, v4, v8, v9, v0}, Landroid/content/pm/IPackageManager;->queryIntentActivities(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;

    move-result-object v7

    .line 10270
    invoke-virtual {v7}, Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;

    move-result-object v7

    move-object/from16 v17, v7

    .line 10275
    .local v17, "activitiesToEnable":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    if-eqz v17, :cond_9f

    .line 10276
    invoke-interface/range {v17 .. v17}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v18

    :goto_44
    invoke-interface/range {v18 .. v18}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_9f

    invoke-interface/range {v18 .. v18}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/pm/ResolveInfo;

    move-object v12, v7

    .line 10277
    .local v12, "info":Landroid/content/pm/ResolveInfo;
    iget-object v7, v12, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    if-eqz v7, :cond_9c

    .line 10278
    iget-object v7, v12, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v7, v7, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object v11, v7

    .line 10279
    .local v11, "packageName":Ljava/lang/String;
    iget-object v7, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-direct {v1, v7, v11, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSystemApp(Landroid/content/pm/IPackageManager;Ljava/lang/String;I)Z

    move-result v7

    if-eqz v7, :cond_7a

    .line 10280
    add-int/lit8 v5, v5, 0x1

    .line 10281
    iget-object v7, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const/high16 v10, 0x400000

    const/16 v19, 0x1

    const/16 v20, 0x0

    move-object v8, v11

    move v9, v13

    move-object/from16 v21, v11

    .end local v11  # "packageName":Ljava/lang/String;
    .local v21, "packageName":Ljava/lang/String;
    move/from16 v11, v19

    move-object/from16 v19, v12

    .end local v12  # "info":Landroid/content/pm/ResolveInfo;
    .local v19, "info":Landroid/content/pm/ResolveInfo;
    move-object/from16 v12, v20

    invoke-interface/range {v7 .. v12}, Landroid/content/pm/IPackageManager;->installExistingPackageAsUser(Ljava/lang/String;IIILjava/util/List;)I

    goto :goto_9e

    .line 10285
    .end local v19  # "info":Landroid/content/pm/ResolveInfo;
    .end local v21  # "packageName":Ljava/lang/String;
    .restart local v11  # "packageName":Ljava/lang/String;
    .restart local v12  # "info":Landroid/content/pm/ResolveInfo;
    :cond_7a
    move-object/from16 v21, v11

    move-object/from16 v19, v12

    .end local v11  # "packageName":Ljava/lang/String;
    .end local v12  # "info":Landroid/content/pm/ResolveInfo;
    .restart local v19  # "info":Landroid/content/pm/ResolveInfo;
    .restart local v21  # "packageName":Ljava/lang/String;
    const-string v7, "DevicePolicyManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Not enabling "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v9, v21

    .end local v21  # "packageName":Ljava/lang/String;
    .local v9, "packageName":Ljava/lang/String;
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " since is not a system app"

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_9b
    .catch Landroid/os/RemoteException; {:try_start_22 .. :try_end_9b} :catch_cd
    .catchall {:try_start_22 .. :try_end_9b} :catchall_cb

    goto :goto_9e

    .line 10277
    .end local v9  # "packageName":Ljava/lang/String;
    .end local v19  # "info":Landroid/content/pm/ResolveInfo;
    .restart local v12  # "info":Landroid/content/pm/ResolveInfo;
    :cond_9c
    move-object/from16 v19, v12

    .line 10289
    .end local v12  # "info":Landroid/content/pm/ResolveInfo;
    :goto_9e
    goto :goto_44

    .line 10296
    .end local v0  # "parentUserId":I
    .end local v17  # "activitiesToEnable":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_9f
    :try_start_9f
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 10297
    nop

    .line 10298
    .end local v13  # "userId":I
    .end local v14  # "id":J
    monitor-exit v6
    :try_end_a6
    .catchall {:try_start_9f .. :try_end_a6} :catchall_f2

    .line 10299
    const/4 v0, 0x1

    if-nez v2, :cond_ab

    move v6, v0

    goto :goto_ad

    :cond_ab
    move/from16 v6, v16

    .line 10300
    .local v6, "isDelegate":Z
    :goto_ad
    const/16 v7, 0x41

    .line 10301
    invoke-static {v7}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v7

    .line 10302
    invoke-virtual {v7, v3}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v7

    .line 10303
    invoke-virtual {v7, v6}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v7

    new-array v0, v0, [Ljava/lang/String;

    .line 10304
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    aput-object v8, v0, v16

    invoke-virtual {v7, v0}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10305
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10306
    return v5

    .line 10296
    .end local v6  # "isDelegate":Z
    .restart local v13  # "userId":I
    .restart local v14  # "id":J
    :catchall_cb
    move-exception v0

    goto :goto_ec

    .line 10291
    :catch_cd
    move-exception v0

    .line 10293
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_ce
    const-string v7, "DevicePolicyManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Failed to resolve intent for: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_e4
    .catchall {:try_start_ce .. :try_end_e4} :catchall_cb

    .line 10294
    nop

    .line 10296
    :try_start_e5
    iget-object v7, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v7, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v6

    .line 10294
    return v16

    .line 10296
    .end local v0  # "e":Landroid/os/RemoteException;
    :goto_ec
    iget-object v7, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v7, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v5  # "numberOfAppsInstalled":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "intent":Landroid/content/Intent;
    throw v0

    .line 10298
    .end local v13  # "userId":I
    .end local v14  # "id":J
    .restart local v5  # "numberOfAppsInstalled":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "intent":Landroid/content/Intent;
    :catchall_f2
    move-exception v0

    monitor-exit v6
    :try_end_f4
    .catchall {:try_start_e5 .. :try_end_f4} :catchall_f2

    throw v0
.end method

.method public enforceCallerCanRequestDeviceIdAttestation(Landroid/content/ComponentName;Ljava/lang/String;I)V
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "callerUid"  # I
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 5745
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    .line 5753
    .local v0, "userId":I
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasProfileOwner(I)Z

    move-result v1

    const-string v2, "delegation-cert-install"

    if-eqz v1, :cond_1f

    .line 5755
    const/4 v1, -0x1

    invoke-direct {p0, p1, p2, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 5758
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->canProfileOwnerAccessDeviceIds(I)Z

    move-result v1

    if-eqz v1, :cond_17

    .line 5759
    return-void

    .line 5761
    :cond_17
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Profile Owner is not allowed to access Device IDs."

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 5766
    :cond_1f
    const/4 v1, -0x2

    invoke-direct {p0, p1, p2, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 5768
    return-void
.end method

.method public enforceCanManageCaCerts(Landroid/content/ComponentName;Ljava/lang/String;)V
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;

    .line 5520
    if-nez p1, :cond_19

    .line 5521
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    const-string v1, "delegation-cert-install"

    invoke-direct {p0, p2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerDelegate(Ljava/lang/String;ILjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1c

    .line 5523
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v1, 0x0

    const-string v2, "android.permission.MANAGE_CA_CERTIFICATES"

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_1c

    .line 5526
    :cond_19
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 5528
    :cond_1c
    :goto_1c
    return-void
.end method

.method final ensureLocked()V
    .registers 3

    .line 581
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockDoNoUseDirectly:Ljava/lang/Object;

    invoke-static {v0}, Ljava/lang/Thread;->holdsLock(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_9

    .line 582
    return-void

    .line 584
    :cond_9
    const-string v0, "DevicePolicyManager"

    const-string v1, "Not holding DPMS lock."

    invoke-static {v0, v1}, Landroid/util/Slog;->wtfStack(Ljava/lang/String;Ljava/lang/String;)I

    .line 585
    return-void
.end method

.method public findAdmin(Landroid/content/ComponentName;IZ)Landroid/app/admin/DeviceAdminInfo;
    .registers 10
    .param p1, "adminName"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "throwForMissingPermission"  # Z

    .line 2977
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 2978
    return-object v1

    .line 2980
    :cond_6
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 2981
    const/4 v0, 0x0

    .line 2983
    .local v0, "ai":Landroid/content/pm/ActivityInfo;
    :try_start_a
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const v3, 0xc8080

    invoke-interface {v2, p1, v3, p2}, Landroid/content/pm/IPackageManager;->getReceiverInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;

    move-result-object v2
    :try_end_13
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_13} :catch_15

    move-object v0, v2

    .line 2990
    goto :goto_16

    .line 2988
    :catch_15
    move-exception v2

    .line 2991
    :goto_16
    if-eqz v0, :cond_77

    .line 2995
    iget-object v2, v0, Landroid/content/pm/ActivityInfo;->permission:Ljava/lang/String;

    const-string v3, "android.permission.BIND_DEVICE_ADMIN"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    const-string v4, "DevicePolicyManager"

    if-nez v2, :cond_51

    .line 2996
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "DeviceAdminReceiver "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " must be protected with "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 2998
    .local v2, "message":Ljava/lang/String;
    invoke-static {v4, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2999
    if-eqz p3, :cond_51

    iget-object v3, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    const/16 v5, 0x17

    if-gt v3, v5, :cond_4b

    goto :goto_51

    .line 3001
    :cond_4b
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 3006
    .end local v2  # "message":Ljava/lang/String;
    :cond_51
    :goto_51
    :try_start_51
    new-instance v2, Landroid/app/admin/DeviceAdminInfo;

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v2, v3, v0}, Landroid/app/admin/DeviceAdminInfo;-><init>(Landroid/content/Context;Landroid/content/pm/ActivityInfo;)V
    :try_end_58
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_51 .. :try_end_58} :catch_59
    .catch Ljava/io/IOException; {:try_start_51 .. :try_end_58} :catch_59

    return-object v2

    .line 3007
    :catch_59
    move-exception v2

    .line 3008
    .local v2, "e":Ljava/lang/Exception;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Bad device admin requested for user="

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, ": "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v4, v3, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3010
    return-object v1

    .line 2992
    .end local v2  # "e":Ljava/lang/Exception;
    :cond_77
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown admin: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public forceNetworkLogs()J
    .registers 7

    .line 13264
    const-string v0, "forceNetworkLogs"

    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceShell(Ljava/lang/String;)V

    .line 13265
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13266
    :try_start_a
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isNetworkLoggingEnabledInternalLocked()Z

    move-result v1

    if-eqz v1, :cond_32

    .line 13269
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    if-eqz v1, :cond_2e

    .line 13270
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1
    :try_end_1a
    .catchall {:try_start_a .. :try_end_1a} :catchall_3b

    .line 13272
    .local v1, "ident":J
    :try_start_1a
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/NetworkLogger;->forceBatchFinalization()J

    move-result-wide v3
    :try_end_20
    .catchall {:try_start_1a .. :try_end_20} :catchall_27

    .line 13274
    :try_start_20
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v0

    .line 13272
    return-wide v3

    .line 13274
    :catchall_27
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    throw v3

    .line 13277
    .end local v1  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    :cond_2e
    const-wide/16 v1, 0x0

    monitor-exit v0

    return-wide v1

    .line 13267
    :cond_32
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string/jumbo v2, "logging is not available"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    throw v1

    .line 13278
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    :catchall_3b
    move-exception v1

    monitor-exit v0
    :try_end_3d
    .catchall {:try_start_20 .. :try_end_3d} :catchall_3b

    throw v1
.end method

.method public forceRemoveActiveAdmin(Landroid/content/ComponentName;I)V
    .registers 9
    .param p1, "adminReceiver"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 4008
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 4009
    return-void

    .line 4011
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4012
    const-string v0, "forceRemoveActiveAdmin"

    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceShell(Ljava/lang/String;)V

    .line 4013
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 4015
    .local v0, "ident":J
    :try_start_15
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2
    :try_end_1a
    .catchall {:try_start_15 .. :try_end_1a} :catchall_86

    .line 4016
    :try_start_1a
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdminTestOnlyLocked(Landroid/content/ComponentName;I)Z

    move-result v3

    if-eqz v3, :cond_64

    .line 4022
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v3

    if-eqz v3, :cond_2d

    .line 4023
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    invoke-direct {p0, v3, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearDeviceOwnerLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;I)V

    .line 4025
    :cond_2d
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProfileOwner(Landroid/content/ComponentName;I)Z

    move-result v3

    if-eqz v3, :cond_3b

    .line 4026
    const/4 v3, 0x0

    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 4028
    .local v3, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    invoke-virtual {p0, v3, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->clearProfileOwnerLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;I)V

    .line 4030
    .end local v3  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_3b
    monitor-exit v2
    :try_end_3c
    .catchall {:try_start_1a .. :try_end_3c} :catchall_83

    .line 4032
    :try_start_3c
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeAdminArtifacts(Landroid/content/ComponentName;I)V

    .line 4033
    const-string v2, "DevicePolicyManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Admin "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " removed from user "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5d
    .catchall {:try_start_3c .. :try_end_5d} :catchall_86

    .line 4035
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 4036
    nop

    .line 4037
    return-void

    .line 4017
    :cond_64
    :try_start_64
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempt to remove non-test admin "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "adminReceiver":Landroid/content/ComponentName;
    .end local p2  # "userHandle":I
    throw v3

    .line 4030
    .restart local v0  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "adminReceiver":Landroid/content/ComponentName;
    .restart local p2  # "userHandle":I
    :catchall_83
    move-exception v3

    monitor-exit v2
    :try_end_85
    .catchall {:try_start_64 .. :try_end_85} :catchall_83

    .end local v0  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "adminReceiver":Landroid/content/ComponentName;
    .end local p2  # "userHandle":I
    :try_start_85
    throw v3
    :try_end_86
    .catchall {:try_start_85 .. :try_end_86} :catchall_86

    .line 4035
    .restart local v0  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "adminReceiver":Landroid/content/ComponentName;
    .restart local p2  # "userHandle":I
    :catchall_86
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method public forceSecurityLogs()J
    .registers 3

    .line 12761
    const-string v0, "forceSecurityLogs"

    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceShell(Ljava/lang/String;)V

    .line 12762
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogGetLoggingEnabledProperty()Z

    move-result v0

    if-eqz v0, :cond_14

    .line 12765
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSecurityLogMonitor:Lcom/android/server/devicepolicy/SecurityLogMonitor;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/SecurityLogMonitor;->forceLogs()J

    move-result-wide v0

    return-wide v0

    .line 12763
    :cond_14
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string/jumbo v1, "logging is not available"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public forceUpdateUserSetupComplete()V
    .registers 6

    .line 12969
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageProfileAndDeviceOwners()V

    .line 12970
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCallerSystemUserHandle()V

    .line 12972
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->isBuildDebuggable()Z

    move-result v0

    if-nez v0, :cond_f

    .line 12973
    return-void

    .line 12975
    :cond_f
    const/4 v0, 0x0

    .line 12976
    .local v0, "userId":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const/4 v2, 0x0

    const-string/jumbo v3, "user_setup_complete"

    invoke-virtual {v1, v3, v2, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsSecureGetIntForUser(Ljava/lang/String;II)I

    move-result v1

    if-eqz v1, :cond_1e

    const/4 v1, 0x1

    goto :goto_1f

    :cond_1e
    move v1, v2

    .line 12978
    .local v1, "isUserCompleted":Z
    :goto_1f
    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v3

    .line 12979
    .local v3, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iput-boolean v1, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserSetupComplete:Z

    .line 12980
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v4

    monitor-enter v4

    .line 12981
    :try_start_2a
    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 12982
    monitor-exit v4

    .line 12983
    return-void

    .line 12982
    :catchall_2f
    move-exception v2

    monitor-exit v4
    :try_end_31
    .catchall {:try_start_2a .. :try_end_31} :catchall_2f

    throw v2
.end method

.method public generateKeyPair(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Landroid/security/keystore/ParcelableKeyGenParameterSpec;ILandroid/security/keymaster/KeymasterCertificateChain;)Z
    .registers 30
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "algorithm"  # Ljava/lang/String;
    .param p4, "parcelableKeySpec"  # Landroid/security/keystore/ParcelableKeyGenParameterSpec;
    .param p5, "idAttestationFlags"  # I
    .param p6, "attestationChain"  # Landroid/security/keymaster/KeymasterCertificateChain;

    .line 5810
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    invoke-static/range {p5 .. p5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->translateIdAttestationFlags(I)[I

    move-result-object v5

    .line 5811
    .local v5, "attestationUtilsFlags":[I
    const/4 v6, 0x0

    if-eqz v5, :cond_11

    const/4 v7, 0x1

    goto :goto_12

    :cond_11
    move v7, v6

    .line 5812
    .local v7, "deviceIdAttestationRequired":Z
    :goto_12
    iget-object v8, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v8

    .line 5814
    .local v8, "callingUid":I
    const/4 v9, -0x1

    if-eqz v7, :cond_22

    array-length v10, v5

    if-lez v10, :cond_22

    .line 5815
    invoke-virtual {v1, v2, v3, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCallerCanRequestDeviceIdAttestation(Landroid/content/ComponentName;Ljava/lang/String;I)V

    goto :goto_27

    .line 5817
    :cond_22
    const-string v10, "delegation-cert-install"

    invoke-direct {v1, v2, v3, v9, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 5820
    :goto_27
    invoke-virtual/range {p4 .. p4}, Landroid/security/keystore/ParcelableKeyGenParameterSpec;->getSpec()Landroid/security/keystore/KeyGenParameterSpec;

    move-result-object v10

    .line 5821
    .local v10, "keySpec":Landroid/security/keystore/KeyGenParameterSpec;
    invoke-virtual {v10}, Landroid/security/keystore/KeyGenParameterSpec;->getKeystoreAlias()Ljava/lang/String;

    move-result-object v11

    .line 5822
    .local v11, "alias":Ljava/lang/String;
    invoke-static {v11}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v12

    if-nez v12, :cond_1da

    .line 5827
    invoke-virtual {v10}, Landroid/security/keystore/KeyGenParameterSpec;->getUid()I

    move-result v12

    const-string v13, "DevicePolicyManager"

    if-eq v12, v9, :cond_43

    .line 5828
    const-string v0, "Only the caller can be granted access to the generated keypair."

    invoke-static {v13, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5829
    return v6

    .line 5832
    :cond_43
    if-eqz v7, :cond_54

    invoke-virtual {v10}, Landroid/security/keystore/KeyGenParameterSpec;->getAttestationChallenge()[B

    move-result-object v9

    if-eqz v9, :cond_4c

    goto :goto_54

    .line 5833
    :cond_4c
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v6, "Requested Device ID attestation but challenge is empty."

    invoke-direct {v0, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5837
    :cond_54
    :goto_54
    iget-object v9, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v9

    .line 5838
    .local v9, "userHandle":Landroid/os/UserHandle;
    iget-object v12, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v14

    .line 5840
    .local v14, "id":J
    :try_start_60
    iget-object v12, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 5841
    invoke-static {v12, v9}, Landroid/security/KeyChain;->bindAsUser(Landroid/content/Context;Landroid/os/UserHandle;)Landroid/security/KeyChain$KeyChainConnection;

    move-result-object v12
    :try_end_66
    .catch Landroid/os/RemoteException; {:try_start_60 .. :try_end_66} :catch_1bd
    .catch Ljava/lang/InterruptedException; {:try_start_60 .. :try_end_66} :catch_1a8
    .catchall {:try_start_60 .. :try_end_66} :catchall_19f

    .line 5840
    .local v12, "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    nop

    .line 5842
    :try_start_67
    invoke-virtual {v12}, Landroid/security/KeyChain$KeyChainConnection;->getService()Landroid/security/IKeyChainService;

    move-result-object v16

    move-object/from16 v17, v16

    .line 5846
    .local v17, "keyChain":Landroid/security/IKeyChainService;
    new-instance v6, Landroid/security/keystore/KeyGenParameterSpec$Builder;

    invoke-direct {v6, v10}, Landroid/security/keystore/KeyGenParameterSpec$Builder;-><init>(Landroid/security/keystore/KeyGenParameterSpec;)V

    .line 5848
    const/4 v0, 0x0

    invoke-virtual {v6, v0}, Landroid/security/keystore/KeyGenParameterSpec$Builder;->setAttestationChallenge([B)Landroid/security/keystore/KeyGenParameterSpec$Builder;

    move-result-object v6

    .line 5849
    invoke-virtual {v6}, Landroid/security/keystore/KeyGenParameterSpec$Builder;->build()Landroid/security/keystore/KeyGenParameterSpec;

    move-result-object v6

    .line 5851
    .local v6, "noAttestationSpec":Landroid/security/keystore/KeyGenParameterSpec;
    new-instance v0, Landroid/security/keystore/ParcelableKeyGenParameterSpec;

    invoke-direct {v0, v6}, Landroid/security/keystore/ParcelableKeyGenParameterSpec;-><init>(Landroid/security/keystore/KeyGenParameterSpec;)V

    move-object/from16 v19, v6

    move-object/from16 v6, v17

    .end local v17  # "keyChain":Landroid/security/IKeyChainService;
    .local v6, "keyChain":Landroid/security/IKeyChainService;
    .local v19, "noAttestationSpec":Landroid/security/keystore/KeyGenParameterSpec;
    invoke-interface {v6, v4, v0}, Landroid/security/IKeyChainService;->generateKeyPair(Ljava/lang/String;Landroid/security/keystore/ParcelableKeyGenParameterSpec;)I

    move-result v0
    :try_end_88
    .catchall {:try_start_67 .. :try_end_88} :catchall_189

    .line 5853
    .local v0, "generationResult":I
    if-eqz v0, :cond_e5

    .line 5854
    move/from16 v17, v7

    .end local v7  # "deviceIdAttestationRequired":Z
    .local v17, "deviceIdAttestationRequired":Z
    :try_start_8c
    const-string v7, "KeyChain failed to generate a keypair, error %d."
    :try_end_8e
    .catchall {:try_start_8c .. :try_end_8e} :catchall_db

    move-object/from16 v20, v9

    const/4 v9, 0x1

    .end local v9  # "userHandle":Landroid/os/UserHandle;
    .local v20, "userHandle":Landroid/os/UserHandle;
    :try_start_91
    new-array v4, v9, [Ljava/lang/Object;

    .line 5855
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    const/16 v16, 0x0

    aput-object v9, v4, v16

    .line 5854
    invoke-static {v7, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-static {v13, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_a2
    .catchall {:try_start_91 .. :try_end_a2} :catchall_182

    .line 5856
    const/4 v4, 0x6

    if-eq v0, v4, :cond_c3

    .line 5862
    nop

    .line 5898
    const/4 v4, 0x0

    :try_start_a7
    invoke-static {v4, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->$closeResource(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V
    :try_end_aa
    .catch Landroid/os/RemoteException; {:try_start_a7 .. :try_end_aa} :catch_bd
    .catch Ljava/lang/InterruptedException; {:try_start_a7 .. :try_end_aa} :catch_b7
    .catchall {:try_start_a7 .. :try_end_aa} :catchall_b1

    .line 5905
    iget-object v4, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5862
    const/4 v4, 0x0

    return v4

    .line 5905
    .end local v0  # "generationResult":I
    .end local v6  # "keyChain":Landroid/security/IKeyChainService;
    .end local v12  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .end local v19  # "noAttestationSpec":Landroid/security/keystore/KeyGenParameterSpec;
    :catchall_b1
    move-exception v0

    move-object/from16 v4, p6

    move-object v9, v3

    goto/16 :goto_1d4

    .line 5901
    :catch_b7
    move-exception v0

    move-object/from16 v4, p6

    move-object v9, v3

    goto/16 :goto_1b0

    .line 5899
    :catch_bd
    move-exception v0

    move-object/from16 v4, p6

    move-object v9, v3

    goto/16 :goto_1c5

    .line 5858
    .restart local v0  # "generationResult":I
    .restart local v6  # "keyChain":Landroid/security/IKeyChainService;
    .restart local v12  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .restart local v19  # "noAttestationSpec":Landroid/security/keystore/KeyGenParameterSpec;
    :cond_c3
    :try_start_c3
    new-instance v4, Landroid/os/ServiceSpecificException;

    const-string v7, "KeyChain error: %d"

    const/4 v9, 0x1

    new-array v3, v9, [Ljava/lang/Object;

    .line 5860
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    const/16 v16, 0x0

    aput-object v9, v3, v16

    invoke-static {v7, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    const/4 v7, 0x1

    invoke-direct {v4, v7, v3}, Landroid/os/ServiceSpecificException;-><init>(ILjava/lang/String;)V

    .end local v5  # "attestationUtilsFlags":[I
    .end local v8  # "callingUid":I
    .end local v10  # "keySpec":Landroid/security/keystore/KeyGenParameterSpec;
    .end local v11  # "alias":Ljava/lang/String;
    .end local v12  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .end local v14  # "id":J
    .end local v17  # "deviceIdAttestationRequired":Z
    .end local v20  # "userHandle":Landroid/os/UserHandle;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "algorithm":Ljava/lang/String;
    .end local p4  # "parcelableKeySpec":Landroid/security/keystore/ParcelableKeyGenParameterSpec;
    .end local p5  # "idAttestationFlags":I
    .end local p6  # "attestationChain":Landroid/security/keymaster/KeymasterCertificateChain;
    throw v4

    .line 5840
    .end local v0  # "generationResult":I
    .end local v6  # "keyChain":Landroid/security/IKeyChainService;
    .end local v19  # "noAttestationSpec":Landroid/security/keystore/KeyGenParameterSpec;
    .restart local v5  # "attestationUtilsFlags":[I
    .restart local v8  # "callingUid":I
    .restart local v9  # "userHandle":Landroid/os/UserHandle;
    .restart local v10  # "keySpec":Landroid/security/keystore/KeyGenParameterSpec;
    .restart local v11  # "alias":Ljava/lang/String;
    .restart local v12  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .restart local v14  # "id":J
    .restart local v17  # "deviceIdAttestationRequired":Z
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "algorithm":Ljava/lang/String;
    .restart local p4  # "parcelableKeySpec":Landroid/security/keystore/ParcelableKeyGenParameterSpec;
    .restart local p5  # "idAttestationFlags":I
    .restart local p6  # "attestationChain":Landroid/security/keymaster/KeymasterCertificateChain;
    :catchall_db
    move-exception v0

    move-object/from16 v20, v9

    move-object/from16 v9, p2

    move-object/from16 v4, p6

    move-object v2, v0

    .end local v9  # "userHandle":Landroid/os/UserHandle;
    .restart local v20  # "userHandle":Landroid/os/UserHandle;
    goto/16 :goto_192

    .line 5871
    .end local v17  # "deviceIdAttestationRequired":Z
    .end local v20  # "userHandle":Landroid/os/UserHandle;
    .restart local v0  # "generationResult":I
    .restart local v6  # "keyChain":Landroid/security/IKeyChainService;
    .restart local v7  # "deviceIdAttestationRequired":Z
    .restart local v9  # "userHandle":Landroid/os/UserHandle;
    .restart local v19  # "noAttestationSpec":Landroid/security/keystore/KeyGenParameterSpec;
    :cond_e5
    move/from16 v17, v7

    move-object/from16 v20, v9

    .end local v7  # "deviceIdAttestationRequired":Z
    .end local v9  # "userHandle":Landroid/os/UserHandle;
    .restart local v17  # "deviceIdAttestationRequired":Z
    .restart local v20  # "userHandle":Landroid/os/UserHandle;
    const/4 v3, 0x1

    invoke-interface {v6, v8, v11, v3}, Landroid/security/IKeyChainService;->setGrant(ILjava/lang/String;Z)V

    .line 5873
    invoke-virtual {v10}, Landroid/security/keystore/KeyGenParameterSpec;->getAttestationChallenge()[B

    move-result-object v3
    :try_end_f1
    .catchall {:try_start_c3 .. :try_end_f1} :catchall_182

    .line 5874
    .local v3, "attestationChallenge":[B
    if-eqz v3, :cond_145

    .line 5875
    move-object/from16 v4, p6

    :try_start_f5
    invoke-interface {v6, v11, v3, v5, v4}, Landroid/security/IKeyChainService;->attestKey(Ljava/lang/String;[B[ILandroid/security/keymaster/KeymasterCertificateChain;)I

    move-result v7

    .line 5877
    .local v7, "attestationResult":I
    if-eqz v7, :cond_13e

    .line 5878
    const-string v9, "Attestation for %s failed (rc=%d), deleting key."

    move/from16 v21, v0

    .end local v0  # "generationResult":I
    .local v21, "generationResult":I
    const/4 v0, 0x2

    new-array v0, v0, [Ljava/lang/Object;

    const/16 v16, 0x0

    aput-object v11, v0, v16

    .line 5880
    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v22

    const/16 v18, 0x1

    aput-object v22, v0, v18

    .line 5878
    invoke-static {v9, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v13, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5881
    invoke-interface {v6, v11}, Landroid/security/IKeyChainService;->removeKeyPair(Ljava/lang/String;)Z
    :try_end_118
    .catchall {:try_start_f5 .. :try_end_118} :catchall_141

    .line 5882
    const/4 v0, 0x3

    if-eq v7, v0, :cond_136

    .line 5886
    nop

    .line 5898
    const/4 v0, 0x0

    :try_start_11d
    invoke-static {v0, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->$closeResource(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V
    :try_end_120
    .catch Landroid/os/RemoteException; {:try_start_11d .. :try_end_120} :catch_131
    .catch Ljava/lang/InterruptedException; {:try_start_11d .. :try_end_120} :catch_12c
    .catchall {:try_start_11d .. :try_end_120} :catchall_127

    .line 5905
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5886
    const/4 v9, 0x0

    return v9

    .line 5905
    .end local v3  # "attestationChallenge":[B
    .end local v6  # "keyChain":Landroid/security/IKeyChainService;
    .end local v7  # "attestationResult":I
    .end local v12  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .end local v19  # "noAttestationSpec":Landroid/security/keystore/KeyGenParameterSpec;
    .end local v21  # "generationResult":I
    :catchall_127
    move-exception v0

    move-object/from16 v9, p2

    goto/16 :goto_1d4

    .line 5901
    :catch_12c
    move-exception v0

    move-object/from16 v9, p2

    goto/16 :goto_1b0

    .line 5899
    :catch_131
    move-exception v0

    move-object/from16 v9, p2

    goto/16 :goto_1c5

    .line 5883
    .restart local v3  # "attestationChallenge":[B
    .restart local v6  # "keyChain":Landroid/security/IKeyChainService;
    .restart local v7  # "attestationResult":I
    .restart local v12  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .restart local v19  # "noAttestationSpec":Landroid/security/keystore/KeyGenParameterSpec;
    .restart local v21  # "generationResult":I
    :cond_136
    :try_start_136
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v9, "Device does not support Device ID attestation."

    invoke-direct {v0, v9}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    .end local v5  # "attestationUtilsFlags":[I
    .end local v8  # "callingUid":I
    .end local v10  # "keySpec":Landroid/security/keystore/KeyGenParameterSpec;
    .end local v11  # "alias":Ljava/lang/String;
    .end local v12  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .end local v14  # "id":J
    .end local v17  # "deviceIdAttestationRequired":Z
    .end local v20  # "userHandle":Landroid/os/UserHandle;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "algorithm":Ljava/lang/String;
    .end local p4  # "parcelableKeySpec":Landroid/security/keystore/ParcelableKeyGenParameterSpec;
    .end local p5  # "idAttestationFlags":I
    .end local p6  # "attestationChain":Landroid/security/keymaster/KeymasterCertificateChain;
    throw v0

    .line 5877
    .end local v21  # "generationResult":I
    .restart local v0  # "generationResult":I
    .restart local v5  # "attestationUtilsFlags":[I
    .restart local v8  # "callingUid":I
    .restart local v10  # "keySpec":Landroid/security/keystore/KeyGenParameterSpec;
    .restart local v11  # "alias":Ljava/lang/String;
    .restart local v12  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .restart local v14  # "id":J
    .restart local v17  # "deviceIdAttestationRequired":Z
    .restart local v20  # "userHandle":Landroid/os/UserHandle;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "algorithm":Ljava/lang/String;
    .restart local p4  # "parcelableKeySpec":Landroid/security/keystore/ParcelableKeyGenParameterSpec;
    .restart local p5  # "idAttestationFlags":I
    .restart local p6  # "attestationChain":Landroid/security/keymaster/KeymasterCertificateChain;
    :cond_13e
    move/from16 v21, v0

    .end local v0  # "generationResult":I
    .restart local v21  # "generationResult":I
    goto :goto_149

    .line 5840
    .end local v3  # "attestationChallenge":[B
    .end local v6  # "keyChain":Landroid/security/IKeyChainService;
    .end local v7  # "attestationResult":I
    .end local v19  # "noAttestationSpec":Landroid/security/keystore/KeyGenParameterSpec;
    .end local v21  # "generationResult":I
    :catchall_141
    move-exception v0

    move-object/from16 v9, p2

    goto :goto_187

    .line 5874
    .restart local v0  # "generationResult":I
    .restart local v3  # "attestationChallenge":[B
    .restart local v6  # "keyChain":Landroid/security/IKeyChainService;
    .restart local v19  # "noAttestationSpec":Landroid/security/keystore/KeyGenParameterSpec;
    :cond_145
    move-object/from16 v4, p6

    move/from16 v21, v0

    .line 5889
    .end local v0  # "generationResult":I
    .restart local v21  # "generationResult":I
    :goto_149
    if-nez v2, :cond_14d

    const/4 v0, 0x1

    goto :goto_14e

    :cond_14d
    const/4 v0, 0x0

    .line 5890
    .local v0, "isDelegate":Z
    :goto_14e
    const/16 v7, 0x3b

    .line 5891
    invoke-static {v7}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v7
    :try_end_154
    .catchall {:try_start_136 .. :try_end_154} :catchall_141

    .line 5892
    move-object/from16 v9, p2

    :try_start_156
    invoke-virtual {v7, v9}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v7

    .line 5893
    invoke-virtual {v7, v0}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v7

    .line 5894
    move/from16 v2, p5

    invoke-virtual {v7, v2}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v7

    move/from16 v22, v0

    const/4 v0, 0x1

    .end local v0  # "isDelegate":Z
    .local v22, "isDelegate":Z
    new-array v2, v0, [Ljava/lang/String;

    const/16 v16, 0x0

    aput-object p3, v2, v16

    .line 5895
    invoke-virtual {v7, v2}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 5896
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V
    :try_end_174
    .catchall {:try_start_156 .. :try_end_174} :catchall_180

    .line 5897
    nop

    .line 5898
    const/4 v0, 0x0

    :try_start_176
    invoke-static {v0, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->$closeResource(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V
    :try_end_179
    .catch Landroid/os/RemoteException; {:try_start_176 .. :try_end_179} :catch_19d
    .catch Ljava/lang/InterruptedException; {:try_start_176 .. :try_end_179} :catch_19b
    .catchall {:try_start_176 .. :try_end_179} :catchall_1d3

    .line 5905
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5897
    const/4 v0, 0x1

    return v0

    .line 5840
    .end local v3  # "attestationChallenge":[B
    .end local v6  # "keyChain":Landroid/security/IKeyChainService;
    .end local v19  # "noAttestationSpec":Landroid/security/keystore/KeyGenParameterSpec;
    .end local v21  # "generationResult":I
    .end local v22  # "isDelegate":Z
    :catchall_180
    move-exception v0

    goto :goto_187

    :catchall_182
    move-exception v0

    move-object/from16 v9, p2

    move-object/from16 v4, p6

    :goto_187
    move-object v2, v0

    goto :goto_192

    .end local v17  # "deviceIdAttestationRequired":Z
    .end local v20  # "userHandle":Landroid/os/UserHandle;
    .local v7, "deviceIdAttestationRequired":Z
    .restart local v9  # "userHandle":Landroid/os/UserHandle;
    :catchall_189
    move-exception v0

    move-object/from16 v4, p6

    move/from16 v17, v7

    move-object/from16 v20, v9

    move-object v9, v3

    move-object v2, v0

    .end local v5  # "attestationUtilsFlags":[I
    .end local v7  # "deviceIdAttestationRequired":Z
    .end local v8  # "callingUid":I
    .end local v9  # "userHandle":Landroid/os/UserHandle;
    .end local v10  # "keySpec":Landroid/security/keystore/KeyGenParameterSpec;
    .end local v11  # "alias":Ljava/lang/String;
    .end local v12  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .end local v14  # "id":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "algorithm":Ljava/lang/String;
    .end local p4  # "parcelableKeySpec":Landroid/security/keystore/ParcelableKeyGenParameterSpec;
    .end local p5  # "idAttestationFlags":I
    .end local p6  # "attestationChain":Landroid/security/keymaster/KeymasterCertificateChain;
    :goto_192
    :try_start_192
    throw v2
    :try_end_193
    .catchall {:try_start_192 .. :try_end_193} :catchall_193

    .line 5898
    .restart local v5  # "attestationUtilsFlags":[I
    .restart local v8  # "callingUid":I
    .restart local v10  # "keySpec":Landroid/security/keystore/KeyGenParameterSpec;
    .restart local v11  # "alias":Ljava/lang/String;
    .restart local v12  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .restart local v14  # "id":J
    .restart local v17  # "deviceIdAttestationRequired":Z
    .restart local v20  # "userHandle":Landroid/os/UserHandle;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "algorithm":Ljava/lang/String;
    .restart local p4  # "parcelableKeySpec":Landroid/security/keystore/ParcelableKeyGenParameterSpec;
    .restart local p5  # "idAttestationFlags":I
    .restart local p6  # "attestationChain":Landroid/security/keymaster/KeymasterCertificateChain;
    :catchall_193
    move-exception v0

    move-object v3, v0

    if-eqz v12, :cond_19a

    :try_start_197
    invoke-static {v2, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->$closeResource(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V

    .end local v5  # "attestationUtilsFlags":[I
    .end local v8  # "callingUid":I
    .end local v10  # "keySpec":Landroid/security/keystore/KeyGenParameterSpec;
    .end local v11  # "alias":Ljava/lang/String;
    .end local v14  # "id":J
    .end local v17  # "deviceIdAttestationRequired":Z
    .end local v20  # "userHandle":Landroid/os/UserHandle;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "algorithm":Ljava/lang/String;
    .end local p4  # "parcelableKeySpec":Landroid/security/keystore/ParcelableKeyGenParameterSpec;
    .end local p5  # "idAttestationFlags":I
    .end local p6  # "attestationChain":Landroid/security/keymaster/KeymasterCertificateChain;
    :cond_19a
    throw v3
    :try_end_19b
    .catch Landroid/os/RemoteException; {:try_start_197 .. :try_end_19b} :catch_19d
    .catch Ljava/lang/InterruptedException; {:try_start_197 .. :try_end_19b} :catch_19b
    .catchall {:try_start_197 .. :try_end_19b} :catchall_1d3

    .line 5901
    .end local v12  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .restart local v5  # "attestationUtilsFlags":[I
    .restart local v8  # "callingUid":I
    .restart local v10  # "keySpec":Landroid/security/keystore/KeyGenParameterSpec;
    .restart local v11  # "alias":Ljava/lang/String;
    .restart local v14  # "id":J
    .restart local v17  # "deviceIdAttestationRequired":Z
    .restart local v20  # "userHandle":Landroid/os/UserHandle;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "algorithm":Ljava/lang/String;
    .restart local p4  # "parcelableKeySpec":Landroid/security/keystore/ParcelableKeyGenParameterSpec;
    .restart local p5  # "idAttestationFlags":I
    .restart local p6  # "attestationChain":Landroid/security/keymaster/KeymasterCertificateChain;
    :catch_19b
    move-exception v0

    goto :goto_1b0

    .line 5899
    :catch_19d
    move-exception v0

    goto :goto_1c5

    .line 5905
    .end local v17  # "deviceIdAttestationRequired":Z
    .end local v20  # "userHandle":Landroid/os/UserHandle;
    .restart local v7  # "deviceIdAttestationRequired":Z
    .restart local v9  # "userHandle":Landroid/os/UserHandle;
    :catchall_19f
    move-exception v0

    move-object/from16 v4, p6

    move/from16 v17, v7

    move-object/from16 v20, v9

    move-object v9, v3

    .end local v7  # "deviceIdAttestationRequired":Z
    .end local v9  # "userHandle":Landroid/os/UserHandle;
    .restart local v17  # "deviceIdAttestationRequired":Z
    .restart local v20  # "userHandle":Landroid/os/UserHandle;
    goto :goto_1d4

    .line 5901
    .end local v17  # "deviceIdAttestationRequired":Z
    .end local v20  # "userHandle":Landroid/os/UserHandle;
    .restart local v7  # "deviceIdAttestationRequired":Z
    .restart local v9  # "userHandle":Landroid/os/UserHandle;
    :catch_1a8
    move-exception v0

    move-object/from16 v4, p6

    move/from16 v17, v7

    move-object/from16 v20, v9

    move-object v9, v3

    .line 5902
    .end local v7  # "deviceIdAttestationRequired":Z
    .end local v9  # "userHandle":Landroid/os/UserHandle;
    .local v0, "e":Ljava/lang/InterruptedException;
    .restart local v17  # "deviceIdAttestationRequired":Z
    .restart local v20  # "userHandle":Landroid/os/UserHandle;
    :goto_1b0
    :try_start_1b0
    const-string v2, "Interrupted while generating keypair"

    invoke-static {v13, v2, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5903
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/Thread;->interrupt()V

    .line 5905
    .end local v0  # "e":Ljava/lang/InterruptedException;
    goto :goto_1cb

    .line 5899
    .end local v17  # "deviceIdAttestationRequired":Z
    .end local v20  # "userHandle":Landroid/os/UserHandle;
    .restart local v7  # "deviceIdAttestationRequired":Z
    .restart local v9  # "userHandle":Landroid/os/UserHandle;
    :catch_1bd
    move-exception v0

    move-object/from16 v4, p6

    move/from16 v17, v7

    move-object/from16 v20, v9

    move-object v9, v3

    .line 5900
    .end local v7  # "deviceIdAttestationRequired":Z
    .end local v9  # "userHandle":Landroid/os/UserHandle;
    .local v0, "e":Landroid/os/RemoteException;
    .restart local v17  # "deviceIdAttestationRequired":Z
    .restart local v20  # "userHandle":Landroid/os/UserHandle;
    :goto_1c5
    const-string v2, "KeyChain error while generating a keypair"

    invoke-static {v13, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_1ca
    .catchall {:try_start_1b0 .. :try_end_1ca} :catchall_1d3

    .line 5905
    nop

    .end local v0  # "e":Landroid/os/RemoteException;
    :goto_1cb
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5906
    nop

    .line 5907
    const/4 v2, 0x0

    return v2

    .line 5905
    :catchall_1d3
    move-exception v0

    :goto_1d4
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0

    .line 5823
    .end local v14  # "id":J
    .end local v17  # "deviceIdAttestationRequired":Z
    .end local v20  # "userHandle":Landroid/os/UserHandle;
    .restart local v7  # "deviceIdAttestationRequired":Z
    :cond_1da
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v2, "Empty alias provided."

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method protected getAcceptedCaCertificates(Landroid/os/UserHandle;)Ljava/util/Set;
    .registers 5
    .param p1, "userHandle"  # Landroid/os/UserHandle;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/os/UserHandle;",
            ")",
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 3765
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_9

    .line 3766
    invoke-static {}, Ljava/util/Collections;->emptySet()Ljava/util/Set;

    move-result-object v0

    return-object v0

    .line 3768
    :cond_9
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 3769
    :try_start_e
    invoke-virtual {p1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v1

    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 3770
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAcceptedCaCertificates:Landroid/util/ArraySet;

    monitor-exit v0

    return-object v2

    .line 3771
    .end local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :catchall_1a
    move-exception v1

    monitor-exit v0
    :try_end_1c
    .catchall {:try_start_e .. :try_end_1c} :catchall_1a

    throw v1
.end method

.method public getAccountTypesWithManagementDisabled()[Ljava/lang/String;
    .registers 2

    .line 10386
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getAccountTypesWithManagementDisabledAsUser(I)[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getAccountTypesWithManagementDisabledAsUser(I)[Ljava/lang/String;
    .registers 9
    .param p1, "userId"  # I

    .line 10391
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 10392
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_9

    .line 10393
    const/4 v0, 0x0

    return-object v0

    .line 10395
    :cond_9
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10396
    :try_start_e
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 10397
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 10398
    .local v2, "N":I
    new-instance v3, Landroid/util/ArraySet;

    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    .line 10399
    .local v3, "resultSet":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_1e
    if-ge v4, v2, :cond_31

    .line 10400
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 10401
    .local v5, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->accountTypesWithManagementDisabled:Ljava/util/Set;

    invoke-virtual {v3, v6}, Landroid/util/ArraySet;->addAll(Ljava/util/Collection;)Z

    .line 10399
    nop

    .end local v5  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    add-int/lit8 v4, v4, 0x1

    goto :goto_1e

    .line 10403
    .end local v4  # "i":I
    :cond_31
    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v4

    new-array v4, v4, [Ljava/lang/String;

    invoke-virtual {v3, v4}, Landroid/util/ArraySet;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v4

    check-cast v4, [Ljava/lang/String;

    monitor-exit v0

    return-object v4

    .line 10404
    .end local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v2  # "N":I
    .end local v3  # "resultSet":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    :catchall_3f
    move-exception v1

    monitor-exit v0
    :try_end_41
    .catchall {:try_start_e .. :try_end_41} :catchall_3f

    throw v1
.end method

.method getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .registers 4
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "reqPolicy"  # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 2699
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminOrCheckPermissionForCallerLocked(Landroid/content/ComponentName;ILjava/lang/String;)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    return-object v0
.end method

.method getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "reqPolicy"  # I
    .param p3, "parent"  # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 2758
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminOrCheckPermissionForCallerLocked(Landroid/content/ComponentName;IZLjava/lang/String;)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    return-object v0
.end method

.method getActiveAdminOrCheckPermissionForCallerLocked(Landroid/content/ComponentName;ILjava/lang/String;)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .registers 14
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "reqPolicy"  # I
    .param p3, "permission"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 2715
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureLocked()V

    .line 2716
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    .line 2718
    .local v0, "callingUid":I
    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminWithPolicyForUidLocked(Landroid/content/ComponentName;II)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 2719
    .local v1, "result":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v1, :cond_10

    .line 2720
    return-object v1

    .line 2721
    :cond_10
    if-eqz p3, :cond_1c

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 2722
    invoke-virtual {v2, p3}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-nez v2, :cond_1c

    .line 2724
    const/4 v2, 0x0

    return-object v2

    .line 2727
    :cond_1c
    if-eqz p1, :cond_ec

    .line 2728
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 2729
    .local v2, "userId":I
    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v3

    .line 2730
    .local v3, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v4, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 2731
    .local v4, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v5, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v5}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    invoke-virtual {p0, v5, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v5

    .line 2732
    .local v5, "isDeviceOwner":Z
    iget-object v6, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v6}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v6

    invoke-virtual {p0, v6, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProfileOwner(Landroid/content/ComponentName;I)Z

    move-result v6

    .line 2734
    .local v6, "isProfileOwner":Z
    const/4 v7, -0x2

    const-string v8, "Admin "

    if-eq p2, v7, :cond_cc

    .line 2738
    const/4 v7, -0x1

    if-eq p2, v7, :cond_ac

    .line 2742
    sget-object v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DA_DISALLOWED_POLICIES:Ljava/util/Set;

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    invoke-interface {v7, v9}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_83

    if-nez v5, :cond_83

    if-nez v6, :cond_83

    .line 2743
    new-instance v7, Ljava/lang/SecurityException;

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v8}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v8

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v8, " is not a device owner or profile owner, so may not use policy: "

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    .line 2745
    invoke-virtual {v8, p2}, Landroid/app/admin/DeviceAdminInfo;->getTagForPolicy(I)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-direct {v7, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 2747
    :cond_83
    new-instance v7, Ljava/lang/SecurityException;

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v8}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v8

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v8, " did not specify uses-policy for: "

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    .line 2749
    invoke-virtual {v8, p2}, Landroid/app/admin/DeviceAdminInfo;->getTagForPolicy(I)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-direct {v7, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 2739
    :cond_ac
    new-instance v7, Ljava/lang/SecurityException;

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v8}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v8

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v8, " does not own the profile"

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-direct {v7, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 2735
    :cond_cc
    new-instance v7, Ljava/lang/SecurityException;

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v8}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v8

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v8, " does not own the device"

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-direct {v7, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 2751
    .end local v2  # "userId":I
    .end local v3  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v4  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v5  # "isDeviceOwner":Z
    .end local v6  # "isProfileOwner":Z
    :cond_ec
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "No active admin owned by uid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " for policy #"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method getActiveAdminOrCheckPermissionForCallerLocked(Landroid/content/ComponentName;IZLjava/lang/String;)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "reqPolicy"  # I
    .param p3, "parent"  # Z
    .param p4, "permission"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 2775
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureLocked()V

    .line 2776
    if-eqz p3, :cond_10

    .line 2777
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    const-string v1, "call APIs on the parent profile"

    invoke-direct {p0, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManagedProfile(ILjava/lang/String;)V

    .line 2780
    :cond_10
    invoke-virtual {p0, p1, p2, p4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminOrCheckPermissionForCallerLocked(Landroid/content/ComponentName;ILjava/lang/String;)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 2782
    .local v0, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz p3, :cond_1b

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getParentActiveAdmin()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    goto :goto_1c

    :cond_1b
    move-object v1, v0

    :goto_1c
    return-object v1
.end method

.method getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 2675
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureLocked()V

    .line 2676
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    iget-object v0, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 2677
    .local v0, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v0, :cond_36

    .line 2678
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    iget-object v2, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v2}, Landroid/app/admin/DeviceAdminInfo;->getActivityInfo()Landroid/content/pm/ActivityInfo;

    move-result-object v2

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_36

    .line 2679
    invoke-virtual {p1}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v1

    iget-object v2, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v2}, Landroid/app/admin/DeviceAdminInfo;->getActivityInfo()Landroid/content/pm/ActivityInfo;

    move-result-object v2

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_36

    .line 2680
    return-object v0

    .line 2682
    :cond_36
    const/4 v1, 0x0

    return-object v1
.end method

.method getActiveAdminUncheckedLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 2686
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureLocked()V

    .line 2687
    if-eqz p3, :cond_a

    .line 2688
    const-string v0, "call APIs on the parent profile"

    invoke-direct {p0, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManagedProfile(ILjava/lang/String;)V

    .line 2690
    :cond_a
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 2691
    .local v0, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v0, :cond_16

    if-eqz p3, :cond_16

    .line 2692
    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getParentActiveAdmin()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 2694
    :cond_16
    return-object v0
.end method

.method public getActiveAdmins(I)Ljava/util/List;
    .registers 8
    .param p1, "userHandle"  # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/List<",
            "Landroid/content/ComponentName;",
            ">;"
        }
    .end annotation

    .line 3969
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_7

    .line 3970
    sget-object v0, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    return-object v0

    .line 3973
    :cond_7
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 3974
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 3975
    :try_start_f
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 3976
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 3977
    .local v2, "N":I
    if-gtz v2, :cond_1e

    .line 3978
    const/4 v3, 0x0

    monitor-exit v0

    return-object v3

    .line 3980
    :cond_1e
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 3981
    .local v3, "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_24
    if-ge v4, v2, :cond_3a

    .line 3982
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    iget-object v5, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v5}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3981
    add-int/lit8 v4, v4, 0x1

    goto :goto_24

    .line 3984
    .end local v4  # "i":I
    :cond_3a
    monitor-exit v0

    return-object v3

    .line 3985
    .end local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v2  # "N":I
    .end local v3  # "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    :catchall_3c
    move-exception v1

    monitor-exit v0
    :try_end_3e
    .catchall {:try_start_f .. :try_end_3e} :catchall_3c

    throw v1
.end method

.method public getAffiliationIds(Landroid/content/ComponentName;)Ljava/util/List;
    .registers 5
    .param p1, "admin"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            ")",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 12581
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_9

    .line 12582
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v0

    return-object v0

    .line 12585
    :cond_9
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12586
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12587
    const/4 v1, -0x1

    :try_start_12
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 12588
    new-instance v1, Ljava/util/ArrayList;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 12589
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    iget-object v2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAffiliationIds:Ljava/util/Set;

    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    monitor-exit v0

    .line 12588
    return-object v1

    .line 12590
    :catchall_28
    move-exception v1

    monitor-exit v0
    :try_end_2a
    .catchall {:try_start_12 .. :try_end_2a} :catchall_28

    throw v1
.end method

.method public getAlwaysOnVpnLockdownWhitelist(Landroid/content/ComponentName;)Ljava/util/List;
    .registers 7
    .param p1, "admin"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            ")",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 6483
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 6485
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 6486
    .local v0, "userId":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 6488
    .local v1, "token":J
    :try_start_f
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getConnectivityManager()Landroid/net/ConnectivityManager;

    move-result-object v3

    invoke-virtual {v3, v0}, Landroid/net/ConnectivityManager;->getVpnLockdownWhitelist(I)Ljava/util/List;

    move-result-object v3
    :try_end_19
    .catchall {:try_start_f .. :try_end_19} :catchall_1f

    .line 6490
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 6488
    return-object v3

    .line 6490
    :catchall_1f
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method public getAlwaysOnVpnPackage(Landroid/content/ComponentName;)Ljava/lang/String;
    .registers 7
    .param p1, "admin"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 6456
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 6458
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 6459
    .local v0, "userId":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 6461
    .local v1, "token":J
    :try_start_f
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getConnectivityManager()Landroid/net/ConnectivityManager;

    move-result-object v3

    invoke-virtual {v3, v0}, Landroid/net/ConnectivityManager;->getAlwaysOnVpnPackageForUser(I)Ljava/lang/String;

    move-result-object v3
    :try_end_19
    .catchall {:try_start_f .. :try_end_19} :catchall_1f

    .line 6463
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 6461
    return-object v3

    .line 6463
    :catchall_1f
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method public getApplicationRestrictions(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)Landroid/os/Bundle;
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "packageName"  # Ljava/lang/String;

    .line 9968
    const/4 v0, -0x1

    const-string v1, "delegation-app-restrictions"

    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 9971
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v0

    .line 9972
    .local v0, "userHandle":Landroid/os/UserHandle;
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 9974
    .local v1, "id":J
    :try_start_12
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v3, p3, v0}, Landroid/os/UserManager;->getApplicationRestrictions(Ljava/lang/String;Landroid/os/UserHandle;)Landroid/os/Bundle;

    move-result-object v3

    .line 9977
    .local v3, "bundle":Landroid/os/Bundle;
    if-eqz v3, :cond_1c

    move-object v4, v3

    goto :goto_1e

    :cond_1c
    sget-object v4, Landroid/os/Bundle;->EMPTY:Landroid/os/Bundle;
    :try_end_1e
    .catchall {:try_start_12 .. :try_end_1e} :catchall_24

    .line 9979
    :goto_1e
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9977
    return-object v4

    .line 9979
    .end local v3  # "bundle":Landroid/os/Bundle;
    :catchall_24
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method public getApplicationRestrictionsManagingPackage(Landroid/content/ComponentName;)Ljava/lang/String;
    .registers 4
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 8980
    const-string v0, "delegation-app-restrictions"

    invoke-virtual {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDelegatePackages(Landroid/content/ComponentName;Ljava/lang/String;)Ljava/util/List;

    move-result-object v0

    .line 8982
    .local v0, "delegatePackages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v1

    if-lez v1, :cond_14

    const/4 v1, 0x0

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    goto :goto_15

    :cond_14
    const/4 v1, 0x0

    :goto_15
    return-object v1
.end method

.method public getAutoTimeRequired()Z
    .registers 9

    .line 7274
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 7275
    return v1

    .line 7277
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7278
    :try_start_b
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 7279
    .local v2, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    const/4 v3, 0x1

    if-eqz v2, :cond_18

    iget-boolean v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->requireAutoTime:Z

    if-eqz v4, :cond_18

    .line 7281
    monitor-exit v0

    return v3

    .line 7285
    :cond_18
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerKeys()Ljava/util/Set;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_22
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_3f

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Integer;

    .line 7286
    .local v5, "userId":Ljava/lang/Integer;
    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    move-result v6

    invoke-virtual {p0, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v6

    .line 7287
    .local v6, "profileOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v6, :cond_3e

    iget-boolean v7, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->requireAutoTime:Z

    if-eqz v7, :cond_3e

    .line 7288
    monitor-exit v0

    return v3

    .line 7290
    .end local v5  # "userId":Ljava/lang/Integer;
    .end local v6  # "profileOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_3e
    goto :goto_22

    .line 7292
    :cond_3f
    monitor-exit v0

    return v1

    .line 7293
    .end local v2  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_41
    move-exception v1

    monitor-exit v0
    :try_end_43
    .catchall {:try_start_b .. :try_end_43} :catchall_41

    throw v1
.end method

.method public getBindDeviceAdminTargetUsers(Landroid/content/ComponentName;)Ljava/util/List;
    .registers 11
    .param p1, "admin"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            ")",
            "Ljava/util/List<",
            "Landroid/os/UserHandle;",
            ">;"
        }
    .end annotation

    .line 13071
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_9

    .line 13072
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v0

    return-object v0

    .line 13074
    :cond_9
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13076
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13077
    const/4 v1, -0x1

    :try_start_12
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 13079
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v1

    .line 13080
    .local v1, "callingUserId":I
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2
    :try_end_21
    .catchall {:try_start_12 .. :try_end_21} :catchall_77

    .line 13082
    .local v2, "callingIdentity":J
    :try_start_21
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    .line 13083
    .local v4, "targetUsers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/UserHandle;>;"
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v5

    if-nez v5, :cond_40

    .line 13085
    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->canUserBindToDeviceOwnerLocked(I)Z

    move-result v5

    if-eqz v5, :cond_68

    .line 13086
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v5}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v5

    invoke-static {v5}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_68

    .line 13090
    :cond_40
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    const/4 v6, 0x1

    invoke-virtual {v5, v6}, Landroid/os/UserManager;->getUsers(Z)Ljava/util/List;

    move-result-object v5

    .line 13091
    .local v5, "userInfos":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_48
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v7

    if-ge v6, v7, :cond_68

    .line 13092
    invoke-interface {v5, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/pm/UserInfo;

    iget v7, v7, Landroid/content/pm/UserInfo;->id:I

    .line 13093
    .local v7, "userId":I
    if-eq v7, v1, :cond_65

    invoke-direct {p0, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->canUserBindToDeviceOwnerLocked(I)Z

    move-result v8

    if-eqz v8, :cond_65

    .line 13094
    invoke-static {v7}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v8

    invoke-virtual {v4, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_65
    .catchall {:try_start_21 .. :try_end_65} :catchall_70

    .line 13091
    .end local v7  # "userId":I
    :cond_65
    add-int/lit8 v6, v6, 0x1

    goto :goto_48

    .line 13099
    .end local v5  # "userInfos":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    .end local v6  # "i":I
    :cond_68
    :goto_68
    nop

    .line 13101
    :try_start_69
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v0

    .line 13099
    return-object v4

    .line 13101
    .end local v4  # "targetUsers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/UserHandle;>;"
    :catchall_70
    move-exception v4

    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    throw v4

    .line 13103
    .end local v1  # "callingUserId":I
    .end local v2  # "callingIdentity":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    :catchall_77
    move-exception v1

    monitor-exit v0
    :try_end_79
    .catchall {:try_start_69 .. :try_end_79} :catchall_77

    throw v1
.end method

.method public getBluetoothContactSharingDisabled(Landroid/content/ComponentName;)Z
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 10630
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 10631
    const/4 v0, 0x0

    return v0

    .line 10633
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10634
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10635
    const/4 v1, -0x1

    :try_start_11
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 10637
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableBluetoothContactSharing:Z

    monitor-exit v0

    return v2

    .line 10638
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_19
    move-exception v1

    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_11 .. :try_end_1b} :catchall_19

    throw v1
.end method

.method public getBluetoothContactSharingDisabledForUser(I)Z
    .registers 5
    .param p1, "userId"  # I

    .line 10646
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10647
    :try_start_5
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 10648
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v1, :cond_e

    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableBluetoothContactSharing:Z

    goto :goto_f

    :cond_e
    const/4 v2, 0x0

    :goto_f
    monitor-exit v0

    return v2

    .line 10649
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_11
    move-exception v1

    monitor-exit v0
    :try_end_13
    .catchall {:try_start_5 .. :try_end_13} :catchall_11

    throw v1
.end method

.method public getCameraDisabled(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 7625
    const/4 v0, 0x1

    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCameraDisabled(Landroid/content/ComponentName;IZ)Z

    move-result v0

    return v0
.end method

.method public getCertInstallerPackage(Landroid/content/ComponentName;)Ljava/lang/String;
    .registers 4
    .param p1, "who"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 6401
    const-string v0, "delegation-cert-install"

    invoke-virtual {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDelegatePackages(Landroid/content/ComponentName;Ljava/lang/String;)Ljava/util/List;

    move-result-object v0

    .line 6402
    .local v0, "delegatePackages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v1

    if-lez v1, :cond_14

    const/4 v1, 0x0

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    goto :goto_15

    :cond_14
    const/4 v1, 0x0

    :goto_15
    return-object v1
.end method

.method public getCrossProfileCalendarPackages(Landroid/content/ComponentName;)Ljava/util/List;
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            ")",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 14266
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_9

    .line 14267
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v0

    return-object v0

    .line 14269
    :cond_9
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14271
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 14272
    const/4 v1, -0x1

    :try_start_14
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 14274
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->mCrossProfileCalendarPackages:Ljava/util/List;

    monitor-exit v0

    return-object v2

    .line 14275
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_1c
    move-exception v1

    monitor-exit v0
    :try_end_1e
    .catchall {:try_start_14 .. :try_end_1e} :catchall_1c

    throw v1
.end method

.method public getCrossProfileCalendarPackagesForUser(I)Ljava/util/List;
    .registers 5
    .param p1, "userHandle"  # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 14305
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_9

    .line 14306
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v0

    return-object v0

    .line 14308
    :cond_9
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCrossUsersPermission(I)V

    .line 14309
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 14310
    :try_start_11
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 14311
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v1, :cond_1b

    .line 14312
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->mCrossProfileCalendarPackages:Ljava/util/List;

    monitor-exit v0

    return-object v2

    .line 14314
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_1b
    monitor-exit v0
    :try_end_1c
    .catchall {:try_start_11 .. :try_end_1c} :catchall_21

    .line 14315
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v0

    return-object v0

    .line 14314
    :catchall_21
    move-exception v1

    :try_start_22
    monitor-exit v0
    :try_end_23
    .catchall {:try_start_22 .. :try_end_23} :catchall_21

    throw v1
.end method

.method public getCrossProfileCallerIdDisabled(Landroid/content/ComponentName;)Z
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 10483
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 10484
    const/4 v0, 0x0

    return v0

    .line 10486
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10487
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10488
    const/4 v1, -0x1

    :try_start_11
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 10490
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCallerId:Z

    monitor-exit v0

    return v2

    .line 10491
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_19
    move-exception v1

    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_11 .. :try_end_1b} :catchall_19

    throw v1
.end method

.method public getCrossProfileCallerIdDisabledForUser(I)Z
    .registers 5
    .param p1, "userId"  # I

    .line 10496
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCrossUsersPermission(I)V

    .line 10497
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10498
    :try_start_8
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 10499
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v1, :cond_11

    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCallerId:Z

    goto :goto_12

    :cond_11
    const/4 v2, 0x0

    :goto_12
    monitor-exit v0

    return v2

    .line 10500
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_14
    move-exception v1

    monitor-exit v0
    :try_end_16
    .catchall {:try_start_8 .. :try_end_16} :catchall_14

    throw v1
.end method

.method public getCrossProfileContactsSearchDisabled(Landroid/content/ComponentName;)Z
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 10526
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 10527
    const/4 v0, 0x0

    return v0

    .line 10529
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10530
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10531
    const/4 v1, -0x1

    :try_start_11
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 10533
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableContactsSearch:Z

    monitor-exit v0

    return v2

    .line 10534
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_19
    move-exception v1

    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_11 .. :try_end_1b} :catchall_19

    throw v1
.end method

.method public getCrossProfileContactsSearchDisabledForUser(I)Z
    .registers 5
    .param p1, "userId"  # I

    .line 10539
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCrossUsersPermission(I)V

    .line 10540
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10541
    :try_start_8
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 10542
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v1, :cond_11

    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableContactsSearch:Z

    goto :goto_12

    :cond_11
    const/4 v2, 0x0

    :goto_12
    monitor-exit v0

    return v2

    .line 10543
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_14
    move-exception v1

    monitor-exit v0
    :try_end_16
    .catchall {:try_start_8 .. :try_end_16} :catchall_14

    throw v1
.end method

.method public getCrossProfileWidgetProviders(Landroid/content/ComponentName;)Ljava/util/List;
    .registers 6
    .param p1, "admin"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            ")",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 4478
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 4479
    const/4 v1, -0x1

    :try_start_6
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 4481
    .local v1, "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->crossProfileWidgetProviders:Ljava/util/List;

    if-eqz v2, :cond_2c

    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->crossProfileWidgetProviders:Ljava/util/List;

    .line 4482
    invoke-interface {v2}, Ljava/util/List;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_17

    goto :goto_2c

    .line 4485
    :cond_17
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderIsCallingUidMyUid()Z

    move-result v2

    if-eqz v2, :cond_28

    .line 4486
    new-instance v2, Ljava/util/ArrayList;

    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->crossProfileWidgetProviders:Ljava/util/List;

    invoke-direct {v2, v3}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    monitor-exit v0

    return-object v2

    .line 4488
    :cond_28
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->crossProfileWidgetProviders:Ljava/util/List;

    monitor-exit v0

    return-object v2

    .line 4483
    :cond_2c
    :goto_2c
    const/4 v2, 0x0

    monitor-exit v0

    return-object v2

    .line 4490
    .end local v1  # "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_2f
    move-exception v1

    monitor-exit v0
    :try_end_31
    .catchall {:try_start_6 .. :try_end_31} :catchall_2f

    throw v1
.end method

.method public getCurrentFailedPasswordAttempts(IZ)I
    .registers 6
    .param p1, "userHandle"  # I
    .param p2, "parent"  # Z

    .line 4867
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_a

    .line 4868
    const/4 v0, 0x0

    return v0

    .line 4870
    :cond_a
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 4871
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 4872
    :try_start_12
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v1

    if-nez v1, :cond_27

    .line 4874
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v2, "android.permission.ACCESS_KEYGUARD_SECURE_STORAGE"

    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_27

    .line 4876
    const/4 v1, 0x0

    const/4 v2, 0x1

    invoke-virtual {p0, v1, v2, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4881
    :cond_27
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCredentialOwner(IZ)I

    move-result v1

    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserDataUnchecked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 4883
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mFailedPasswordAttempts:I

    monitor-exit v0

    return v2

    .line 4884
    .end local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :catchall_33
    move-exception v1

    monitor-exit v0
    :try_end_35
    .catchall {:try_start_12 .. :try_end_35} :catchall_33

    throw v1
.end method

.method public getDelegatePackages(Landroid/content/ComponentName;Ljava/lang/String;)Ljava/util/List;
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "scope"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 6190
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 6191
    const-string v0, "Scope is null"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 6192
    sget-object v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DELEGATIONS:[Ljava/lang/String;

    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-interface {v0, p2}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_2e

    .line 6197
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 6198
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 6200
    const/4 v2, -0x1

    :try_start_22
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 6201
    invoke-direct {p0, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDelegatePackagesInternalLocked(Ljava/lang/String;I)Ljava/util/List;

    move-result-object v2

    monitor-exit v1

    return-object v2

    .line 6202
    :catchall_2b
    move-exception v2

    monitor-exit v1
    :try_end_2d
    .catchall {:try_start_22 .. :try_end_2d} :catchall_2b

    throw v2

    .line 6193
    .end local v0  # "userId":I
    :cond_2e
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unexpected delegation scope: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getDelegatedScopes(Landroid/content/ComponentName;Ljava/lang/String;)Ljava/util/List;
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "delegatePackage"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 6150
    const-string v0, "Delegate package is null"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 6153
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    .line 6154
    .local v0, "callingUid":I
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    .line 6155
    .local v1, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 6157
    if-eqz p1, :cond_1d

    .line 6158
    const/4 v3, -0x1

    :try_start_17
    invoke-virtual {p0, p1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :try_end_1a
    .catchall {:try_start_17 .. :try_end_1a} :catchall_1b

    goto :goto_2d

    .line 6176
    :catchall_1b
    move-exception v3

    goto :goto_60

    .line 6161
    :cond_1d
    const/4 v3, 0x0

    .line 6163
    .local v3, "uid":I
    :try_start_1e
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    .line 6164
    invoke-virtual {v4, p2, v1}, Landroid/content/pm/PackageManager;->getPackageUidAsUser(Ljava/lang/String;I)I

    move-result v4
    :try_end_28
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_1e .. :try_end_28} :catch_2a
    .catchall {:try_start_1e .. :try_end_28} :catchall_1b

    move v3, v4

    .line 6166
    goto :goto_2b

    .line 6165
    :catch_2a
    move-exception v4

    .line 6167
    :goto_2b
    if-ne v3, v0, :cond_41

    .line 6172
    .end local v3  # "uid":I
    :goto_2d
    :try_start_2d
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v3

    .line 6174
    .local v3, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v4, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/List;

    .line 6175
    .local v4, "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    if-nez v4, :cond_3e

    sget-object v5, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    goto :goto_3f

    :cond_3e
    move-object v5, v4

    :goto_3f
    monitor-exit v2

    return-object v5

    .line 6168
    .end local v4  # "scopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .local v3, "uid":I
    :cond_41
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Caller with uid "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, " is not "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUid":I
    .end local v1  # "userId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "delegatePackage":Ljava/lang/String;
    throw v4

    .line 6176
    .end local v3  # "uid":I
    .restart local v0  # "callingUid":I
    .restart local v1  # "userId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "delegatePackage":Ljava/lang/String;
    :goto_60
    monitor-exit v2
    :try_end_61
    .catchall {:try_start_2d .. :try_end_61} :catchall_1b

    throw v3
.end method

.method getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .registers 8
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 7965
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureLocked()V

    .line 7966
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v0

    .line 7967
    .local v0, "component":Landroid/content/ComponentName;
    const/4 v1, 0x0

    if-nez v0, :cond_d

    .line 7968
    return-object v1

    .line 7971
    :cond_d
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 7972
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 7973
    .local v3, "n":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_1e
    if-ge v4, v3, :cond_38

    .line 7974
    iget-object v5, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 7975
    .local v5, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v6}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v6

    invoke-virtual {v0, v6}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_35

    .line 7976
    return-object v5

    .line 7973
    .end local v5  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_35
    add-int/lit8 v4, v4, 0x1

    goto :goto_1e

    .line 7979
    .end local v4  # "i":I
    :cond_38
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Active admin for device owner not found. component="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "DevicePolicyManager"

    invoke-static {v5, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 7980
    return-object v1
.end method

.method public getDeviceOwnerComponent(Z)Landroid/content/ComponentName;
    .registers 6
    .param p1, "callingUserOnly"  # Z

    .line 7912
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 7913
    return-object v1

    .line 7915
    :cond_6
    if-nez p1, :cond_b

    .line 7916
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 7918
    :cond_b
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7919
    :try_start_10
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v2

    if-nez v2, :cond_1a

    .line 7920
    monitor-exit v0

    return-object v1

    .line 7922
    :cond_1a
    if-eqz p1, :cond_2c

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 7923
    invoke-virtual {v3}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v3

    if-eq v2, v3, :cond_2c

    .line 7924
    monitor-exit v0

    return-object v1

    .line 7926
    :cond_2c
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v1

    monitor-exit v0

    return-object v1

    .line 7927
    :catchall_34
    move-exception v1

    monitor-exit v0
    :try_end_36
    .catchall {:try_start_10 .. :try_end_36} :catchall_34

    throw v1
.end method

.method public getDeviceOwnerLockScreenInfo()Ljava/lang/CharSequence;
    .registers 2

    .line 8215
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->getDeviceOwnerInfo()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getDeviceOwnerName()Ljava/lang/String;
    .registers 4

    .line 7947
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 7948
    return-object v1

    .line 7950
    :cond_6
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 7951
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7952
    :try_start_e
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v2

    if-nez v2, :cond_18

    .line 7953
    monitor-exit v0

    return-object v1

    .line 7957
    :cond_18
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerPackageName()Ljava/lang/String;

    move-result-object v1

    .line 7958
    .local v1, "deviceOwnerPackage":Ljava/lang/String;
    const/4 v2, 0x0

    invoke-direct {p0, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getApplicationLabel(Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v2

    monitor-exit v0

    return-object v2

    .line 7959
    .end local v1  # "deviceOwnerPackage":Ljava/lang/String;
    :catchall_25
    move-exception v1

    monitor-exit v0
    :try_end_27
    .catchall {:try_start_e .. :try_end_27} :catchall_25

    throw v1
.end method

.method public getDeviceOwnerOrganizationName()Ljava/lang/CharSequence;
    .registers 4

    .line 12368
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 12369
    return-object v1

    .line 12371
    :cond_6
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwnerOrManageUsers()V

    .line 12372
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12373
    :try_start_e
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 12374
    .local v2, "deviceOwnerAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-nez v2, :cond_15

    goto :goto_17

    :cond_15
    iget-object v1, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->organizationName:Ljava/lang/String;

    :goto_17
    monitor-exit v0

    return-object v1

    .line 12375
    .end local v2  # "deviceOwnerAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_19
    move-exception v1

    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_e .. :try_end_1b} :catchall_19

    throw v1
.end method

.method public getDeviceOwnerUserId()I
    .registers 4

    .line 7932
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/16 v1, -0x2710

    if-nez v0, :cond_7

    .line 7933
    return v1

    .line 7935
    :cond_7
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 7936
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7937
    :try_start_f
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v2

    if-eqz v2, :cond_1d

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v1

    :cond_1d
    monitor-exit v0

    return v1

    .line 7938
    :catchall_1f
    move-exception v1

    monitor-exit v0
    :try_end_21
    .catchall {:try_start_f .. :try_end_21} :catchall_1f

    throw v1
.end method

.method public getDisallowedSystemApps(Landroid/content/ComponentName;ILjava/lang/String;)Ljava/util/List;
    .registers 6
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "userId"  # I
    .param p3, "provisioningAction"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 13662
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageProfileAndDeviceOwners()V

    .line 13663
    new-instance v0, Ljava/util/ArrayList;

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOverlayPackagesProvider:Lcom/android/server/devicepolicy/OverlayPackagesProvider;

    .line 13664
    invoke-virtual {v1, p1, p2, p3}, Lcom/android/server/devicepolicy/OverlayPackagesProvider;->getNonRequiredApps(Landroid/content/ComponentName;ILjava/lang/String;)Ljava/util/Set;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 13663
    return-object v0
.end method

.method public getDoNotAskCredentialsOnBoot()Z
    .registers 4

    .line 5251
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.QUERY_DO_NOT_ASK_CREDENTIALS_ON_BOOT"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5253
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 5254
    const/4 v1, 0x0

    :try_start_e
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 5255
    .local v1, "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->doNotAskCredentialsOnBoot:Z

    monitor-exit v0

    return v2

    .line 5256
    .end local v1  # "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :catchall_16
    move-exception v1

    monitor-exit v0
    :try_end_18
    .catchall {:try_start_e .. :try_end_18} :catchall_16

    throw v1
.end method

.method public bridge synthetic getEndUserSessionMessage(Landroid/content/ComponentName;)Ljava/lang/CharSequence;
    .registers 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 296
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getEndUserSessionMessage(Landroid/content/ComponentName;)Ljava/lang/String;

    move-result-object p1

    return-object p1
.end method

.method public getEndUserSessionMessage(Landroid/content/ComponentName;)Ljava/lang/String;
    .registers 5
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 13871
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 13872
    const/4 v0, 0x0

    return-object v0

    .line 13874
    :cond_6
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13876
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13877
    const/4 v1, -0x2

    .line 13878
    :try_start_f
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 13879
    .local v1, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->endUserSessionMessage:Ljava/lang/String;

    monitor-exit v0

    return-object v2

    .line 13880
    .end local v1  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_17
    move-exception v1

    monitor-exit v0
    :try_end_19
    .catchall {:try_start_f .. :try_end_19} :catchall_17

    throw v1
.end method

.method public getForceEphemeralUsers(Landroid/content/ComponentName;)Z
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 7330
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 7331
    const/4 v0, 0x0

    return v0

    .line 7333
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7334
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7335
    const/4 v1, -0x2

    .line 7336
    :try_start_11
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 7337
    .local v1, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->forceEphemeralUsers:Z

    monitor-exit v0

    return v2

    .line 7338
    .end local v1  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_19
    move-exception v1

    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_11 .. :try_end_1b} :catchall_19

    throw v1
.end method

.method public getGlobalPrivateDnsHost(Landroid/content/ComponentName;)Ljava/lang/String;
    .registers 4
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 14203
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 14204
    const/4 v0, 0x0

    return-object v0

    .line 14207
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14208
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 14210
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string/jumbo v1, "private_dns_specifier"

    invoke-virtual {v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalGetString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getGlobalPrivateDnsMode(Landroid/content/ComponentName;)I
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 14179
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 14180
    return v1

    .line 14183
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14184
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 14185
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string/jumbo v2, "private_dns_mode"

    invoke-virtual {v0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalGetString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 14186
    .local v0, "currentMode":Ljava/lang/String;
    if-nez v0, :cond_1c

    .line 14187
    const-string/jumbo v0, "off"

    .line 14189
    :cond_1c
    const/4 v2, -0x1

    invoke-virtual {v0}, Ljava/lang/String;->hashCode()I

    move-result v3

    const v4, -0x2023fbf7

    const/4 v5, 0x2

    const/4 v6, 0x1

    if-eq v3, v4, :cond_48

    const v4, -0x11dea3cd

    if-eq v3, v4, :cond_3e

    const v4, 0x1ad6f

    if-eq v3, v4, :cond_33

    :cond_32
    goto :goto_52

    :cond_33
    const-string/jumbo v3, "off"

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_32

    move v2, v1

    goto :goto_52

    :cond_3e
    const-string v3, "hostname"

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_32

    move v2, v5

    goto :goto_52

    :cond_48
    const-string/jumbo v3, "opportunistic"

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_32

    move v2, v6

    :goto_52
    if-eqz v2, :cond_5c

    if-eq v2, v6, :cond_5b

    if-eq v2, v5, :cond_59

    .line 14198
    return v1

    .line 14195
    :cond_59
    const/4 v1, 0x3

    return v1

    .line 14193
    :cond_5b
    return v5

    .line 14191
    :cond_5c
    return v6
.end method

.method public getGlobalProxyAdmin(I)Landroid/content/ComponentName;
    .registers 9
    .param p1, "userHandle"  # I

    .line 6934
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 6935
    return-object v1

    .line 6937
    :cond_6
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 6938
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 6939
    const/4 v2, 0x0

    :try_start_f
    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 6942
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 6943
    .local v3, "N":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_1a
    if-ge v4, v3, :cond_33

    .line 6944
    iget-object v5, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 6945
    .local v5, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->specifiesGlobalProxy:Z

    if-eqz v6, :cond_30

    .line 6948
    iget-object v1, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v1}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    monitor-exit v0

    return-object v1

    .line 6943
    .end local v5  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_30
    add-int/lit8 v4, v4, 0x1

    goto :goto_1a

    .line 6951
    .end local v2  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v3  # "N":I
    .end local v4  # "i":I
    :cond_33
    monitor-exit v0

    .line 6953
    return-object v1

    .line 6951
    :catchall_35
    move-exception v1

    monitor-exit v0
    :try_end_37
    .catchall {:try_start_f .. :try_end_37} :catchall_35

    throw v1
.end method

.method public getKeepUninstalledPackages(Landroid/content/ComponentName;Ljava/lang/String;)Ljava/util/List;
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 7779
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 7780
    const/4 v0, 0x0

    return-object v0

    .line 7783
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7785
    const/4 v1, -0x2

    :try_start_c
    const-string v2, "delegation-keep-uninstalled-packages"

    invoke-direct {p0, p1, p2, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 7787
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getKeepUninstalledPackagesLocked()Ljava/util/List;

    move-result-object v1

    monitor-exit v0

    return-object v1

    .line 7788
    :catchall_17
    move-exception v1

    monitor-exit v0
    :try_end_19
    .catchall {:try_start_c .. :try_end_19} :catchall_17

    throw v1
.end method

.method public getKeyguardDisabledFeatures(Landroid/content/ComponentName;IZ)I
    .registers 16
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 7701
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 7702
    return v1

    .line 7704
    :cond_6
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 7705
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2

    .line 7707
    .local v2, "ident":J
    :try_start_f
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0
    :try_end_14
    .catchall {:try_start_f .. :try_end_14} :catchall_75

    .line 7708
    if-eqz p1, :cond_27

    .line 7709
    :try_start_16
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v4

    .line 7710
    .local v4, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v4, :cond_1e

    iget v1, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disabledKeyguardFeatures:I

    :cond_1e
    monitor-exit v0
    :try_end_1f
    .catchall {:try_start_16 .. :try_end_1f} :catchall_25

    .line 7743
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 7710
    return v1

    .line 7741
    .end local v4  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_25
    move-exception v1

    goto :goto_73

    .line 7714
    :cond_27
    if-nez p3, :cond_36

    :try_start_29
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v4

    if-eqz v4, :cond_36

    .line 7717
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserDataUnchecked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    iget-object v4, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    .local v4, "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    goto :goto_3a

    .line 7720
    .end local v4  # "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    :cond_36
    invoke-direct {p0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v4

    .line 7723
    .restart local v4  # "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    :goto_3a
    const/4 v5, 0x0

    .line 7724
    .local v5, "which":I
    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v6

    .line 7725
    .local v6, "N":I
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_40
    if-ge v7, v6, :cond_6c

    .line 7726
    invoke-interface {v4, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 7727
    .local v8, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    invoke-virtual {v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v9

    invoke-virtual {v9}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v9

    .line 7728
    .local v9, "userId":I
    if-nez p3, :cond_56

    if-ne v9, p2, :cond_56

    const/4 v10, 0x1

    goto :goto_57

    :cond_56
    move v10, v1

    .line 7729
    .local v10, "isRequestedUser":Z
    :goto_57
    if-nez v10, :cond_66

    invoke-direct {p0, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v11

    if-nez v11, :cond_60

    goto :goto_66

    .line 7736
    :cond_60
    iget v11, v8, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disabledKeyguardFeatures:I

    and-int/lit16 v11, v11, 0x1b0

    or-int/2addr v5, v11

    goto :goto_69

    .line 7732
    :cond_66
    :goto_66
    iget v11, v8, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disabledKeyguardFeatures:I

    or-int/2addr v5, v11

    .line 7725
    .end local v8  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v9  # "userId":I
    .end local v10  # "isRequestedUser":Z
    :goto_69
    add-int/lit8 v7, v7, 0x1

    goto :goto_40

    .line 7740
    .end local v7  # "i":I
    :cond_6c
    monitor-exit v0
    :try_end_6d
    .catchall {:try_start_29 .. :try_end_6d} :catchall_25

    .line 7743
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 7740
    return v5

    .line 7741
    .end local v4  # "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    .end local v5  # "which":I
    .end local v6  # "N":I
    :goto_73
    :try_start_73
    monitor-exit v0
    :try_end_74
    .catchall {:try_start_73 .. :try_end_74} :catchall_25

    .end local v2  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "userHandle":I
    .end local p3  # "parent":Z
    :try_start_74
    throw v1
    :try_end_75
    .catchall {:try_start_74 .. :try_end_75} :catchall_75

    .line 7743
    .restart local v2  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "userHandle":I
    .restart local p3  # "parent":Z
    :catchall_75
    move-exception v0

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0
.end method

.method public getLastBugReportRequestTime()J
    .registers 3

    .line 13471
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwnerOrManageUsers()V

    .line 13472
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    iget-wide v0, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastBugReportRequestTime:J

    return-wide v0
.end method

.method public getLastNetworkLogRetrievalTime()J
    .registers 3

    .line 13477
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwnerOrManageUsers()V

    .line 13478
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    iget-wide v0, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastNetworkLogsRetrievalTime:J

    return-wide v0
.end method

.method public getLastSecurityLogRetrievalTime()J
    .registers 3

    .line 13465
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwnerOrManageUsers()V

    .line 13466
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    iget-wide v0, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastSecurityLogRetrievalTime:J

    return-wide v0
.end method

.method final getLockObject()Ljava/lang/Object;
    .registers 5

    .line 568
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mStatLogger:Lcom/android/internal/util/StatLogger;

    invoke-virtual {v0}, Lcom/android/internal/util/StatLogger;->getTime()J

    move-result-wide v0

    .line 569
    .local v0, "start":J
    const/4 v2, 0x7

    invoke-static {v2}, Lcom/android/server/LockGuard;->guard(I)V

    .line 570
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mStatLogger:Lcom/android/internal/util/StatLogger;

    const/4 v3, 0x0

    invoke-virtual {v2, v3, v0, v1}, Lcom/android/internal/util/StatLogger;->logDurationStat(IJ)J

    .line 572
    .end local v0  # "start":J
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockDoNoUseDirectly:Ljava/lang/Object;

    return-object v0
.end method

.method public getLockTaskFeatures(Landroid/content/ComponentName;)I
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 10723
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10724
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 10725
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 10726
    :try_start_10
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanCallLockTaskLocked(Landroid/content/ComponentName;)V

    .line 10727
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    iget v2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskFeatures:I

    monitor-exit v1

    return v2

    .line 10728
    :catchall_1b
    move-exception v2

    monitor-exit v1
    :try_end_1d
    .catchall {:try_start_10 .. :try_end_1d} :catchall_1b

    throw v2
.end method

.method public getLockTaskPackages(Landroid/content/ComponentName;)[Ljava/lang/String;
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 10676
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10678
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v0

    .line 10679
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 10680
    :try_start_14
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanCallLockTaskLocked(Landroid/content/ComponentName;)V

    .line 10681
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    iget-object v2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskPackages:Ljava/util/List;

    .line 10682
    .local v2, "packages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v3

    new-array v3, v3, [Ljava/lang/String;

    invoke-interface {v2, v3}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v3

    check-cast v3, [Ljava/lang/String;

    monitor-exit v1

    return-object v3

    .line 10683
    .end local v2  # "packages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :catchall_2b
    move-exception v2

    monitor-exit v1
    :try_end_2d
    .catchall {:try_start_14 .. :try_end_2d} :catchall_2b

    throw v2
.end method

.method public getLongSupportMessage(Landroid/content/ComponentName;)Ljava/lang/CharSequence;
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 12222
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 12223
    const/4 v0, 0x0

    return-object v0

    .line 12225
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12226
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12227
    :try_start_10
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 12228
    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v1

    .line 12227
    invoke-direct {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForUidLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 12229
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->longSupportMessage:Ljava/lang/CharSequence;

    monitor-exit v0

    return-object v2

    .line 12230
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_1e
    move-exception v1

    monitor-exit v0
    :try_end_20
    .catchall {:try_start_10 .. :try_end_20} :catchall_1e

    throw v1
.end method

.method public getLongSupportMessageForUser(Landroid/content/ComponentName;I)Ljava/lang/CharSequence;
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 12253
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 12254
    return-object v1

    .line 12256
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12257
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    if-eqz v0, :cond_25

    .line 12260
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12261
    :try_start_16
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 12262
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_20

    .line 12263
    iget-object v1, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->longSupportMessage:Ljava/lang/CharSequence;

    monitor-exit v0

    return-object v1

    .line 12265
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_20
    monitor-exit v0

    .line 12266
    return-object v1

    .line 12265
    :catchall_22
    move-exception v1

    monitor-exit v0
    :try_end_24
    .catchall {:try_start_16 .. :try_end_24} :catchall_22

    throw v1

    .line 12258
    :cond_25
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only the system can query support message for user"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getManagedUserId(I)I
    .registers 5
    .param p1, "callingUserId"  # I

    .line 10592
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v0, p1}, Landroid/os/UserManager;->getProfiles(I)Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_a
    :goto_a
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_24

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/UserInfo;

    .line 10593
    .local v1, "ui":Landroid/content/pm/UserInfo;
    iget v2, v1, Landroid/content/pm/UserInfo;->id:I

    if-eq v2, p1, :cond_a

    invoke-virtual {v1}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v2

    if-nez v2, :cond_21

    .line 10594
    goto :goto_a

    .line 10599
    :cond_21
    iget v0, v1, Landroid/content/pm/UserInfo;->id:I

    return v0

    .line 10604
    .end local v1  # "ui":Landroid/content/pm/UserInfo;
    :cond_24
    const/4 v0, -0x1

    return v0
.end method

.method public getMaximumFailedPasswordsForWipe(Landroid/content/ComponentName;IZ)I
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4915
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_2b

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_e

    goto :goto_2b

    .line 4918
    :cond_e
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 4919
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 4920
    if-eqz p1, :cond_1d

    .line 4921
    :try_start_18
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    goto :goto_21

    .line 4922
    :cond_1d
    invoke-direct {p0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getAdminWithMinimumFailedPasswordsForWipeLocked(IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    :goto_21
    nop

    .line 4923
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_26

    iget v1, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumFailedPasswordsForWipe:I

    :cond_26
    monitor-exit v0

    return v1

    .line 4924
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_28
    move-exception v1

    monitor-exit v0
    :try_end_2a
    .catchall {:try_start_18 .. :try_end_2a} :catchall_28

    throw v1

    .line 4916
    :cond_2b
    :goto_2b
    return v1
.end method

.method public getMaximumTimeToLock(Landroid/content/ComponentName;IZ)J
    .registers 12
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 5340
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const-wide/16 v1, 0x0

    if-nez v0, :cond_7

    .line 5341
    return-wide v1

    .line 5343
    :cond_7
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 5344
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 5345
    if-eqz p1, :cond_1b

    .line 5346
    :try_start_11
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 5347
    .local v3, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v3, :cond_19

    iget-wide v1, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumTimeToUnlock:J

    :cond_19
    monitor-exit v0

    return-wide v1

    .line 5350
    .end local v3  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_1b
    invoke-direct {p0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v3

    .line 5352
    .local v3, "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getMaximumTimeToLockPolicyFromAdmins(Ljava/util/List;)J

    move-result-wide v4

    .line 5353
    .local v4, "timeMs":J
    const-wide v6, 0x7fffffffffffffffL

    cmp-long v6, v4, v6

    if-nez v6, :cond_2d

    goto :goto_2e

    :cond_2d
    move-wide v1, v4

    :goto_2e
    monitor-exit v0

    return-wide v1

    .line 5354
    .end local v3  # "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    .end local v4  # "timeMs":J
    :catchall_30
    move-exception v1

    monitor-exit v0
    :try_end_32
    .catchall {:try_start_11 .. :try_end_32} :catchall_30

    throw v1
.end method

.method public getMeteredDataDisabledPackages(Landroid/content/ComponentName;)Ljava/util/List;
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            ")",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 12445
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12447
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_d

    .line 12448
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    return-object v0

    .line 12450
    :cond_d
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12451
    const/4 v1, -0x1

    :try_start_13
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 12453
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->meteredDisabledPackages:Ljava/util/List;

    if-nez v2, :cond_21

    .line 12454
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    goto :goto_23

    :cond_21
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->meteredDisabledPackages:Ljava/util/List;

    :goto_23
    monitor-exit v0

    .line 12453
    return-object v2

    .line 12455
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_25
    move-exception v1

    monitor-exit v0
    :try_end_27
    .catchall {:try_start_13 .. :try_end_27} :catchall_25

    throw v1
.end method

.method public getOrganizationColor(Landroid/content/ComponentName;)I
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 12306
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_7

    .line 12307
    sget v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->DEF_ORGANIZATION_COLOR:I

    return v0

    .line 12309
    :cond_7
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12310
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    const-string v1, "get organization color"

    invoke-direct {p0, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManagedProfile(ILjava/lang/String;)V

    .line 12311
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12312
    const/4 v1, -0x1

    :try_start_1d
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 12314
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->organizationColor:I

    monitor-exit v0

    return v2

    .line 12315
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_25
    move-exception v1

    monitor-exit v0
    :try_end_27
    .catchall {:try_start_1d .. :try_end_27} :catchall_25

    throw v1
.end method

.method public getOrganizationColorForUser(I)I
    .registers 5
    .param p1, "userHandle"  # I

    .line 12320
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_7

    .line 12321
    sget v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->DEF_ORGANIZATION_COLOR:I

    return v0

    .line 12323
    :cond_7
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 12324
    const-string v0, "get organization color"

    invoke-direct {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManagedProfile(ILjava/lang/String;)V

    .line 12325
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12326
    :try_start_14
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 12327
    .local v1, "profileOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v1, :cond_1d

    .line 12328
    iget v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->organizationColor:I

    goto :goto_1f

    .line 12329
    :cond_1d
    sget v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->DEF_ORGANIZATION_COLOR:I

    :goto_1f
    monitor-exit v0

    .line 12327
    return v2

    .line 12330
    .end local v1  # "profileOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_21
    move-exception v1

    monitor-exit v0
    :try_end_23
    .catchall {:try_start_14 .. :try_end_23} :catchall_21

    throw v1
.end method

.method public getOrganizationName(Landroid/content/ComponentName;)Ljava/lang/CharSequence;
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 12354
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 12355
    const/4 v0, 0x0

    return-object v0

    .line 12357
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12358
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    const-string v1, "get organization name"

    invoke-direct {p0, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManagedProfile(ILjava/lang/String;)V

    .line 12359
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12360
    const/4 v1, -0x1

    :try_start_1c
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 12362
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->organizationName:Ljava/lang/String;

    monitor-exit v0

    return-object v2

    .line 12363
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_24
    move-exception v1

    monitor-exit v0
    :try_end_26
    .catchall {:try_start_1c .. :try_end_26} :catchall_24

    throw v1
.end method

.method public getOrganizationNameForUser(I)Ljava/lang/CharSequence;
    .registers 5
    .param p1, "userHandle"  # I

    .line 12380
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 12381
    return-object v1

    .line 12383
    :cond_6
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 12384
    const-string v0, "get organization name"

    invoke-direct {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManagedProfile(ILjava/lang/String;)V

    .line 12385
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12386
    :try_start_13
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 12387
    .local v2, "profileOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_1c

    .line 12388
    iget-object v1, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->organizationName:Ljava/lang/String;

    goto :goto_1d

    .line 12389
    :cond_1c
    nop

    :goto_1d
    monitor-exit v0

    .line 12387
    return-object v1

    .line 12390
    .end local v2  # "profileOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_1f
    move-exception v1

    monitor-exit v0
    :try_end_21
    .catchall {:try_start_13 .. :try_end_21} :catchall_1f

    throw v1
.end method

.method public getOverrideApns(Landroid/content/ComponentName;)Ljava/util/List;
    .registers 3
    .param p1, "who"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            ")",
            "Ljava/util/List<",
            "Landroid/telephony/data/ApnSetting;",
            ">;"
        }
    .end annotation

    .line 13991
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-eqz v0, :cond_16

    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasTelephonyFeature:Z

    if-nez v0, :cond_9

    goto :goto_16

    .line 13994
    :cond_9
    const-string v0, "ComponentName is null in getOverrideApns"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13995
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 13997
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getOverrideApnsUnchecked()Ljava/util/List;

    move-result-object v0

    return-object v0

    .line 13992
    :cond_16
    :goto_16
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public getOwnerInstalledCaCerts(Landroid/os/UserHandle;)Landroid/content/pm/StringParceledListSlice;
    .registers 7
    .param p1, "user"  # Landroid/os/UserHandle;

    .line 13589
    invoke-virtual {p1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v0

    .line 13590
    .local v0, "userId":I
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOwnerOrFullCrossUsersPermission(I)V

    .line 13591
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 13592
    :try_start_c
    new-instance v2, Landroid/content/pm/StringParceledListSlice;

    new-instance v3, Ljava/util/ArrayList;

    .line 13593
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    iget-object v4, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mOwnerInstalledCaCerts:Ljava/util/Set;

    invoke-direct {v3, v4}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    invoke-direct {v2, v3}, Landroid/content/pm/StringParceledListSlice;-><init>(Ljava/util/List;)V

    monitor-exit v1

    .line 13592
    return-object v2

    .line 13594
    :catchall_1e
    move-exception v2

    monitor-exit v1
    :try_end_20
    .catchall {:try_start_c .. :try_end_20} :catchall_1e

    throw v2
.end method

.method public getPasswordComplexity()I
    .registers 6

    .line 4847
    nop

    .line 4848
    const/16 v0, 0x48

    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 4849
    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 4850
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object v1

    .line 4849
    invoke-virtual {v0, v1}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 4851
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 4852
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4853
    .local v0, "callingUserId":I
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceUserUnlocked(I)V

    .line 4854
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v2, "android.permission.REQUEST_PASSWORD_COMPLEXITY"

    const-string v3, "Must have android.permission.REQUEST_PASSWORD_COMPLEXITY permission."

    invoke-virtual {v1, v2, v3}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 4858
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 4859
    const/4 v2, 0x0

    :try_start_36
    invoke-direct {p0, v0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCredentialOwner(IZ)I

    move-result v3

    .line 4860
    .local v3, "targetUserId":I
    invoke-virtual {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserPasswordMetricsLocked(I)Landroid/app/admin/PasswordMetrics;

    move-result-object v4

    .line 4861
    .local v4, "metrics":Landroid/app/admin/PasswordMetrics;
    if-nez v4, :cond_41

    goto :goto_45

    :cond_41
    invoke-virtual {v4}, Landroid/app/admin/PasswordMetrics;->determineComplexity()I

    move-result v2

    :goto_45
    monitor-exit v1

    return v2

    .line 4862
    .end local v3  # "targetUserId":I
    .end local v4  # "metrics":Landroid/app/admin/PasswordMetrics;
    :catchall_47
    move-exception v2

    monitor-exit v1
    :try_end_49
    .catchall {:try_start_36 .. :try_end_49} :catchall_47

    throw v2
.end method

.method public getPasswordExpiration(Landroid/content/ComponentName;IZ)J
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4520
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-eqz v0, :cond_1e

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_d

    goto :goto_1e

    .line 4523
    :cond_d
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 4524
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 4525
    :try_start_15
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPasswordExpirationLocked(Landroid/content/ComponentName;IZ)J

    move-result-wide v1

    monitor-exit v0

    return-wide v1

    .line 4526
    :catchall_1b
    move-exception v1

    monitor-exit v0
    :try_end_1d
    .catchall {:try_start_15 .. :try_end_1d} :catchall_1b

    throw v1

    .line 4521
    :cond_1e
    :goto_1e
    const-wide/16 v0, 0x0

    return-wide v0
.end method

.method public getPasswordExpirationTimeout(Landroid/content/ComponentName;IZ)J
    .registers 15
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4385
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const-wide/16 v1, 0x0

    if-eqz v0, :cond_54

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_f

    goto :goto_54

    .line 4388
    :cond_f
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 4389
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 4390
    const-wide/16 v3, 0x0

    .line 4392
    .local v3, "timeout":J
    if-eqz p1, :cond_27

    .line 4393
    :try_start_1b
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 4394
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v1, :cond_24

    iget-wide v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationTimeout:J

    goto :goto_25

    :cond_24
    move-wide v5, v3

    :goto_25
    monitor-exit v0

    return-wide v5

    .line 4398
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_27
    nop

    .line 4399
    invoke-direct {p0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v5

    .line 4400
    .local v5, "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v6

    .line 4401
    .local v6, "N":I
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_31
    if-ge v7, v6, :cond_4f

    .line 4402
    invoke-interface {v5, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4403
    .local v8, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    cmp-long v9, v3, v1

    if-eqz v9, :cond_49

    iget-wide v9, v8, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationTimeout:J

    cmp-long v9, v9, v1

    if-eqz v9, :cond_4c

    iget-wide v9, v8, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationTimeout:J

    cmp-long v9, v3, v9

    if-lez v9, :cond_4c

    .line 4405
    :cond_49
    iget-wide v9, v8, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationTimeout:J

    move-wide v3, v9

    .line 4401
    .end local v8  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_4c
    add-int/lit8 v7, v7, 0x1

    goto :goto_31

    .line 4408
    .end local v7  # "i":I
    :cond_4f
    monitor-exit v0

    return-wide v3

    .line 4409
    .end local v3  # "timeout":J
    .end local v5  # "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    .end local v6  # "N":I
    :catchall_51
    move-exception v1

    monitor-exit v0
    :try_end_53
    .catchall {:try_start_1b .. :try_end_53} :catchall_51

    throw v1

    .line 4386
    :cond_54
    :goto_54
    return-wide v1
.end method

.method public getPasswordHistoryLength(Landroid/content/ComponentName;IZ)I
    .registers 11
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4340
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_a

    .line 4341
    const/4 v0, 0x0

    return v0

    .line 4343
    :cond_a
    sget-object v5, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$kf4uUzLBApkNlieB7zr8MNfAxbg;->INSTANCE:Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$kf4uUzLBApkNlieB7zr8MNfAxbg;

    const/4 v6, 0x0

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move v4, p3

    invoke-direct/range {v1 .. v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getStrictestPasswordRequirement(Landroid/content/ComponentName;IZLjava/util/function/Function;I)I

    move-result v0

    return v0
.end method

.method public getPasswordMinimumLength(Landroid/content/ComponentName;IZ)I
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4311
    sget-object v4, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$NzTaj70nEECGXhr52RbDyXK_fPU;->INSTANCE:Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$NzTaj70nEECGXhr52RbDyXK_fPU;

    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getStrictestPasswordRequirement(Landroid/content/ComponentName;IZLjava/util/function/Function;I)I

    move-result v0

    return v0
.end method

.method public getPasswordMinimumLetters(Landroid/content/ComponentName;IZ)I
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4615
    sget-object v4, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$tN28Me5AH2pjgYHvPnMAsCjK_NU;->INSTANCE:Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$tN28Me5AH2pjgYHvPnMAsCjK_NU;

    const/high16 v5, 0x60000

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getStrictestPasswordRequirement(Landroid/content/ComponentName;IZLjava/util/function/Function;I)I

    move-result v0

    return v0
.end method

.method public getPasswordMinimumLowerCase(Landroid/content/ComponentName;IZ)I
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4584
    sget-object v4, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$O6O5T5aoG6MmH8aAAGYNwYhbtw8;->INSTANCE:Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$O6O5T5aoG6MmH8aAAGYNwYhbtw8;

    const/high16 v5, 0x60000

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getStrictestPasswordRequirement(Landroid/content/ComponentName;IZLjava/util/function/Function;I)I

    move-result v0

    return v0
.end method

.method public getPasswordMinimumNonLetter(Landroid/content/ComponentName;IZ)I
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4708
    sget-object v4, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$8nvbMteplUbtaSMuw4DWJ-MQa4g;->INSTANCE:Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$8nvbMteplUbtaSMuw4DWJ-MQa4g;

    const/high16 v5, 0x60000

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getStrictestPasswordRequirement(Landroid/content/ComponentName;IZLjava/util/function/Function;I)I

    move-result v0

    return v0
.end method

.method public getPasswordMinimumNumeric(Landroid/content/ComponentName;IZ)I
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4646
    sget-object v4, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$BYd2ftVebU2Ktj6tr-DFfrGE5TE;->INSTANCE:Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$BYd2ftVebU2Ktj6tr-DFfrGE5TE;

    const/high16 v5, 0x60000

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getStrictestPasswordRequirement(Landroid/content/ComponentName;IZLjava/util/function/Function;I)I

    move-result v0

    return v0
.end method

.method public getPasswordMinimumSymbols(Landroid/content/ComponentName;IZ)I
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4677
    sget-object v4, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$CClEW-CtZQRadOocoqGh0wiKhG4;->INSTANCE:Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$CClEW-CtZQRadOocoqGh0wiKhG4;

    const/high16 v5, 0x60000

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getStrictestPasswordRequirement(Landroid/content/ComponentName;IZLjava/util/function/Function;I)I

    move-result v0

    return v0
.end method

.method public getPasswordMinimumUpperCase(Landroid/content/ComponentName;IZ)I
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4556
    sget-object v4, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$GdvC4eub6BtkkX5BnHuPR5Ob0ag;->INSTANCE:Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$GdvC4eub6BtkkX5BnHuPR5Ob0ag;

    const/high16 v5, 0x60000

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getStrictestPasswordRequirement(Landroid/content/ComponentName;IZLjava/util/function/Function;I)I

    move-result v0

    return v0
.end method

.method public getPasswordQuality(Landroid/content/ComponentName;IZ)I
    .registers 11
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I
    .param p3, "parent"  # Z

    .line 4215
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 4216
    const/4 v0, 0x0

    return v0

    .line 4218
    :cond_6
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 4219
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 4220
    const/4 v1, 0x0

    .line 4222
    .local v1, "mode":I
    if-eqz p1, :cond_1f

    .line 4223
    :try_start_11
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4224
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_1c

    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iget v3, v3, Landroid/app/admin/PasswordMetrics;->quality:I

    goto :goto_1d

    :cond_1c
    move v3, v1

    :goto_1d
    monitor-exit v0

    return v3

    .line 4228
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_1f
    nop

    .line 4229
    invoke-direct {p0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v2

    .line 4230
    .local v2, "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v3

    .line 4231
    .local v3, "N":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_29
    if-ge v4, v3, :cond_3f

    .line 4232
    invoke-interface {v2, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4233
    .local v5, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iget v6, v6, Landroid/app/admin/PasswordMetrics;->quality:I

    if-ge v1, v6, :cond_3c

    .line 4234
    iget-object v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iget v6, v6, Landroid/app/admin/PasswordMetrics;->quality:I

    move v1, v6

    .line 4231
    .end local v5  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_3c
    add-int/lit8 v4, v4, 0x1

    goto :goto_29

    .line 4237
    .end local v4  # "i":I
    :cond_3f
    monitor-exit v0

    return v1

    .line 4238
    .end local v1  # "mode":I
    .end local v2  # "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    .end local v3  # "N":I
    :catchall_41
    move-exception v1

    monitor-exit v0
    :try_end_43
    .catchall {:try_start_11 .. :try_end_43} :catchall_41

    throw v1
.end method

.method public getPendingSystemUpdate(Landroid/content/ComponentName;)Landroid/app/admin/SystemUpdateInfo;
    .registers 3
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 11702
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 11703
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 11705
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->getSystemUpdateInfo()Landroid/app/admin/SystemUpdateInfo;

    move-result-object v0

    return-object v0
.end method

.method public getPermissionGrantState(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
    .registers 16
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "packageName"  # Ljava/lang/String;
    .param p4, "permission"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 11812
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    .line 11814
    .local v0, "packageManager":Landroid/content/pm/PackageManager;
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v1

    .line 11815
    .local v1, "user":Landroid/os/UserHandle;
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v2

    const/4 v3, -0x1

    if-nez v2, :cond_18

    .line 11817
    const-string v2, "delegation-permission-grant"

    invoke-direct {p0, p1, p2, v3, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 11820
    :cond_18
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 11821
    :try_start_1d
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v4
    :try_end_23
    .catchall {:try_start_1d .. :try_end_23} :catchall_92

    .line 11824
    .local v4, "ident":J
    :try_start_23
    invoke-virtual {v1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v6

    invoke-direct {p0, p2, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTargetSdk(Ljava/lang/String;I)I

    move-result v6

    const/16 v7, 0x1d

    const/4 v8, 0x1

    const/4 v9, 0x0

    if-ge v6, v7, :cond_3c

    .line 11827
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    .line 11828
    invoke-virtual {v1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v6

    .line 11827
    invoke-interface {v3, p4, p3, v6}, Landroid/content/pm/IPackageManager;->checkPermission(Ljava/lang/String;Ljava/lang/String;I)I

    move-result v3
    :try_end_3b
    .catchall {:try_start_23 .. :try_end_3b} :catchall_8b

    .local v3, "granted":I
    goto :goto_51

    .line 11831
    .end local v3  # "granted":I
    :cond_3c
    nop

    .line 11832
    :try_start_3d
    invoke-virtual {v1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v6

    .line 11831
    invoke-virtual {v0, p3, v6}, Landroid/content/pm/PackageManager;->getPackageUidAsUser(Ljava/lang/String;I)I

    move-result v6

    .line 11833
    .local v6, "uid":I
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {v7, p4, v3, v6, p3}, Landroid/content/PermissionChecker;->checkPermissionForPreflight(Landroid/content/Context;Ljava/lang/String;IILjava/lang/String;)I

    move-result v3
    :try_end_4b
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_3d .. :try_end_4b} :catch_6d
    .catchall {:try_start_3d .. :try_end_4b} :catchall_8b

    if-eqz v3, :cond_4f

    .line 11836
    const/4 v3, -0x1

    .restart local v3  # "granted":I
    goto :goto_50

    .line 11838
    .end local v3  # "granted":I
    :cond_4f
    const/4 v3, 0x0

    .line 11844
    .end local v6  # "uid":I
    .restart local v3  # "granted":I
    :goto_50
    nop

    .line 11846
    :goto_51
    :try_start_51
    invoke-virtual {v0, p4, p3, v1}, Landroid/content/pm/PackageManager;->getPermissionFlags(Ljava/lang/String;Ljava/lang/String;Landroid/os/UserHandle;)I

    move-result v6
    :try_end_55
    .catchall {:try_start_51 .. :try_end_55} :catchall_8b

    .line 11847
    .local v6, "permFlags":I
    and-int/lit8 v7, v6, 0x4

    const/4 v10, 0x4

    if-eq v7, v10, :cond_62

    .line 11850
    nop

    .line 11858
    :try_start_5b
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v7, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v2

    .line 11850
    return v9

    .line 11853
    :cond_62
    if-nez v3, :cond_65

    .line 11854
    goto :goto_66

    .line 11855
    :cond_65
    const/4 v8, 0x2

    .line 11858
    :goto_66
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v7, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v2
    :try_end_6c
    .catchall {:try_start_5b .. :try_end_6c} :catchall_92

    .line 11853
    return v8

    .line 11840
    .end local v3  # "granted":I
    .end local v6  # "permFlags":I
    :catch_6d
    move-exception v3

    .line 11841
    .local v3, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    :try_start_6e
    new-instance v6, Landroid/os/RemoteException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Cannot check if "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string/jumbo v10, "is a runtime permission"

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v6, v7, v3, v9, v8}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V

    .end local v0  # "packageManager":Landroid/content/pm/PackageManager;
    .end local v1  # "user":Landroid/os/UserHandle;
    .end local v4  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageName":Ljava/lang/String;
    .end local p4  # "permission":Ljava/lang/String;
    throw v6
    :try_end_8b
    .catchall {:try_start_6e .. :try_end_8b} :catchall_8b

    .line 11858
    .end local v3  # "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    .restart local v0  # "packageManager":Landroid/content/pm/PackageManager;
    .restart local v1  # "user":Landroid/os/UserHandle;
    .restart local v4  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageName":Ljava/lang/String;
    .restart local p4  # "permission":Ljava/lang/String;
    :catchall_8b
    move-exception v3

    :try_start_8c
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "packageManager":Landroid/content/pm/PackageManager;
    .end local v1  # "user":Landroid/os/UserHandle;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageName":Ljava/lang/String;
    .end local p4  # "permission":Ljava/lang/String;
    throw v3

    .line 11860
    .end local v4  # "ident":J
    .restart local v0  # "packageManager":Landroid/content/pm/PackageManager;
    .restart local v1  # "user":Landroid/os/UserHandle;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageName":Ljava/lang/String;
    .restart local p4  # "permission":Ljava/lang/String;
    :catchall_92
    move-exception v3

    monitor-exit v2
    :try_end_94
    .catchall {:try_start_8c .. :try_end_94} :catchall_92

    throw v3
.end method

.method public getPermissionPolicy(Landroid/content/ComponentName;)I
    .registers 6
    .param p1, "admin"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 11733
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 11734
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 11735
    :try_start_9
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 11736
    .local v2, "userPolicy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPermissionPolicy:I

    monitor-exit v1

    return v3

    .line 11737
    .end local v2  # "userPolicy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :catchall_11
    move-exception v2

    monitor-exit v1
    :try_end_13
    .catchall {:try_start_9 .. :try_end_13} :catchall_11

    throw v2
.end method

.method public getPermittedAccessibilityServices(Landroid/content/ComponentName;)Ljava/util/List;
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 9288
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 9289
    const/4 v0, 0x0

    return-object v0

    .line 9291
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9293
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 9294
    const/4 v1, -0x1

    :try_start_11
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 9296
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedAccessiblityServices:Ljava/util/List;

    monitor-exit v0

    return-object v2

    .line 9297
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_19
    move-exception v1

    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_11 .. :try_end_1b} :catchall_19

    throw v1
.end method

.method public getPermittedAccessibilityServicesForUser(I)Ljava/util/List;
    .registers 15
    .param p1, "userId"  # I

    .line 9302
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 9303
    const/4 v0, 0x0

    return-object v0

    .line 9305
    :cond_6
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 9306
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 9307
    const/4 v1, 0x0

    .line 9311
    .local v1, "result":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :try_start_f
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v2, p1}, Landroid/os/UserManager;->getProfileIdsWithDisabled(I)[I

    move-result-object v2

    .line 9312
    .local v2, "profileIds":[I
    array-length v3, v2

    const/4 v4, 0x0

    :goto_17
    if-ge v4, v3, :cond_46

    aget v5, v2, v4

    .line 9315
    .local v5, "profileId":I
    invoke-virtual {p0, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserDataUnchecked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v6

    .line 9316
    .local v6, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v7, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v7

    .line 9317
    .local v7, "N":I
    const/4 v8, 0x0

    .local v8, "j":I
    :goto_26
    if-ge v8, v7, :cond_43

    .line 9318
    iget-object v9, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 9319
    .local v9, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v10, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedAccessiblityServices:Ljava/util/List;

    .line 9320
    .local v10, "fromAdmin":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    if-eqz v10, :cond_40

    .line 9321
    if-nez v1, :cond_3d

    .line 9322
    new-instance v11, Ljava/util/ArrayList;

    invoke-direct {v11, v10}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    move-object v1, v11

    goto :goto_40

    .line 9324
    :cond_3d
    invoke-interface {v1, v10}, Ljava/util/List;->retainAll(Ljava/util/Collection;)Z

    .line 9317
    .end local v9  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v10  # "fromAdmin":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_40
    :goto_40
    add-int/lit8 v8, v8, 0x1

    goto :goto_26

    .line 9312
    .end local v5  # "profileId":I
    .end local v6  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v7  # "N":I
    .end local v8  # "j":I
    :cond_43
    add-int/lit8 v4, v4, 0x1

    goto :goto_17

    .line 9331
    :cond_46
    if-eqz v1, :cond_98

    .line 9332
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v3
    :try_end_4e
    .catchall {:try_start_f .. :try_end_4e} :catchall_9a

    .line 9334
    .local v3, "id":J
    :try_start_4e
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v5

    .line 9335
    .local v5, "user":Landroid/content/pm/UserInfo;
    invoke-virtual {v5}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v6

    if-eqz v6, :cond_5b

    .line 9336
    iget v6, v5, Landroid/content/pm/UserInfo;->profileGroupId:I

    move p1, v6

    .line 9338
    :cond_5b
    nop

    .line 9339
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getAccessibilityManagerForUser(I)Landroid/view/accessibility/AccessibilityManager;

    move-result-object v6

    .line 9340
    .local v6, "accessibilityManager":Landroid/view/accessibility/AccessibilityManager;
    nop

    .line 9341
    invoke-virtual {v6}, Landroid/view/accessibility/AccessibilityManager;->getInstalledAccessibilityServiceList()Ljava/util/List;

    move-result-object v7

    .line 9343
    .local v7, "installedServices":Ljava/util/List;, "Ljava/util/List<Landroid/accessibilityservice/AccessibilityServiceInfo;>;"
    if-eqz v7, :cond_8b

    .line 9344
    invoke-interface {v7}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v8

    :goto_6b
    invoke-interface {v8}, Ljava/util/Iterator;->hasNext()Z

    move-result v9

    if-eqz v9, :cond_8b

    invoke-interface {v8}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/accessibilityservice/AccessibilityServiceInfo;

    .line 9345
    .local v9, "service":Landroid/accessibilityservice/AccessibilityServiceInfo;
    invoke-virtual {v9}, Landroid/accessibilityservice/AccessibilityServiceInfo;->getResolveInfo()Landroid/content/pm/ResolveInfo;

    move-result-object v10

    iget-object v10, v10, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 9346
    .local v10, "serviceInfo":Landroid/content/pm/ServiceInfo;
    iget-object v11, v10, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 9347
    .local v11, "applicationInfo":Landroid/content/pm/ApplicationInfo;
    iget v12, v11, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v12, v12, 0x1

    if-eqz v12, :cond_8a

    .line 9348
    iget-object v12, v10, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    invoke-interface {v1, v12}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_8a
    .catchall {:try_start_4e .. :try_end_8a} :catchall_91

    .line 9350
    .end local v9  # "service":Landroid/accessibilityservice/AccessibilityServiceInfo;
    .end local v10  # "serviceInfo":Landroid/content/pm/ServiceInfo;
    .end local v11  # "applicationInfo":Landroid/content/pm/ApplicationInfo;
    :cond_8a
    goto :goto_6b

    .line 9353
    .end local v5  # "user":Landroid/content/pm/UserInfo;
    .end local v6  # "accessibilityManager":Landroid/view/accessibility/AccessibilityManager;
    .end local v7  # "installedServices":Ljava/util/List;, "Ljava/util/List<Landroid/accessibilityservice/AccessibilityServiceInfo;>;"
    :cond_8b
    :try_start_8b
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9354
    goto :goto_98

    .line 9353
    :catchall_91
    move-exception v5

    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "userId":I
    throw v5

    .line 9357
    .end local v3  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "userId":I
    :cond_98
    :goto_98
    monitor-exit v0

    return-object v1

    .line 9358
    .end local v1  # "result":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .end local v2  # "profileIds":[I
    :catchall_9a
    move-exception v1

    monitor-exit v0
    :try_end_9c
    .catchall {:try_start_8b .. :try_end_9c} :catchall_9a

    throw v1
.end method

.method public getPermittedCrossProfileNotificationListeners(Landroid/content/ComponentName;)Ljava/util/List;
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            ")",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 9573
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 9574
    const/4 v0, 0x0

    return-object v0

    .line 9576
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9578
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 9579
    const/4 v1, -0x1

    :try_start_11
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 9581
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedNotificationListeners:Ljava/util/List;

    monitor-exit v0

    return-object v2

    .line 9582
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_19
    move-exception v1

    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_11 .. :try_end_1b} :catchall_19

    throw v1
.end method

.method public getPermittedInputMethods(Landroid/content/ComponentName;)Ljava/util/List;
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 9463
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 9464
    const/4 v0, 0x0

    return-object v0

    .line 9466
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9468
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 9469
    const/4 v1, -0x1

    :try_start_11
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 9471
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedInputMethods:Ljava/util/List;

    monitor-exit v0

    return-object v2

    .line 9472
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_19
    move-exception v1

    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_11 .. :try_end_1b} :catchall_19

    throw v1
.end method

.method public getPermittedInputMethodsForCurrentUser()Ljava/util/List;
    .registers 15

    .line 9477
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 9479
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 9480
    .local v0, "callingUserId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 9481
    const/4 v2, 0x0

    .line 9485
    .local v2, "result":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :try_start_f
    sget-boolean v3, Landroid/view/inputmethod/InputMethodSystemProperty;->PER_PROFILE_IME_ENABLED:Z

    const/4 v4, 0x0

    const/4 v5, 0x1

    if-eqz v3, :cond_1a

    .line 9486
    new-array v3, v5, [I

    aput v0, v3, v4

    goto :goto_20

    .line 9487
    :cond_1a
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v3, v0}, Landroid/os/UserManager;->getProfileIdsWithDisabled(I)[I

    move-result-object v3

    :goto_20
    nop

    .line 9488
    .local v3, "profileIds":[I
    array-length v6, v3

    :goto_22
    if-ge v4, v6, :cond_51

    aget v7, v3, v4

    .line 9491
    .local v7, "profileId":I
    invoke-virtual {p0, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserDataUnchecked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v8

    .line 9492
    .local v8, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v9, v8, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v9

    .line 9493
    .local v9, "N":I
    const/4 v10, 0x0

    .local v10, "j":I
    :goto_31
    if-ge v10, v9, :cond_4e

    .line 9494
    iget-object v11, v8, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 9495
    .local v11, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v12, v11, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedInputMethods:Ljava/util/List;

    .line 9496
    .local v12, "fromAdmin":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    if-eqz v12, :cond_4b

    .line 9497
    if-nez v2, :cond_48

    .line 9498
    new-instance v13, Ljava/util/ArrayList;

    invoke-direct {v13, v12}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    move-object v2, v13

    goto :goto_4b

    .line 9500
    :cond_48
    invoke-interface {v2, v12}, Ljava/util/List;->retainAll(Ljava/util/Collection;)Z

    .line 9493
    .end local v11  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v12  # "fromAdmin":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_4b
    :goto_4b
    add-int/lit8 v10, v10, 0x1

    goto :goto_31

    .line 9488
    .end local v7  # "profileId":I
    .end local v8  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v9  # "N":I
    .end local v10  # "j":I
    :cond_4e
    add-int/lit8 v4, v4, 0x1

    goto :goto_22

    .line 9507
    :cond_51
    if-eqz v2, :cond_7e

    .line 9509
    invoke-static {}, Lcom/android/server/inputmethod/InputMethodManagerInternal;->get()Lcom/android/server/inputmethod/InputMethodManagerInternal;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/android/server/inputmethod/InputMethodManagerInternal;->getInputMethodListAsUser(I)Ljava/util/List;

    move-result-object v4

    .line 9510
    .local v4, "imes":Ljava/util/List;, "Ljava/util/List<Landroid/view/inputmethod/InputMethodInfo;>;"
    if-eqz v4, :cond_7e

    .line 9511
    invoke-interface {v4}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v6

    :goto_61
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_7e

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/view/inputmethod/InputMethodInfo;

    .line 9512
    .local v7, "ime":Landroid/view/inputmethod/InputMethodInfo;
    invoke-virtual {v7}, Landroid/view/inputmethod/InputMethodInfo;->getServiceInfo()Landroid/content/pm/ServiceInfo;

    move-result-object v8

    .line 9513
    .local v8, "serviceInfo":Landroid/content/pm/ServiceInfo;
    iget-object v9, v8, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 9514
    .local v9, "applicationInfo":Landroid/content/pm/ApplicationInfo;
    iget v10, v9, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/2addr v10, v5

    if-eqz v10, :cond_7d

    .line 9515
    iget-object v10, v8, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    invoke-interface {v2, v10}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 9517
    .end local v7  # "ime":Landroid/view/inputmethod/InputMethodInfo;
    .end local v8  # "serviceInfo":Landroid/content/pm/ServiceInfo;
    .end local v9  # "applicationInfo":Landroid/content/pm/ApplicationInfo;
    :cond_7d
    goto :goto_61

    .line 9520
    .end local v4  # "imes":Ljava/util/List;, "Ljava/util/List<Landroid/view/inputmethod/InputMethodInfo;>;"
    :cond_7e
    monitor-exit v1

    return-object v2

    .line 9521
    .end local v2  # "result":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    .end local v3  # "profileIds":[I
    :catchall_80
    move-exception v2

    monitor-exit v1
    :try_end_82
    .catchall {:try_start_f .. :try_end_82} :catchall_80

    throw v2
.end method

.method public getProfileOwner(I)Landroid/content/ComponentName;
    .registers 4
    .param p1, "userHandle"  # I

    .line 8415
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 8416
    const/4 v0, 0x0

    return-object v0

    .line 8419
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 8420
    :try_start_b
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p1}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerComponent(I)Landroid/content/ComponentName;

    move-result-object v1

    monitor-exit v0

    return-object v1

    .line 8421
    :catchall_13
    move-exception v1

    monitor-exit v0
    :try_end_15
    .catchall {:try_start_b .. :try_end_15} :catchall_13

    throw v1
.end method

.method getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .registers 9
    .param p1, "userHandle"  # I
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 8428
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0, p1}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerComponent(I)Landroid/content/ComponentName;

    move-result-object v0

    .line 8429
    .local v0, "profileOwner":Landroid/content/ComponentName;
    const/4 v1, 0x0

    if-nez v0, :cond_a

    .line 8430
    return-object v1

    .line 8432
    :cond_a
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 8433
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 8434
    .local v3, "n":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_15
    if-ge v4, v3, :cond_2f

    .line 8435
    iget-object v5, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 8436
    .local v5, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v6}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v6

    invoke-virtual {v0, v6}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_2c

    .line 8437
    return-object v5

    .line 8434
    .end local v5  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_2c
    add-int/lit8 v4, v4, 0x1

    goto :goto_15

    .line 8440
    .end local v4  # "i":I
    :cond_2f
    return-object v1
.end method

.method public getProfileOwnerAsUser(I)Landroid/content/ComponentName;
    .registers 3
    .param p1, "userHandle"  # I

    .line 8408
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCrossUsersPermission(I)V

    .line 8410
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwner(I)Landroid/content/ComponentName;

    move-result-object v0

    return-object v0
.end method

.method public getProfileOwnerName(I)Ljava/lang/String;
    .registers 4
    .param p1, "userHandle"  # I

    .line 8445
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 8446
    return-object v1

    .line 8448
    :cond_6
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 8449
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwner(I)Landroid/content/ComponentName;

    move-result-object v0

    .line 8450
    .local v0, "profileOwner":Landroid/content/ComponentName;
    if-nez v0, :cond_10

    .line 8451
    return-object v1

    .line 8453
    :cond_10
    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getApplicationLabel(Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method

.method protected getProfileParentId(I)I
    .registers 7
    .param p1, "userHandle"  # I

    .line 8808
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 8810
    .local v0, "ident":J
    :try_start_6
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v2, p1}, Landroid/os/UserManager;->getProfileParent(I)Landroid/content/pm/UserInfo;

    move-result-object v2

    .line 8811
    .local v2, "parentUser":Landroid/content/pm/UserInfo;
    if-eqz v2, :cond_11

    iget v3, v2, Landroid/content/pm/UserInfo;->id:I
    :try_end_10
    .catchall {:try_start_6 .. :try_end_10} :catchall_18

    goto :goto_12

    :cond_11
    move v3, p1

    .line 8813
    :goto_12
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8811
    return v3

    .line 8813
    .end local v2  # "parentUser":Landroid/content/pm/UserInfo;
    :catchall_18
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method public getProfileWithMinimumFailedPasswordsForWipe(IZ)I
    .registers 6
    .param p1, "userHandle"  # I
    .param p2, "parent"  # Z

    .line 4929
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/16 v1, -0x2710

    if-eqz v0, :cond_2a

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_f

    goto :goto_2a

    .line 4932
    :cond_f
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 4933
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 4934
    :try_start_17
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getAdminWithMinimumFailedPasswordsForWipeLocked(IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4936
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_25

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v1

    invoke-virtual {v1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v1

    :cond_25
    monitor-exit v0

    return v1

    .line 4937
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_27
    move-exception v1

    monitor-exit v0
    :try_end_29
    .catchall {:try_start_17 .. :try_end_29} :catchall_27

    throw v1

    .line 4930
    :cond_2a
    :goto_2a
    return v1
.end method

.method public getRemoveWarning(Landroid/content/ComponentName;Landroid/os/RemoteCallback;I)V
    .registers 21
    .param p1, "comp"  # Landroid/content/ComponentName;
    .param p2, "result"  # Landroid/os/RemoteCallback;
    .param p3, "userHandle"  # I

    .line 6624
    move-object/from16 v1, p0

    move-object/from16 v2, p2

    move/from16 v3, p3

    iget-boolean v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_b

    .line 6625
    return-void

    .line 6627
    :cond_b
    invoke-direct {v1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 6628
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v4, 0x0

    const-string v5, "android.permission.BIND_DEVICE_ADMIN"

    invoke-virtual {v0, v5, v4}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6631
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v5

    monitor-enter v5

    .line 6632
    move-object/from16 v6, p1

    :try_start_1d
    invoke-virtual {v1, v6, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 6633
    .local v0, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-nez v0, :cond_28

    .line 6634
    invoke-virtual {v2, v4}, Landroid/os/RemoteCallback;->sendResult(Landroid/os/Bundle;)V

    .line 6635
    monitor-exit v5

    return-void

    .line 6637
    :cond_28
    new-instance v4, Landroid/content/Intent;

    const-string v7, "android.app.action.DEVICE_ADMIN_DISABLE_REQUESTED"

    invoke-direct {v4, v7}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6638
    .local v4, "intent":Landroid/content/Intent;
    const/high16 v7, 0x10000000

    invoke-virtual {v4, v7}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 6639
    iget-object v7, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v7}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v7

    invoke-virtual {v4, v7}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 6640
    iget-object v8, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    new-instance v10, Landroid/os/UserHandle;

    invoke-direct {v10, v3}, Landroid/os/UserHandle;-><init>(I)V

    const/4 v11, 0x0

    new-instance v12, Lcom/android/server/devicepolicy/DevicePolicyManagerService$7;

    invoke-direct {v12, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$7;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Landroid/os/RemoteCallback;)V

    const/4 v13, 0x0

    const/4 v14, -0x1

    const/4 v15, 0x0

    const/16 v16, 0x0

    move-object v9, v4

    invoke-virtual/range {v8 .. v16}, Landroid/content/Context;->sendOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V

    .line 6647
    .end local v0  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v4  # "intent":Landroid/content/Intent;
    monitor-exit v5

    .line 6648
    return-void

    .line 6647
    :catchall_55
    move-exception v0

    monitor-exit v5
    :try_end_57
    .catchall {:try_start_1d .. :try_end_57} :catchall_55

    throw v0
.end method

.method public getRequiredStrongAuthTimeout(Landroid/content/ComponentName;IZ)J
    .registers 15
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userId"  # I
    .param p3, "parent"  # Z

    .line 5403
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_8

    .line 5404
    const-wide/32 v0, 0xf731400

    return-wide v0

    .line 5406
    :cond_8
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    const-wide/16 v1, 0x0

    if-nez v0, :cond_13

    .line 5409
    return-wide v1

    .line 5411
    :cond_13
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 5412
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 5413
    if-eqz p1, :cond_27

    .line 5414
    :try_start_1d
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 5415
    .local v3, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v3, :cond_25

    iget-wide v1, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->strongAuthUnlockTimeout:J

    :cond_25
    monitor-exit v0

    return-wide v1

    .line 5419
    .end local v3  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_27
    invoke-direct {p0, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v3

    .line 5421
    .local v3, "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    const-wide/32 v4, 0xf731400

    .line 5422
    .local v4, "strongAuthUnlockTimeout":J
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_2f
    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v7

    if-ge v6, v7, :cond_49

    .line 5423
    invoke-interface {v3, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    iget-wide v7, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->strongAuthUnlockTimeout:J

    .line 5424
    .local v7, "timeout":J
    cmp-long v9, v7, v1

    if-eqz v9, :cond_46

    .line 5425
    invoke-static {v7, v8, v4, v5}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v9

    move-wide v4, v9

    .line 5422
    .end local v7  # "timeout":J
    :cond_46
    add-int/lit8 v6, v6, 0x1

    goto :goto_2f

    .line 5428
    .end local v6  # "i":I
    :cond_49
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getMinimumStrongAuthTimeoutMs()J

    move-result-wide v1

    invoke-static {v4, v5, v1, v2}, Ljava/lang/Math;->max(JJ)J

    move-result-wide v1

    monitor-exit v0

    return-wide v1

    .line 5429
    .end local v3  # "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    .end local v4  # "strongAuthUnlockTimeout":J
    :catchall_53
    move-exception v1

    monitor-exit v0
    :try_end_55
    .catchall {:try_start_1d .. :try_end_55} :catchall_53

    throw v1
.end method

.method public getRestrictionsProvider(I)Landroid/content/ComponentName;
    .registers 5
    .param p1, "userHandle"  # I

    .line 9101
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 9102
    :try_start_5
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v1

    if-eqz v1, :cond_17

    .line 9105
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 9106
    .local v1, "userData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    if-eqz v1, :cond_14

    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRestrictionsProvider:Landroid/content/ComponentName;

    goto :goto_15

    :cond_14
    const/4 v2, 0x0

    :goto_15
    monitor-exit v0

    return-object v2

    .line 9103
    .end local v1  # "userData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :cond_17
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Only the system can query the permission provider"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "userHandle":I
    throw v1

    .line 9107
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "userHandle":I
    :catchall_1f
    move-exception v1

    monitor-exit v0
    :try_end_21
    .catchall {:try_start_5 .. :try_end_21} :catchall_1f

    throw v1
.end method

.method public getScreenCaptureDisabled(Landroid/content/ComponentName;I)Z
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 7199
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 7200
    return v1

    .line 7202
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7203
    if-eqz p1, :cond_17

    .line 7204
    :try_start_d
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 7205
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_15

    iget-boolean v1, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableScreenCapture:Z

    :cond_15
    monitor-exit v0

    return v1

    .line 7208
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_17
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 7209
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 7210
    .local v3, "N":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_22
    if-ge v4, v3, :cond_36

    .line 7211
    iget-object v5, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 7212
    .local v5, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableScreenCapture:Z

    if-eqz v6, :cond_33

    .line 7213
    monitor-exit v0

    const/4 v0, 0x1

    return v0

    .line 7210
    .end local v5  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_33
    add-int/lit8 v4, v4, 0x1

    goto :goto_22

    .line 7216
    .end local v4  # "i":I
    :cond_36
    monitor-exit v0

    return v1

    .line 7217
    .end local v2  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v3  # "N":I
    :catchall_38
    move-exception v1

    monitor-exit v0
    :try_end_3a
    .catchall {:try_start_d .. :try_end_3a} :catchall_38

    throw v1
.end method

.method public getSecondaryUsers(Landroid/content/ComponentName;)Ljava/util/List;
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            ")",
            "Ljava/util/List<",
            "Landroid/os/UserHandle;",
            ">;"
        }
    .end annotation

    .line 9931
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9932
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 9934
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 9936
    .local v0, "id":J
    :try_start_e
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getUserManager()Landroid/os/UserManager;

    move-result-object v2

    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Landroid/os/UserManager;->getUsers(Z)Ljava/util/List;

    move-result-object v2

    .line 9938
    .local v2, "userInfos":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    .line 9939
    .local v3, "userHandles":Ljava/util/List;, "Ljava/util/List<Landroid/os/UserHandle;>;"
    invoke-interface {v2}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_22
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_4a

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/content/pm/UserInfo;

    .line 9940
    .local v5, "userInfo":Landroid/content/pm/UserInfo;
    invoke-virtual {v5}, Landroid/content/pm/UserInfo;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v6

    .line 9941
    .local v6, "userHandle":Landroid/os/UserHandle;
    invoke-virtual {v6}, Landroid/os/UserHandle;->isSystem()Z

    move-result v7

    if-nez v7, :cond_49

    invoke-virtual {v6}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v7

    invoke-direct {p0, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v7

    if-nez v7, :cond_49

    .line 9942
    invoke-virtual {v5}, Landroid/content/pm/UserInfo;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v7

    invoke-interface {v3, v7}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_49
    .catchall {:try_start_e .. :try_end_49} :catchall_51

    .line 9944
    .end local v5  # "userInfo":Landroid/content/pm/UserInfo;
    .end local v6  # "userHandle":Landroid/os/UserHandle;
    :cond_49
    goto :goto_22

    .line 9945
    :cond_4a
    nop

    .line 9947
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9945
    return-object v3

    .line 9947
    .end local v2  # "userInfos":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    .end local v3  # "userHandles":Ljava/util/List;, "Ljava/util/List<Landroid/os/UserHandle;>;"
    :catchall_51
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method public getShortSupportMessage(Landroid/content/ComponentName;)Ljava/lang/CharSequence;
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 12188
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 12189
    const/4 v0, 0x0

    return-object v0

    .line 12191
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12192
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12193
    :try_start_10
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 12194
    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v1

    .line 12193
    invoke-direct {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForUidLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 12195
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->shortSupportMessage:Ljava/lang/CharSequence;

    monitor-exit v0

    return-object v2

    .line 12196
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_1e
    move-exception v1

    monitor-exit v0
    :try_end_20
    .catchall {:try_start_10 .. :try_end_20} :catchall_1e

    throw v1
.end method

.method public getShortSupportMessageForUser(Landroid/content/ComponentName;I)Ljava/lang/CharSequence;
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 12235
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 12236
    return-object v1

    .line 12238
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12239
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    if-eqz v0, :cond_25

    .line 12242
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12243
    :try_start_16
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 12244
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_20

    .line 12245
    iget-object v1, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->shortSupportMessage:Ljava/lang/CharSequence;

    monitor-exit v0

    return-object v1

    .line 12247
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_20
    monitor-exit v0

    .line 12248
    return-object v1

    .line 12247
    :catchall_22
    move-exception v1

    monitor-exit v0
    :try_end_24
    .catchall {:try_start_16 .. :try_end_24} :catchall_22

    throw v1

    .line 12240
    :cond_25
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only the system can query support message for user"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public bridge synthetic getStartUserSessionMessage(Landroid/content/ComponentName;)Ljava/lang/CharSequence;
    .registers 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 296
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getStartUserSessionMessage(Landroid/content/ComponentName;)Ljava/lang/String;

    move-result-object p1

    return-object p1
.end method

.method public getStartUserSessionMessage(Landroid/content/ComponentName;)Ljava/lang/String;
    .registers 5
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 13857
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 13858
    const/4 v0, 0x0

    return-object v0

    .line 13860
    :cond_6
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13862
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13863
    const/4 v1, -0x2

    .line 13864
    :try_start_f
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 13865
    .local v1, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->startUserSessionMessage:Ljava/lang/String;

    monitor-exit v0

    return-object v2

    .line 13866
    .end local v1  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_17
    move-exception v1

    monitor-exit v0
    :try_end_19
    .catchall {:try_start_f .. :try_end_19} :catchall_17

    throw v1
.end method

.method public getStorageEncryption(Landroid/content/ComponentName;I)Z
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 7070
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 7071
    return v1

    .line 7073
    :cond_6
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 7074
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7076
    if-eqz p1, :cond_1a

    .line 7078
    :try_start_10
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 7079
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_18

    iget-boolean v1, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->encryptionRequested:Z

    :cond_18
    monitor-exit v0

    return v1

    .line 7084
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_1a
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 7085
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 7086
    .local v3, "N":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_25
    if-ge v4, v3, :cond_39

    .line 7087
    iget-object v5, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    iget-boolean v5, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->encryptionRequested:Z

    if-eqz v5, :cond_36

    .line 7088
    monitor-exit v0

    const/4 v0, 0x1

    return v0

    .line 7086
    :cond_36
    add-int/lit8 v4, v4, 0x1

    goto :goto_25

    .line 7091
    .end local v4  # "i":I
    :cond_39
    monitor-exit v0

    return v1

    .line 7092
    .end local v2  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v3  # "N":I
    :catchall_3b
    move-exception v1

    monitor-exit v0
    :try_end_3d
    .catchall {:try_start_10 .. :try_end_3d} :catchall_3b

    throw v1
.end method

.method public getStorageEncryptionStatus(Ljava/lang/String;I)I
    .registers 7
    .param p1, "callerPackage"  # Ljava/lang/String;
    .param p2, "userHandle"  # I

    .line 7100
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    .line 7103
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 7107
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureCallerPackage(Ljava/lang/String;)V

    .line 7111
    :try_start_8
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const/4 v1, 0x0

    invoke-interface {v0, p1, v1, p2}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0
    :try_end_f
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_f} :catch_24

    .line 7114
    .local v0, "ai":Landroid/content/pm/ApplicationInfo;
    nop

    .line 7116
    const/4 v1, 0x0

    .line 7117
    .local v1, "legacyApp":Z
    iget v2, v0, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    const/16 v3, 0x17

    if-gt v2, v3, :cond_18

    .line 7118
    const/4 v1, 0x1

    .line 7121
    :cond_18
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getEncryptionStatus()I

    move-result v2

    .line 7122
    .local v2, "rawStatus":I
    const/4 v3, 0x5

    if-ne v2, v3, :cond_23

    if-eqz v1, :cond_23

    .line 7123
    const/4 v3, 0x3

    return v3

    .line 7125
    :cond_23
    return v2

    .line 7112
    .end local v0  # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v1  # "legacyApp":Z
    .end local v2  # "rawStatus":I
    :catch_24
    move-exception v0

    .line 7113
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public getSystemUpdatePolicy()Landroid/app/admin/SystemUpdatePolicy;
    .registers 5

    .line 11526
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 11527
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getSystemUpdatePolicy()Landroid/app/admin/SystemUpdatePolicy;

    move-result-object v1

    .line 11528
    .local v1, "policy":Landroid/app/admin/SystemUpdatePolicy;
    if-eqz v1, :cond_1d

    invoke-virtual {v1}, Landroid/app/admin/SystemUpdatePolicy;->isValid()Z

    move-result v2

    if-nez v2, :cond_1d

    .line 11529
    const-string v2, "DevicePolicyManager"

    const-string v3, "Stored system update policy is invalid, return null instead."

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11530
    const/4 v2, 0x0

    monitor-exit v0

    return-object v2

    .line 11532
    :cond_1d
    monitor-exit v0

    return-object v1

    .line 11533
    .end local v1  # "policy":Landroid/app/admin/SystemUpdatePolicy;
    :catchall_1f
    move-exception v1

    monitor-exit v0
    :try_end_21
    .catchall {:try_start_5 .. :try_end_21} :catchall_1f

    throw v1
.end method

.method public getTransferOwnershipBundle()Landroid/os/PersistableBundle;
    .registers 9

    .line 13890
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13891
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v1

    .line 13892
    .local v1, "callingUserId":I
    const/4 v2, -0x1

    const/4 v3, 0x0

    invoke-virtual {p0, v3, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 13893
    new-instance v2, Ljava/io/File;

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 13894
    invoke-virtual {v4, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->environmentGetUserSystemDirectory(I)Ljava/io/File;

    move-result-object v4

    const-string/jumbo v5, "transfer-ownership-parameters.xml"

    invoke-direct {v2, v4, v5}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 13896
    .local v2, "bundleFile":Ljava/io/File;
    invoke-virtual {v2}, Ljava/io/File;->exists()Z

    move-result v4

    if-nez v4, :cond_26

    .line 13897
    monitor-exit v0
    :try_end_25
    .catchall {:try_start_5 .. :try_end_25} :catchall_5e

    return-object v3

    .line 13899
    :cond_26
    :try_start_26
    new-instance v4, Ljava/io/FileInputStream;

    invoke-direct {v4, v2}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_2b
    .catch Ljava/io/IOException; {:try_start_26 .. :try_end_2b} :catch_45
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_26 .. :try_end_2b} :catch_45
    .catch Ljava/lang/IllegalArgumentException; {:try_start_26 .. :try_end_2b} :catch_45
    .catchall {:try_start_26 .. :try_end_2b} :catchall_5e

    .line 13900
    .local v4, "stream":Ljava/io/FileInputStream;
    :try_start_2b
    invoke-static {}, Landroid/util/Xml;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;

    move-result-object v5

    .line 13901
    .local v5, "parser":Lorg/xmlpull/v1/XmlPullParser;
    invoke-interface {v5, v4, v3}, Lorg/xmlpull/v1/XmlPullParser;->setInput(Ljava/io/InputStream;Ljava/lang/String;)V

    .line 13902
    invoke-interface {v5}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    .line 13903
    invoke-static {v5}, Landroid/os/PersistableBundle;->restoreFromXml(Lorg/xmlpull/v1/XmlPullParser;)Landroid/os/PersistableBundle;

    move-result-object v6
    :try_end_39
    .catchall {:try_start_2b .. :try_end_39} :catchall_3e

    .line 13904
    :try_start_39
    invoke-static {v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->$closeResource(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V
    :try_end_3c
    .catch Ljava/io/IOException; {:try_start_39 .. :try_end_3c} :catch_45
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_39 .. :try_end_3c} :catch_45
    .catch Ljava/lang/IllegalArgumentException; {:try_start_39 .. :try_end_3c} :catch_45
    .catchall {:try_start_39 .. :try_end_3c} :catchall_5e

    :try_start_3c
    monitor-exit v0
    :try_end_3d
    .catchall {:try_start_3c .. :try_end_3d} :catchall_5e

    .line 13903
    return-object v6

    .line 13899
    .end local v5  # "parser":Lorg/xmlpull/v1/XmlPullParser;
    :catchall_3e
    move-exception v5

    .end local v1  # "callingUserId":I
    .end local v2  # "bundleFile":Ljava/io/File;
    .end local v4  # "stream":Ljava/io/FileInputStream;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    :try_start_3f
    throw v5
    :try_end_40
    .catchall {:try_start_3f .. :try_end_40} :catchall_40

    .line 13904
    .restart local v1  # "callingUserId":I
    .restart local v2  # "bundleFile":Ljava/io/File;
    .restart local v4  # "stream":Ljava/io/FileInputStream;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    :catchall_40
    move-exception v6

    :try_start_41
    invoke-static {v5, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->$closeResource(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    throw v6
    :try_end_45
    .catch Ljava/io/IOException; {:try_start_41 .. :try_end_45} :catch_45
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_41 .. :try_end_45} :catch_45
    .catch Ljava/lang/IllegalArgumentException; {:try_start_41 .. :try_end_45} :catch_45
    .catchall {:try_start_41 .. :try_end_45} :catchall_5e

    .end local v4  # "stream":Ljava/io/FileInputStream;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    :catch_45
    move-exception v4

    .line 13905
    .local v4, "e":Ljava/lang/Exception;
    :try_start_46
    const-string v5, "DevicePolicyManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Caught exception while trying to load the owner transfer parameters from file "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13907
    monitor-exit v0

    return-object v3

    .line 13909
    .end local v1  # "callingUserId":I
    .end local v2  # "bundleFile":Ljava/io/File;
    .end local v4  # "e":Ljava/lang/Exception;
    :catchall_5e
    move-exception v1

    monitor-exit v0
    :try_end_60
    .catchall {:try_start_46 .. :try_end_60} :catchall_5e

    throw v1
.end method

.method public getTrustAgentConfiguration(Landroid/content/ComponentName;Landroid/content/ComponentName;IZ)Ljava/util/List;
    .registers 23
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "agent"  # Landroid/content/ComponentName;
    .param p3, "userHandle"  # I
    .param p4, "parent"  # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Landroid/content/ComponentName;",
            "IZ)",
            "Ljava/util/List<",
            "Landroid/os/PersistableBundle;",
            ">;"
        }
    .end annotation

    .line 9033
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move/from16 v3, p3

    move/from16 v4, p4

    iget-boolean v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v5, 0x0

    if-eqz v0, :cond_d4

    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_19

    move-object/from16 v6, p2

    goto/16 :goto_d6

    .line 9036
    :cond_19
    const-string v0, "agent null"

    move-object/from16 v6, p2

    invoke-static {v6, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9037
    invoke-direct {v1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 9039
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v7

    monitor-enter v7

    .line 9040
    :try_start_28
    invoke-virtual/range {p2 .. p2}, Landroid/content/ComponentName;->flattenToString()Ljava/lang/String;

    move-result-object v0

    .line 9041
    .local v0, "componentName":Ljava/lang/String;
    if-eqz v2, :cond_53

    .line 9042
    invoke-virtual {v1, v2, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v8

    .line 9043
    .local v8, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-nez v8, :cond_36

    monitor-exit v7

    return-object v5

    .line 9044
    :cond_36
    iget-object v9, v8, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->trustAgentInfos:Landroid/util/ArrayMap;

    invoke-virtual {v9, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;

    .line 9045
    .local v9, "trustAgentInfo":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;
    if-eqz v9, :cond_51

    iget-object v10, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;->options:Landroid/os/PersistableBundle;

    if-nez v10, :cond_45

    goto :goto_51

    .line 9046
    :cond_45
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    .line 9047
    .local v5, "result":Ljava/util/List;, "Ljava/util/List<Landroid/os/PersistableBundle;>;"
    iget-object v10, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;->options:Landroid/os/PersistableBundle;

    invoke-interface {v5, v10}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 9048
    monitor-exit v7

    return-object v5

    .line 9045
    .end local v5  # "result":Ljava/util/List;, "Ljava/util/List<Landroid/os/PersistableBundle;>;"
    :cond_51
    :goto_51
    monitor-exit v7

    return-object v5

    .line 9052
    .end local v8  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v9  # "trustAgentInfo":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;
    :cond_53
    const/4 v8, 0x0

    .line 9056
    .local v8, "result":Ljava/util/List;, "Ljava/util/List<Landroid/os/PersistableBundle;>;"
    nop

    .line 9057
    invoke-direct {v1, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminsForLockscreenPoliciesLocked(IZ)Ljava/util/List;

    move-result-object v9

    .line 9058
    .local v9, "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    const/4 v10, 0x1

    .line 9059
    .local v10, "allAdminsHaveOptions":Z
    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v11

    .line 9060
    .local v11, "N":I
    const/4 v12, 0x0

    .local v12, "i":I
    :goto_5f
    if-ge v12, v11, :cond_c6

    .line 9061
    invoke-interface {v9, v12}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 9063
    .local v13, "active":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget v14, v13, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disabledKeyguardFeatures:I

    and-int/lit8 v14, v14, 0x10

    if-eqz v14, :cond_6f

    const/4 v14, 0x1

    goto :goto_70

    :cond_6f
    const/4 v14, 0x0

    .line 9065
    .local v14, "disablesTrust":Z
    :goto_70
    iget-object v15, v13, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->trustAgentInfos:Landroid/util/ArrayMap;

    invoke-virtual {v15, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;

    .line 9066
    .local v15, "info":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;
    if-eqz v15, :cond_b8

    iget-object v5, v15, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;->options:Landroid/os/PersistableBundle;

    if-eqz v5, :cond_b8

    iget-object v5, v15, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;->options:Landroid/os/PersistableBundle;

    invoke-virtual {v5}, Landroid/os/PersistableBundle;->isEmpty()Z

    move-result v5

    if-nez v5, :cond_b8

    .line 9067
    if-eqz v14, :cond_98

    .line 9068
    if-nez v8, :cond_90

    .line 9069
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    move-object v8, v5

    .line 9071
    :cond_90
    iget-object v5, v15, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;->options:Landroid/os/PersistableBundle;

    invoke-interface {v8, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    move-object/from16 v17, v0

    goto :goto_be

    .line 9073
    :cond_98
    const-string v5, "DevicePolicyManager"

    move-object/from16 v17, v0

    .end local v0  # "componentName":Ljava/lang/String;
    .local v17, "componentName":Ljava/lang/String;
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Ignoring admin "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v13, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " because it has trust options but doesn\'t declare KEYGUARD_DISABLE_TRUST_AGENTS"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v5, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_be

    .line 9066
    .end local v17  # "componentName":Ljava/lang/String;
    .restart local v0  # "componentName":Ljava/lang/String;
    :cond_b8
    move-object/from16 v17, v0

    .line 9077
    .end local v0  # "componentName":Ljava/lang/String;
    .restart local v17  # "componentName":Ljava/lang/String;
    if-eqz v14, :cond_be

    .line 9078
    const/4 v10, 0x0

    .line 9079
    goto :goto_c8

    .line 9060
    .end local v13  # "active":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v14  # "disablesTrust":Z
    .end local v15  # "info":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;
    :cond_be
    :goto_be
    add-int/lit8 v12, v12, 0x1

    const/4 v5, 0x0

    move-object/from16 v1, p0

    move-object/from16 v0, v17

    goto :goto_5f

    .end local v17  # "componentName":Ljava/lang/String;
    .restart local v0  # "componentName":Ljava/lang/String;
    :cond_c6
    move-object/from16 v17, v0

    .line 9082
    .end local v0  # "componentName":Ljava/lang/String;
    .end local v12  # "i":I
    .restart local v17  # "componentName":Ljava/lang/String;
    :goto_c8
    if-eqz v10, :cond_cd

    move-object/from16 v16, v8

    goto :goto_cf

    :cond_cd
    const/16 v16, 0x0

    :goto_cf
    monitor-exit v7

    return-object v16

    .line 9083
    .end local v8  # "result":Ljava/util/List;, "Ljava/util/List<Landroid/os/PersistableBundle;>;"
    .end local v9  # "admins":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;>;"
    .end local v10  # "allAdminsHaveOptions":Z
    .end local v11  # "N":I
    .end local v17  # "componentName":Ljava/lang/String;
    :catchall_d1
    move-exception v0

    monitor-exit v7
    :try_end_d3
    .catchall {:try_start_28 .. :try_end_d3} :catchall_d1

    throw v0

    .line 9033
    :cond_d4
    move-object/from16 v6, p2

    .line 9034
    :goto_d6
    const/4 v0, 0x0

    return-object v0
.end method

.method getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .registers 5
    .param p1, "userHandle"  # I

    .line 2289
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 2290
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserData:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    .line 2291
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    if-nez v1, :cond_1d

    .line 2292
    new-instance v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    invoke-direct {v2, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;-><init>(I)V

    move-object v1, v2

    .line 2293
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserData:Landroid/util/SparseArray;

    invoke-virtual {v2, p1, v1}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 2294
    invoke-direct {p0, v1, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->loadSettingsLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;I)V

    .line 2296
    :cond_1d
    monitor-exit v0

    return-object v1

    .line 2297
    .end local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :catchall_1f
    move-exception v1

    monitor-exit v0
    :try_end_21
    .catchall {:try_start_5 .. :try_end_21} :catchall_1f

    throw v1
.end method

.method getUserDataUnchecked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .registers 6
    .param p1, "userHandle"  # I

    .line 2322
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 2324
    .local v0, "ident":J
    :try_start_6
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2
    :try_end_a
    .catchall {:try_start_6 .. :try_end_a} :catchall_10

    .line 2326
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 2324
    return-object v2

    .line 2326
    :catchall_10
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method getUserPasswordMetricsLocked(I)Landroid/app/admin/PasswordMetrics;
    .registers 3
    .param p1, "userHandle"  # I
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = {
            "getLockObject()"
        }
    .end annotation

    .line 2308
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserPasswordMetrics:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/admin/PasswordMetrics;

    return-object v0
.end method

.method public getUserProvisioningState()I
    .registers 3

    .line 8266
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 8267
    const/4 v0, 0x0

    return v0

    .line 8269
    :cond_6
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 8270
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 8271
    .local v0, "userHandle":I
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserProvisioningState(I)I

    move-result v1

    return v1
.end method

.method public getUserRestrictions(Landroid/content/ComponentName;)Landroid/os/Bundle;
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 10137
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 10138
    const/4 v0, 0x0

    return-object v0

    .line 10140
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10141
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10142
    const/4 v1, -0x1

    :try_start_11
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 10144
    .local v1, "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->userRestrictions:Landroid/os/Bundle;

    monitor-exit v0

    return-object v2

    .line 10145
    .end local v1  # "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_19
    move-exception v1

    monitor-exit v0
    :try_end_1b
    .catchall {:try_start_11 .. :try_end_1b} :catchall_19

    throw v1
.end method

.method public getWifiMacAddress(Landroid/content/ComponentName;)Ljava/lang/String;
    .registers 7
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 12097
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 12099
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 12101
    .local v0, "ident":J
    :try_start_9
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getWifiManager()Landroid/net/wifi/WifiManager;

    move-result-object v2

    invoke-virtual {v2}, Landroid/net/wifi/WifiManager;->getFactoryMacAddresses()[Ljava/lang/String;

    move-result-object v2
    :try_end_13
    .catchall {:try_start_9 .. :try_end_13} :catchall_36

    .line 12102
    .local v2, "macAddresses":[Ljava/lang/String;
    const/4 v3, 0x0

    if-nez v2, :cond_1d

    .line 12103
    nop

    .line 12111
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 12103
    return-object v3

    .line 12105
    :cond_1d
    const/16 v4, 0x36

    .line 12106
    :try_start_1f
    invoke-static {v4}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 12107
    invoke-virtual {v4, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 12108
    invoke-virtual {v4}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 12109
    array-length v4, v2

    if-lez v4, :cond_30

    const/4 v3, 0x0

    aget-object v3, v2, v3
    :try_end_30
    .catchall {:try_start_1f .. :try_end_30} :catchall_36

    .line 12111
    :cond_30
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 12109
    return-object v3

    .line 12111
    .end local v2  # "macAddresses":[Ljava/lang/String;
    :catchall_36
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method public grantDeviceIdsAccessToProfileOwner(Landroid/content/ComponentName;I)V
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userId"  # I

    .line 12489
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12491
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_8

    .line 12492
    return-void

    .line 12496
    :cond_8
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    if-nez v0, :cond_23

    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdb()Z

    move-result v0

    if-nez v0, :cond_23

    .line 12497
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasGrantProfileOwnerDevcieIdAccessPermission()Z

    move-result v0

    if-eqz v0, :cond_1b

    goto :goto_23

    .line 12498
    :cond_1b
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only the system can grant Device IDs access for a profile owner."

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12502
    :cond_23
    :goto_23
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdb()Z

    move-result v0

    if-eqz v0, :cond_38

    invoke-direct {p0, p2, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasIncompatibleAccountsOrNonAdbNoLock(ILandroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_30

    goto :goto_38

    .line 12503
    :cond_30
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Can only be called from ADB if the device has no accounts."

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12508
    :cond_38
    :goto_38
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12511
    :try_start_3d
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProfileOwner(Landroid/content/ComponentName;I)Z

    move-result v1

    const/4 v2, 0x1

    const/4 v3, 0x0

    const/4 v4, 0x2

    if-eqz v1, :cond_66

    .line 12517
    const-string v1, "DevicePolicyManager"

    const-string v5, "Granting Device ID access to %s, for user %d"

    new-array v4, v4, [Ljava/lang/Object;

    .line 12518
    invoke-virtual {p1}, Landroid/content/ComponentName;->flattenToString()Ljava/lang/String;

    move-result-object v6

    aput-object v6, v4, v3

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v4, v2

    .line 12517
    invoke-static {v5, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12522
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p2}, Lcom/android/server/devicepolicy/Owners;->setProfileOwnerCanAccessDeviceIds(I)V

    .line 12523
    monitor-exit v0

    .line 12524
    return-void

    .line 12512
    :cond_66
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v5, "Component %s is not a Profile Owner of user %d"

    new-array v4, v4, [Ljava/lang/Object;

    .line 12514
    invoke-virtual {p1}, Landroid/content/ComponentName;->flattenToString()Ljava/lang/String;

    move-result-object v6

    aput-object v6, v4, v3

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v4, v2

    .line 12512
    invoke-static {v5, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "userId":I
    throw v1

    .line 12523
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "userId":I
    :catchall_80
    move-exception v1

    monitor-exit v0
    :try_end_82
    .catchall {:try_start_3d .. :try_end_82} :catchall_80

    throw v1
.end method

.method handleStartUser(I)V
    .registers 3
    .param p1, "userId"  # I

    .line 3650
    nop

    .line 3651
    const/4 v0, 0x0

    invoke-virtual {p0, v0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getScreenCaptureDisabled(Landroid/content/ComponentName;I)Z

    move-result v0

    .line 3650
    invoke-direct {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateScreenCaptureDisabled(IZ)V

    .line 3652
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushUserRestrictions(I)V

    .line 3656
    nop

    .line 3657
    if-nez p1, :cond_11

    const/4 v0, -0x1

    goto :goto_12

    :cond_11
    move v0, p1

    .line 3656
    :goto_12
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordQualityCacheForUserGroup(I)V

    .line 3659
    const-string/jumbo v0, "start-user"

    invoke-direct {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->startOwnerService(ILjava/lang/String;)V

    .line 3660
    return-void
.end method

.method handleStopUser(I)V
    .registers 3
    .param p1, "userId"  # I

    .line 3669
    const-string/jumbo v0, "stop-user"

    invoke-direct {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->stopOwnerService(ILjava/lang/String;)V

    .line 3670
    return-void
.end method

.method handleUnlockUser(I)V
    .registers 3
    .param p1, "userId"  # I

    .line 3664
    const-string/jumbo v0, "unlock-user"

    invoke-direct {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->startOwnerService(ILjava/lang/String;)V

    .line 3665
    return-void
.end method

.method public hasDeviceOwner()Z
    .registers 2

    .line 7862
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwnerOrManageUsers()V

    .line 7863
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v0

    return v0
.end method

.method public hasGrantedPolicy(Landroid/content/ComponentName;II)Z
    .registers 9
    .param p1, "adminReceiver"  # Landroid/content/ComponentName;
    .param p2, "policyId"  # I
    .param p3, "userHandle"  # I

    .line 3953
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 3954
    const/4 v0, 0x0

    return v0

    .line 3956
    :cond_6
    invoke-direct {p0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 3957
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 3958
    :try_start_e
    invoke-virtual {p0, p1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 3959
    .local v1, "administrator":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v1, :cond_1c

    .line 3962
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v2, p2}, Landroid/app/admin/DeviceAdminInfo;->usesPolicy(I)Z

    move-result v2

    monitor-exit v0

    return v2

    .line 3960
    :cond_1c
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "No active admin "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "adminReceiver":Landroid/content/ComponentName;
    .end local p2  # "policyId":I
    .end local p3  # "userHandle":I
    throw v2

    .line 3963
    .end local v1  # "administrator":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "adminReceiver":Landroid/content/ComponentName;
    .restart local p2  # "policyId":I
    .restart local p3  # "userHandle":I
    :catchall_33
    move-exception v1

    monitor-exit v0
    :try_end_35
    .catchall {:try_start_e .. :try_end_35} :catchall_33

    throw v1
.end method

.method public hasUserSetupCompleted()Z
    .registers 2

    .line 8244
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasUserSetupCompleted(I)Z

    move-result v0

    return v0
.end method

.method public installCaCert(Landroid/content/ComponentName;Ljava/lang/String;[B)Z
    .registers 12
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "certBuffer"  # [B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 5584
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 5585
    return v1

    .line 5587
    :cond_6
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageCaCerts(Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 5591
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v0

    .line 5592
    .local v0, "userHandle":Landroid/os/UserHandle;
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2

    .line 5594
    .local v2, "id":J
    :try_start_15
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mCertificateMonitor:Lcom/android/server/devicepolicy/CertificateMonitor;

    invoke-virtual {v4, v0, p3}, Lcom/android/server/devicepolicy/CertificateMonitor;->installCaCert(Landroid/os/UserHandle;[B)Ljava/lang/String;

    move-result-object v4

    .line 5595
    .local v4, "alias":Ljava/lang/String;
    const/4 v5, 0x1

    if-nez p1, :cond_20

    move v6, v5

    goto :goto_21

    :cond_20
    move v6, v1

    .line 5596
    .local v6, "isDelegate":Z
    :goto_21
    const/16 v7, 0x15

    .line 5597
    invoke-static {v7}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v7

    .line 5598
    invoke-virtual {v7, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v7

    .line 5599
    invoke-virtual {v7, v6}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v7

    .line 5600
    invoke-virtual {v7}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 5601
    if-nez v4, :cond_42

    .line 5602
    const-string v5, "DevicePolicyManager"

    const-string v7, "Problem installing cert"

    invoke-static {v5, v7}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3b
    .catchall {:try_start_15 .. :try_end_3b} :catchall_66

    .line 5603
    nop

    .line 5606
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5603
    return v1

    .line 5606
    .end local v6  # "isDelegate":Z
    :cond_42
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5607
    nop

    .line 5609
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 5610
    :try_start_4d
    invoke-virtual {v0}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v6

    invoke-virtual {p0, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v6

    iget-object v6, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mOwnerInstalledCaCerts:Ljava/util/Set;

    invoke-interface {v6, v4}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 5611
    invoke-virtual {v0}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v6

    invoke-direct {p0, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 5612
    monitor-exit v1

    .line 5613
    return v5

    .line 5612
    :catchall_63
    move-exception v5

    monitor-exit v1
    :try_end_65
    .catchall {:try_start_4d .. :try_end_65} :catchall_63

    throw v5

    .line 5606
    .end local v4  # "alias":Ljava/lang/String;
    :catchall_66
    move-exception v1

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v1
.end method

.method public installExistingPackage(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)Z
    .registers 15
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "packageName"  # Ljava/lang/String;

    .line 10324
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10326
    const/4 v1, -0x1

    :try_start_6
    const-string v2, "delegation-install-existing-package"

    invoke-direct {p0, p1, p2, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 10328
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v1

    .line 10329
    .local v1, "callingUserId":I
    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isUserAffiliatedWithDeviceLocked(I)Z

    move-result v2

    if-eqz v2, :cond_69

    .line 10334
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2
    :try_end_1d
    .catchall {:try_start_6 .. :try_end_1d} :catchall_85

    move-wide v8, v2

    .line 10342
    .local v8, "id":J
    const/4 v10, 0x0

    :try_start_1f
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const/high16 v5, 0x400000

    const/4 v6, 0x1

    const/4 v7, 0x0

    move-object v3, p3

    move v4, v1

    invoke-interface/range {v2 .. v7}, Landroid/content/pm/IPackageManager;->installExistingPackageAsUser(Ljava/lang/String;IIILjava/util/List;)I

    move-result v2
    :try_end_2b
    .catch Landroid/os/RemoteException; {:try_start_1f .. :try_end_2b} :catch_60
    .catchall {:try_start_1f .. :try_end_2b} :catchall_59

    const/4 v3, 0x1

    if-ne v2, v3, :cond_30

    move v2, v3

    goto :goto_31

    :cond_30
    move v2, v10

    .line 10350
    .local v2, "result":Z
    :goto_31
    :try_start_31
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v8, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 10351
    nop

    .line 10352
    .end local v1  # "callingUserId":I
    .end local v8  # "id":J
    monitor-exit v0
    :try_end_38
    .catchall {:try_start_31 .. :try_end_38} :catchall_85

    .line 10353
    if-eqz v2, :cond_58

    .line 10354
    if-nez p1, :cond_3e

    move v0, v3

    goto :goto_3f

    :cond_3e
    move v0, v10

    .line 10355
    .local v0, "isDelegate":Z
    :goto_3f
    const/16 v1, 0x42

    .line 10356
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 10357
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 10358
    invoke-virtual {v1, v0}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    new-array v3, v3, [Ljava/lang/String;

    aput-object p3, v3, v10

    .line 10359
    invoke-virtual {v1, v3}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 10360
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10362
    .end local v0  # "isDelegate":Z
    :cond_58
    return v2

    .line 10350
    .end local v2  # "result":Z
    .restart local v1  # "callingUserId":I
    .restart local v8  # "id":J
    :catchall_59
    move-exception v2

    :try_start_5a
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v8, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageName":Ljava/lang/String;
    throw v2

    .line 10346
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageName":Ljava/lang/String;
    :catch_60
    move-exception v2

    .line 10348
    .local v2, "re":Landroid/os/RemoteException;
    nop

    .line 10350
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v8, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v0

    .line 10348
    return v10

    .line 10330
    .end local v2  # "re":Landroid/os/RemoteException;
    .end local v8  # "id":J
    :cond_69
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Admin "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " is neither the device owner or affiliated user\'s profile owner."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageName":Ljava/lang/String;
    throw v2

    .line 10352
    .end local v1  # "callingUserId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageName":Ljava/lang/String;
    :catchall_85
    move-exception v1

    monitor-exit v0
    :try_end_87
    .catchall {:try_start_5a .. :try_end_87} :catchall_85

    throw v1
.end method

.method public installKeyPair(Landroid/content/ComponentName;Ljava/lang/String;[B[B[BLjava/lang/String;ZZ)Z
    .registers 27
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "privKey"  # [B
    .param p4, "cert"  # [B
    .param p5, "chain"  # [B
    .param p6, "alias"  # Ljava/lang/String;
    .param p7, "requestAccess"  # Z
    .param p8, "isUserSelectable"  # Z

    .line 5648
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p6

    const-string v5, "DevicePolicyManager"

    const/4 v0, -0x1

    const-string v6, "delegation-cert-install"

    invoke-direct {v1, v2, v3, v0, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 5652
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v6

    .line 5653
    .local v6, "callingUid":I
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v7

    .line 5655
    .local v7, "id":J
    const/4 v9, 0x0

    :try_start_1d
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 5656
    invoke-static {v6}, Landroid/os/UserHandle;->getUserHandleForUid(I)Landroid/os/UserHandle;

    move-result-object v10

    invoke-static {v0, v10}, Landroid/security/KeyChain;->bindAsUser(Landroid/content/Context;Landroid/os/UserHandle;)Landroid/security/KeyChain$KeyChainConnection;

    move-result-object v0
    :try_end_27
    .catch Ljava/lang/InterruptedException; {:try_start_1d .. :try_end_27} :catch_ae
    .catchall {:try_start_1d .. :try_end_27} :catchall_a4

    move-object v10, v0

    .line 5658
    .local v10, "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    :try_start_28
    invoke-virtual {v10}, Landroid/security/KeyChain$KeyChainConnection;->getService()Landroid/security/IKeyChainService;

    move-result-object v0
    :try_end_2c
    .catch Landroid/os/RemoteException; {:try_start_28 .. :try_end_2c} :catch_8a
    .catchall {:try_start_28 .. :try_end_2c} :catchall_80

    .line 5659
    .local v0, "keyChain":Landroid/security/IKeyChainService;
    move-object/from16 v11, p3

    move-object/from16 v12, p4

    move-object/from16 v13, p5

    :try_start_32
    invoke-interface {v0, v11, v12, v13, v4}, Landroid/security/IKeyChainService;->installKeyPair([B[B[BLjava/lang/String;)Z

    move-result v14
    :try_end_36
    .catch Landroid/os/RemoteException; {:try_start_32 .. :try_end_36} :catch_7e
    .catchall {:try_start_32 .. :try_end_36} :catchall_7c

    if-nez v14, :cond_48

    .line 5660
    nop

    .line 5676
    :try_start_39
    invoke-virtual {v10}, Landroid/security/KeyChain$KeyChainConnection;->close()V
    :try_end_3c
    .catch Ljava/lang/InterruptedException; {:try_start_39 .. :try_end_3c} :catch_45
    .catchall {:try_start_39 .. :try_end_3c} :catchall_42

    .line 5682
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5660
    return v9

    .line 5682
    .end local v0  # "keyChain":Landroid/security/IKeyChainService;
    .end local v10  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    :catchall_42
    move-exception v0

    goto/16 :goto_ab

    .line 5678
    :catch_45
    move-exception v0

    goto/16 :goto_b5

    .line 5662
    .restart local v0  # "keyChain":Landroid/security/IKeyChainService;
    .restart local v10  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    :cond_48
    const/4 v14, 0x1

    if-eqz p7, :cond_4e

    .line 5663
    :try_start_4b
    invoke-interface {v0, v6, v4, v14}, Landroid/security/IKeyChainService;->setGrant(ILjava/lang/String;Z)V
    :try_end_4e
    .catch Landroid/os/RemoteException; {:try_start_4b .. :try_end_4e} :catch_7e
    .catchall {:try_start_4b .. :try_end_4e} :catchall_7c

    .line 5665
    :cond_4e
    move/from16 v15, p8

    :try_start_50
    invoke-interface {v0, v4, v15}, Landroid/security/IKeyChainService;->setUserSelectable(Ljava/lang/String;Z)V

    .line 5666
    if-nez v2, :cond_58

    move/from16 v16, v14

    goto :goto_5a

    :cond_58
    move/from16 v16, v9

    :goto_5a
    move/from16 v17, v16

    .line 5667
    .local v17, "isDelegate":Z
    const/16 v16, 0x14

    .line 5668
    invoke-static/range {v16 .. v16}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    .line 5669
    invoke-virtual {v9, v3}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    .line 5670
    move/from16 v14, v17

    .end local v17  # "isDelegate":Z
    .local v14, "isDelegate":Z
    invoke-virtual {v9, v14}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    .line 5671
    invoke-virtual {v9}, Landroid/app/admin/DevicePolicyEventLogger;->write()V
    :try_end_6f
    .catch Landroid/os/RemoteException; {:try_start_50 .. :try_end_6f} :catch_7a
    .catchall {:try_start_50 .. :try_end_6f} :catchall_9d

    .line 5672
    nop

    .line 5676
    :try_start_70
    invoke-virtual {v10}, Landroid/security/KeyChain$KeyChainConnection;->close()V
    :try_end_73
    .catch Ljava/lang/InterruptedException; {:try_start_70 .. :try_end_73} :catch_a2
    .catchall {:try_start_70 .. :try_end_73} :catchall_cb

    .line 5682
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5672
    const/4 v5, 0x1

    return v5

    .line 5673
    .end local v0  # "keyChain":Landroid/security/IKeyChainService;
    .end local v14  # "isDelegate":Z
    :catch_7a
    move-exception v0

    goto :goto_93

    .line 5676
    :catchall_7c
    move-exception v0

    goto :goto_87

    .line 5673
    :catch_7e
    move-exception v0

    goto :goto_91

    .line 5676
    :catchall_80
    move-exception v0

    move-object/from16 v11, p3

    move-object/from16 v12, p4

    move-object/from16 v13, p5

    :goto_87
    move/from16 v15, p8

    goto :goto_9e

    .line 5673
    :catch_8a
    move-exception v0

    move-object/from16 v11, p3

    move-object/from16 v12, p4

    move-object/from16 v13, p5

    :goto_91
    move/from16 v15, p8

    .line 5674
    .local v0, "e":Landroid/os/RemoteException;
    :goto_93
    :try_start_93
    const-string v9, "Installing certificate"

    invoke-static {v5, v9, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_98
    .catchall {:try_start_93 .. :try_end_98} :catchall_9d

    .line 5676
    nop

    .end local v0  # "e":Landroid/os/RemoteException;
    :try_start_99
    invoke-virtual {v10}, Landroid/security/KeyChain$KeyChainConnection;->close()V

    .line 5677
    goto :goto_c3

    .line 5676
    :catchall_9d
    move-exception v0

    :goto_9e
    invoke-virtual {v10}, Landroid/security/KeyChain$KeyChainConnection;->close()V

    .end local v6  # "callingUid":I
    .end local v7  # "id":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "privKey":[B
    .end local p4  # "cert":[B
    .end local p5  # "chain":[B
    .end local p6  # "alias":Ljava/lang/String;
    .end local p7  # "requestAccess":Z
    .end local p8  # "isUserSelectable":Z
    throw v0
    :try_end_a2
    .catch Ljava/lang/InterruptedException; {:try_start_99 .. :try_end_a2} :catch_a2
    .catchall {:try_start_99 .. :try_end_a2} :catchall_cb

    .line 5678
    .end local v10  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .restart local v6  # "callingUid":I
    .restart local v7  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "privKey":[B
    .restart local p4  # "cert":[B
    .restart local p5  # "chain":[B
    .restart local p6  # "alias":Ljava/lang/String;
    .restart local p7  # "requestAccess":Z
    .restart local p8  # "isUserSelectable":Z
    :catch_a2
    move-exception v0

    goto :goto_b7

    .line 5682
    :catchall_a4
    move-exception v0

    move-object/from16 v11, p3

    move-object/from16 v12, p4

    move-object/from16 v13, p5

    :goto_ab
    move/from16 v15, p8

    goto :goto_cc

    .line 5678
    :catch_ae
    move-exception v0

    move-object/from16 v11, p3

    move-object/from16 v12, p4

    move-object/from16 v13, p5

    :goto_b5
    move/from16 v15, p8

    .line 5679
    .local v0, "e":Ljava/lang/InterruptedException;
    :goto_b7
    :try_start_b7
    const-string v9, "Interrupted while installing certificate"

    invoke-static {v5, v9, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5680
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Thread;->interrupt()V
    :try_end_c3
    .catchall {:try_start_b7 .. :try_end_c3} :catchall_cb

    .line 5682
    .end local v0  # "e":Ljava/lang/InterruptedException;
    :goto_c3
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5683
    nop

    .line 5684
    const/4 v5, 0x0

    return v5

    .line 5682
    :catchall_cb
    move-exception v0

    :goto_cc
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0
.end method

.method public installUpdateFromFile(Landroid/content/ComponentName;Landroid/os/ParcelFileDescriptor;Landroid/app/admin/StartInstallingUpdateCallback;)V
    .registers 13
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "updateFileDescriptor"  # Landroid/os/ParcelFileDescriptor;
    .param p3, "callback"  # Landroid/app/admin/StartInstallingUpdateCallback;

    .line 14216
    nop

    .line 14217
    const/16 v0, 0x49

    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 14218
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 14219
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceAB()Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 14220
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 14221
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 14222
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 14225
    .local v0, "id":J
    :try_start_1f
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceAB()Z

    move-result v2

    if-eqz v2, :cond_34

    .line 14226
    new-instance v2, Lcom/android/server/devicepolicy/AbUpdateInstaller;

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    iget-object v8, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mConstants:Lcom/android/server/devicepolicy/DevicePolicyConstants;

    move-object v3, v2

    move-object v5, p2

    move-object v6, p3

    invoke-direct/range {v3 .. v8}, Lcom/android/server/devicepolicy/AbUpdateInstaller;-><init>(Landroid/content/Context;Landroid/os/ParcelFileDescriptor;Landroid/app/admin/StartInstallingUpdateCallback;Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;Lcom/android/server/devicepolicy/DevicePolicyConstants;)V

    .local v2, "updateInstaller":Lcom/android/server/devicepolicy/UpdateInstaller;
    goto :goto_42

    .line 14229
    .end local v2  # "updateInstaller":Lcom/android/server/devicepolicy/UpdateInstaller;
    :cond_34
    new-instance v2, Lcom/android/server/devicepolicy/NonAbUpdateInstaller;

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    iget-object v8, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mConstants:Lcom/android/server/devicepolicy/DevicePolicyConstants;

    move-object v3, v2

    move-object v5, p2

    move-object v6, p3

    invoke-direct/range {v3 .. v8}, Lcom/android/server/devicepolicy/NonAbUpdateInstaller;-><init>(Landroid/content/Context;Landroid/os/ParcelFileDescriptor;Landroid/app/admin/StartInstallingUpdateCallback;Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;Lcom/android/server/devicepolicy/DevicePolicyConstants;)V

    .line 14232
    .restart local v2  # "updateInstaller":Lcom/android/server/devicepolicy/UpdateInstaller;
    :goto_42
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/UpdateInstaller;->startInstallUpdate()V
    :try_end_45
    .catchall {:try_start_1f .. :try_end_45} :catchall_4c

    .line 14234
    .end local v2  # "updateInstaller":Lcom/android/server/devicepolicy/UpdateInstaller;
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 14235
    nop

    .line 14236
    return-void

    .line 14234
    :catchall_4c
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method public isAccessibilityServicePermittedByAdmin(Landroid/content/ComponentName;Ljava/lang/String;I)Z
    .registers 8
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;
    .param p3, "userHandle"  # I

    .line 9364
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x1

    if-nez v0, :cond_6

    .line 9365
    return v1

    .line 9367
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9368
    const-string/jumbo v0, "packageName is null"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkStringNotEmpty(Ljava/lang/CharSequence;Ljava/lang/Object;)Ljava/lang/CharSequence;

    .line 9369
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    if-eqz v0, :cond_3a

    .line 9373
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 9374
    :try_start_1c
    invoke-virtual {p0, p1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 9375
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-nez v2, :cond_25

    .line 9376
    const/4 v1, 0x0

    monitor-exit v0

    return v1

    .line 9378
    :cond_25
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedAccessiblityServices:Ljava/util/List;

    if-nez v3, :cond_2b

    .line 9379
    monitor-exit v0

    return v1

    .line 9381
    :cond_2b
    invoke-static {p2}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v1

    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedAccessiblityServices:Ljava/util/List;

    invoke-direct {p0, v1, v3, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkPackagesInPermittedListOrSystem(Ljava/util/List;Ljava/util/List;I)Z

    move-result v1

    monitor-exit v0

    return v1

    .line 9383
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_37
    move-exception v1

    monitor-exit v0
    :try_end_39
    .catchall {:try_start_1c .. :try_end_39} :catchall_37

    throw v1

    .line 9370
    :cond_3a
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only the system can query if an accessibility service is disabled by admin"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method isActiveAdminWithPolicyForUserLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;II)Z
    .registers 10
    .param p1, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .param p2, "reqPolicy"  # I
    .param p3, "userId"  # I
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 2845
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureLocked()V

    .line 2846
    iget-object v0, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v0}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    invoke-virtual {p0, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v0

    .line 2847
    .local v0, "ownsDevice":Z
    iget-object v1, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v1}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    invoke-virtual {p0, v1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProfileOwner(Landroid/content/ComponentName;I)Z

    move-result v1

    .line 2849
    .local v1, "ownsProfile":Z
    const/4 v2, -0x2

    if-ne p2, v2, :cond_1b

    .line 2850
    return v0

    .line 2851
    :cond_1b
    const/4 v2, -0x1

    const/4 v3, 0x0

    const/4 v4, 0x1

    if-ne p2, v2, :cond_26

    .line 2853
    if-nez v0, :cond_24

    if-eqz v1, :cond_25

    :cond_24
    move v3, v4

    :cond_25
    return v3

    .line 2855
    :cond_26
    if-nez v0, :cond_47

    if-nez v1, :cond_47

    sget-object v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DA_DISALLOWED_POLICIES:Ljava/util/Set;

    .line 2856
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-interface {v2, v5}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_47

    iget-object v2, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    .line 2857
    invoke-virtual {v2}, Landroid/app/admin/DeviceAdminInfo;->getPackageName()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTargetSdk(Ljava/lang/String;I)I

    move-result v2

    const/16 v5, 0x1d

    if-ge v2, v5, :cond_45

    goto :goto_47

    :cond_45
    move v2, v3

    goto :goto_48

    :cond_47
    :goto_47
    move v2, v4

    .line 2858
    .local v2, "allowedToUsePolicy":Z
    :goto_48
    if-eqz v2, :cond_53

    iget-object v5, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v5, p2}, Landroid/app/admin/DeviceAdminInfo;->usesPolicy(I)Z

    move-result v5

    if-eqz v5, :cond_53

    move v3, v4

    :cond_53
    return v3
.end method

.method public isActivePasswordSufficient(IZ)Z
    .registers 8
    .param p1, "userHandle"  # I
    .param p2, "parent"  # Z

    .line 4747
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 4748
    const/4 v0, 0x1

    return v0

    .line 4750
    :cond_6
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 4751
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceUserUnlocked(IZ)V

    .line 4753
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 4756
    const/4 v1, 0x0

    const/4 v2, 0x0

    :try_start_13
    invoke-virtual {p0, v1, v2, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4757
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCredentialOwner(IZ)I

    move-result v1

    .line 4758
    .local v1, "credentialOwner":I
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserDataUnchecked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 4759
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserPasswordMetricsLocked(I)Landroid/app/admin/PasswordMetrics;

    move-result-object v3

    .line 4760
    .local v3, "metrics":Landroid/app/admin/PasswordMetrics;
    iget-boolean v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordValidAtLastCheckpoint:Z

    invoke-direct {p0, v4, v3, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isActivePasswordSufficientForUserLocked(ZLandroid/app/admin/PasswordMetrics;IZ)Z

    move-result v4

    monitor-exit v0

    return v4

    .line 4762
    .end local v1  # "credentialOwner":I
    .end local v2  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v3  # "metrics":Landroid/app/admin/PasswordMetrics;
    :catchall_2a
    move-exception v1

    monitor-exit v0
    :try_end_2c
    .catchall {:try_start_13 .. :try_end_2c} :catchall_2a

    throw v1
.end method

.method public isAdminActive(Landroid/content/ComponentName;I)Z
    .registers 6
    .param p1, "adminReceiver"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 3930
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 3931
    return v1

    .line 3933
    :cond_6
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 3934
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 3935
    :try_start_e
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    if-eqz v2, :cond_15

    const/4 v1, 0x1

    :cond_15
    monitor-exit v0

    return v1

    .line 3936
    :catchall_17
    move-exception v1

    monitor-exit v0
    :try_end_19
    .catchall {:try_start_e .. :try_end_19} :catchall_17

    throw v1
.end method

.method public isAffiliatedUser()Z
    .registers 3

    .line 12595
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 12596
    const/4 v0, 0x0

    return v0

    .line 12599
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12600
    :try_start_b
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v1

    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isUserAffiliatedWithDeviceLocked(I)Z

    move-result v1

    monitor-exit v0

    return v1

    .line 12601
    :catchall_17
    move-exception v1

    monitor-exit v0
    :try_end_19
    .catchall {:try_start_b .. :try_end_19} :catchall_17

    throw v1
.end method

.method public isAlwaysOnVpnLockdownEnabled(Landroid/content/ComponentName;)Z
    .registers 7
    .param p1, "admin"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 6469
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 6471
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 6472
    .local v0, "userId":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 6474
    .local v1, "token":J
    :try_start_f
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getConnectivityManager()Landroid/net/ConnectivityManager;

    move-result-object v3

    invoke-virtual {v3, v0}, Landroid/net/ConnectivityManager;->isVpnLockdownEnabled(I)Z

    move-result v3
    :try_end_19
    .catchall {:try_start_f .. :try_end_19} :catchall_1f

    .line 6476
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 6474
    return v3

    .line 6476
    :catchall_1f
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method public isApplicationHidden(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)Z
    .registers 11
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "packageName"  # Ljava/lang/String;

    .line 10182
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 10183
    .local v0, "callingUserId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 10185
    const/4 v2, -0x1

    :try_start_a
    const-string v3, "delegation-package-access"

    invoke-direct {p0, p1, p2, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 10188
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2
    :try_end_15
    .catchall {:try_start_a .. :try_end_15} :catchall_3c

    .line 10190
    .local v2, "id":J
    :try_start_15
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-interface {v4, p3, v0}, Landroid/content/pm/IPackageManager;->getApplicationHiddenSettingAsUser(Ljava/lang/String;I)Z

    move-result v4
    :try_end_1b
    .catch Landroid/os/RemoteException; {:try_start_15 .. :try_end_1b} :catch_24
    .catchall {:try_start_15 .. :try_end_1b} :catchall_22

    .line 10196
    :try_start_1b
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v1
    :try_end_21
    .catchall {:try_start_1b .. :try_end_21} :catchall_3c

    .line 10190
    return v4

    .line 10196
    :catchall_22
    move-exception v4

    goto :goto_36

    .line 10192
    :catch_24
    move-exception v4

    .line 10194
    .local v4, "re":Landroid/os/RemoteException;
    :try_start_25
    const-string v5, "DevicePolicyManager"

    const-string v6, "Failed to getApplicationHiddenSettingAsUser"

    invoke-static {v5, v6, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2c
    .catchall {:try_start_25 .. :try_end_2c} :catchall_22

    .line 10196
    nop

    .end local v4  # "re":Landroid/os/RemoteException;
    :try_start_2d
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 10197
    nop

    .line 10198
    const/4 v4, 0x0

    monitor-exit v1

    return v4

    .line 10196
    :goto_36
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "callingUserId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageName":Ljava/lang/String;
    throw v4

    .line 10199
    .end local v2  # "id":J
    .restart local v0  # "callingUserId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageName":Ljava/lang/String;
    :catchall_3c
    move-exception v2

    monitor-exit v1
    :try_end_3e
    .catchall {:try_start_2d .. :try_end_3e} :catchall_3c

    throw v2
.end method

.method public isBackupServiceEnabled(Landroid/content/ComponentName;)Z
    .registers 6
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 12998
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12999
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x1

    if-nez v0, :cond_9

    .line 13000
    return v1

    .line 13003
    :cond_9
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 13004
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13006
    :try_start_11
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIBackupManager()Landroid/app/backup/IBackupManager;

    move-result-object v2

    .line 13007
    .local v2, "ibm":Landroid/app/backup/IBackupManager;
    if-eqz v2, :cond_26

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 13008
    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v3

    .line 13007
    invoke-interface {v2, v3}, Landroid/app/backup/IBackupManager;->isBackupServiceActive(I)Z

    move-result v3
    :try_end_23
    .catch Landroid/os/RemoteException; {:try_start_11 .. :try_end_23} :catch_2b
    .catchall {:try_start_11 .. :try_end_23} :catchall_29

    if-eqz v3, :cond_26

    goto :goto_27

    :cond_26
    const/4 v1, 0x0

    :goto_27
    :try_start_27
    monitor-exit v0

    return v1

    .line 13012
    .end local v2  # "ibm":Landroid/app/backup/IBackupManager;
    :catchall_29
    move-exception v1

    goto :goto_34

    .line 13009
    :catch_2b
    move-exception v1

    .line 13010
    .local v1, "e":Landroid/os/RemoteException;
    new-instance v2, Ljava/lang/IllegalStateException;

    const-string v3, "Failed requesting backup service state."

    invoke-direct {v2, v3, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    throw v2

    .line 13012
    .end local v1  # "e":Landroid/os/RemoteException;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    :goto_34
    monitor-exit v0
    :try_end_35
    .catchall {:try_start_27 .. :try_end_35} :catchall_29

    throw v1
.end method

.method public isCaCertApproved(Ljava/lang/String;I)Z
    .registers 5
    .param p1, "alias"  # Ljava/lang/String;
    .param p2, "userId"  # I

    .line 5559
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 5560
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 5561
    :try_start_8
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    iget-object v1, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAcceptedCaCertificates:Landroid/util/ArraySet;

    invoke-virtual {v1, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v1

    monitor-exit v0

    return v1

    .line 5562
    :catchall_14
    move-exception v1

    monitor-exit v0
    :try_end_16
    .catchall {:try_start_8 .. :try_end_16} :catchall_14

    throw v1
.end method

.method public isCallerApplicationRestrictionsManagingPackage(Ljava/lang/String;)Z
    .registers 4
    .param p1, "callerPackage"  # Ljava/lang/String;

    .line 8987
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    const-string v1, "delegation-app-restrictions"

    invoke-direct {p0, p1, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerDelegate(Ljava/lang/String;ILjava/lang/String;)Z

    move-result v0

    return v0
.end method

.method isCallerDeviceOwner(I)Z
    .registers 10
    .param p1, "callerUid"  # I
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 11621
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 11622
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v1

    const/4 v2, 0x0

    if-nez v1, :cond_10

    .line 11623
    monitor-exit v0

    return v2

    .line 11625
    :cond_10
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v3

    if-eq v1, v3, :cond_1e

    .line 11626
    monitor-exit v0

    return v2

    .line 11628
    :cond_1e
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v1

    .line 11629
    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1
    :try_end_28
    .catchall {:try_start_5 .. :try_end_28} :catchall_4a

    .line 11631
    .local v1, "deviceOwnerPackageName":Ljava/lang/String;
    :try_start_28
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    invoke-interface {v3, p1}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object v3

    .line 11632
    .local v3, "pkgs":[Ljava/lang/String;
    array-length v4, v3

    move v5, v2

    :goto_34
    if-ge v5, v4, :cond_44

    aget-object v6, v3, v5

    .line 11633
    .local v6, "pkg":Ljava/lang/String;
    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7
    :try_end_3c
    .catch Landroid/os/RemoteException; {:try_start_28 .. :try_end_3c} :catch_47
    .catchall {:try_start_28 .. :try_end_3c} :catchall_4a

    if-eqz v7, :cond_41

    .line 11634
    :try_start_3e
    monitor-exit v0

    const/4 v0, 0x1

    return v0

    .line 11632
    .end local v6  # "pkg":Ljava/lang/String;
    :cond_41
    add-int/lit8 v5, v5, 0x1

    goto :goto_34

    .line 11639
    .end local v3  # "pkgs":[Ljava/lang/String;
    :cond_44
    nop

    .line 11640
    .end local v1  # "deviceOwnerPackageName":Ljava/lang/String;
    monitor-exit v0

    .line 11641
    return v2

    .line 11637
    .restart local v1  # "deviceOwnerPackageName":Ljava/lang/String;
    :catch_47
    move-exception v3

    .line 11638
    .local v3, "e":Landroid/os/RemoteException;
    monitor-exit v0

    return v2

    .line 11640
    .end local v1  # "deviceOwnerPackageName":Ljava/lang/String;
    .end local v3  # "e":Landroid/os/RemoteException;
    :catchall_4a
    move-exception v1

    monitor-exit v0
    :try_end_4c
    .catchall {:try_start_3e .. :try_end_4c} :catchall_4a

    throw v1
.end method

.method public isCurrentInputMethodSetByOwner()Z
    .registers 2

    .line 13583
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOwnerOrSystemUser()V

    .line 13584
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    iget-boolean v0, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mCurrentInputMethodSet:Z

    return v0
.end method

.method public isDeviceOwner(Landroid/content/ComponentName;I)Z
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userId"  # I

    .line 7871
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7872
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v1

    if-eqz v1, :cond_23

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 7873
    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v1

    if-ne v1, p2, :cond_23

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 7874
    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v1

    invoke-virtual {v1, p1}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_23

    const/4 v1, 0x1

    goto :goto_24

    :cond_23
    const/4 v1, 0x0

    :goto_24
    monitor-exit v0

    .line 7872
    return v1

    .line 7875
    :catchall_26
    move-exception v1

    monitor-exit v0
    :try_end_28
    .catchall {:try_start_5 .. :try_end_28} :catchall_26

    throw v1
.end method

.method isDeviceOwner(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;)Z
    .registers 4
    .param p1, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 7867
    iget-object v0, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v0}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    invoke-virtual {p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v1

    invoke-virtual {v1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v1

    invoke-virtual {p0, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v0

    return v0
.end method

.method public isDeviceProvisioned()Z
    .registers 3

    .line 12851
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 12852
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12853
    const/4 v1, 0x0

    :try_start_9
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserDataUnchecked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    iget-boolean v1, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserSetupComplete:Z

    monitor-exit v0

    return v1

    .line 12854
    :catchall_11
    move-exception v1

    monitor-exit v0
    :try_end_13
    .catchall {:try_start_9 .. :try_end_13} :catchall_11

    throw v1
.end method

.method public isDeviceProvisioningConfigApplied()Z
    .registers 4

    .line 12953
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 12954
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12955
    const/4 v1, 0x0

    :try_start_9
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 12956
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDeviceProvisioningConfigApplied:Z

    monitor-exit v0

    return v2

    .line 12957
    .end local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :catchall_11
    move-exception v1

    monitor-exit v0
    :try_end_13
    .catchall {:try_start_9 .. :try_end_13} :catchall_11

    throw v1
.end method

.method public isEphemeralUser(Landroid/content/ComponentName;)Z
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 9953
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9954
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 9956
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 9957
    .local v0, "callingUserId":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 9959
    .local v1, "id":J
    :try_start_14
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getUserManager()Landroid/os/UserManager;

    move-result-object v3

    invoke-virtual {v3, v0}, Landroid/os/UserManager;->isUserEphemeral(I)Z

    move-result v3
    :try_end_1e
    .catchall {:try_start_14 .. :try_end_1e} :catchall_24

    .line 9961
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9959
    return v3

    .line 9961
    :catchall_24
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method public isInputMethodPermittedByAdmin(Landroid/content/ComponentName;Ljava/lang/String;I)Z
    .registers 8
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;
    .param p3, "userHandle"  # I

    .line 9527
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x1

    if-nez v0, :cond_6

    .line 9528
    return v1

    .line 9530
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9531
    const-string/jumbo v0, "packageName is null"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkStringNotEmpty(Ljava/lang/CharSequence;Ljava/lang/Object;)Ljava/lang/CharSequence;

    .line 9532
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    if-eqz v0, :cond_3a

    .line 9536
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 9537
    :try_start_1c
    invoke-virtual {p0, p1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 9538
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-nez v2, :cond_25

    .line 9539
    const/4 v1, 0x0

    monitor-exit v0

    return v1

    .line 9541
    :cond_25
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedInputMethods:Ljava/util/List;

    if-nez v3, :cond_2b

    .line 9542
    monitor-exit v0

    return v1

    .line 9544
    :cond_2b
    invoke-static {p2}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v1

    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedInputMethods:Ljava/util/List;

    invoke-direct {p0, v1, v3, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkPackagesInPermittedListOrSystem(Ljava/util/List;Ljava/util/List;I)Z

    move-result v1

    monitor-exit v0

    return v1

    .line 9546
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_37
    move-exception v1

    monitor-exit v0
    :try_end_39
    .catchall {:try_start_1c .. :try_end_39} :catchall_37

    throw v1

    .line 9533
    :cond_3a
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only the system can query if an input method is disabled by admin"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public isLockTaskPermitted(Ljava/lang/String;)Z
    .registers 5
    .param p1, "pkg"  # Ljava/lang/String;

    .line 10688
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 10689
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 10690
    :try_start_b
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    iget-object v2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLockTaskPackages:Ljava/util/List;

    invoke-interface {v2, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v2

    monitor-exit v1

    return v2

    .line 10691
    :catchall_17
    move-exception v2

    monitor-exit v1
    :try_end_19
    .catchall {:try_start_b .. :try_end_19} :catchall_17

    throw v2
.end method

.method public isLogoutEnabled()Z
    .registers 5

    .line 13650
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 13651
    return v1

    .line 13653
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13654
    :try_start_b
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 13655
    .local v2, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_16

    iget-boolean v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->isLogoutEnabled:Z

    if-eqz v3, :cond_16

    const/4 v1, 0x1

    :cond_16
    monitor-exit v0

    return v1

    .line 13656
    .end local v2  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_18
    move-exception v1

    monitor-exit v0
    :try_end_1a
    .catchall {:try_start_b .. :try_end_1a} :catchall_18

    throw v1
.end method

.method public isManagedKiosk()Z
    .registers 5

    .line 14320
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 14321
    const/4 v0, 0x0

    return v0

    .line 14323
    :cond_6
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 14324
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 14326
    .local v0, "id":J
    :try_start_f
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedKioskInternal()Z

    move-result v2
    :try_end_13
    .catch Landroid/os/RemoteException; {:try_start_f .. :try_end_13} :catch_1b
    .catchall {:try_start_f .. :try_end_13} :catchall_19

    .line 14330
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 14326
    return v2

    .line 14330
    :catchall_19
    move-exception v2

    goto :goto_22

    .line 14327
    :catch_1b
    move-exception v2

    .line 14328
    .local v2, "e":Landroid/os/RemoteException;
    :try_start_1c
    new-instance v3, Ljava/lang/IllegalStateException;

    invoke-direct {v3, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/Throwable;)V

    .end local v0  # "id":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    throw v3
    :try_end_22
    .catchall {:try_start_1c .. :try_end_22} :catchall_19

    .line 14330
    .end local v2  # "e":Landroid/os/RemoteException;
    .restart local v0  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    :goto_22
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method public isManagedProfile(Landroid/content/ComponentName;)Z
    .registers 3
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 12133
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 12134
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v0

    return v0
.end method

.method public isMasterVolumeMuted(Landroid/content/ComponentName;)Z
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 10969
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10970
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10971
    const/4 v1, -0x1

    :try_start_b
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 10973
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v2, "audio"

    .line 10974
    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/media/AudioManager;

    .line 10975
    .local v1, "audioManager":Landroid/media/AudioManager;
    invoke-virtual {v1}, Landroid/media/AudioManager;->isMasterMute()Z

    move-result v2

    monitor-exit v0

    return v2

    .line 10976
    .end local v1  # "audioManager":Landroid/media/AudioManager;
    :catchall_1e
    move-exception v1

    monitor-exit v0
    :try_end_20
    .catchall {:try_start_b .. :try_end_20} :catchall_1e

    throw v1
.end method

.method public isMeteredDataDisabledPackageForUser(Landroid/content/ComponentName;Ljava/lang/String;I)Z
    .registers 8
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;
    .param p3, "userId"  # I

    .line 12461
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12463
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_9

    .line 12464
    return v1

    .line 12466
    :cond_9
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    if-eqz v0, :cond_2b

    .line 12470
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12471
    :try_start_14
    invoke-virtual {p0, p1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 12472
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_26

    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->meteredDisabledPackages:Ljava/util/List;

    if-eqz v3, :cond_26

    .line 12473
    iget-object v1, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->meteredDisabledPackages:Ljava/util/List;

    invoke-interface {v1, p2}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v1

    monitor-exit v0

    return v1

    .line 12475
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_26
    monitor-exit v0

    .line 12476
    return v1

    .line 12475
    :catchall_28
    move-exception v1

    monitor-exit v0
    :try_end_2a
    .catchall {:try_start_14 .. :try_end_2a} :catchall_28

    throw v1

    .line 12467
    :cond_2b
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only the system can query restricted pkgs for a specific user"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public isNetworkLoggingEnabled(Landroid/content/ComponentName;Ljava/lang/String;)Z
    .registers 10
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;

    .line 13325
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 13326
    const/4 v0, 0x0

    return v0

    .line 13328
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13329
    const/4 v4, -0x2

    :try_start_c
    const-string v5, "delegation-network-logging"

    const-string v6, "android.permission.MANAGE_USERS"

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    invoke-direct/range {v1 .. v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScopeOrCheckPermission(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

    .line 13332
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isNetworkLoggingEnabledInternalLocked()Z

    move-result v1

    monitor-exit v0

    return v1

    .line 13333
    :catchall_1c
    move-exception v1

    monitor-exit v0
    :try_end_1e
    .catchall {:try_start_c .. :try_end_1e} :catchall_1c

    throw v1
.end method

.method public isNotificationListenerServicePermitted(Ljava/lang/String;I)Z
    .registers 7
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userId"  # I

    .line 9587
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x1

    if-nez v0, :cond_6

    .line 9588
    return v1

    .line 9591
    :cond_6
    const-string/jumbo v0, "packageName is null or empty"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkStringNotEmpty(Ljava/lang/CharSequence;Ljava/lang/Object;)Ljava/lang/CharSequence;

    .line 9592
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    if-eqz v0, :cond_33

    .line 9596
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 9597
    :try_start_17
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 9598
    .local v2, "profileOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_2e

    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedNotificationListeners:Ljava/util/List;

    if-nez v3, :cond_22

    goto :goto_2e

    .line 9601
    :cond_22
    invoke-static {p1}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v1

    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedNotificationListeners:Ljava/util/List;

    invoke-direct {p0, v1, v3, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkPackagesInPermittedListOrSystem(Ljava/util/List;Ljava/util/List;I)Z

    move-result v1

    monitor-exit v0

    return v1

    .line 9599
    :cond_2e
    :goto_2e
    monitor-exit v0

    return v1

    .line 9604
    .end local v2  # "profileOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_30
    move-exception v1

    monitor-exit v0
    :try_end_32
    .catchall {:try_start_17 .. :try_end_32} :catchall_30

    throw v1

    .line 9593
    :cond_33
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Only the system can query if a notification listener service is permitted"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public isOverrideApnEnabled(Landroid/content/ComponentName;)Z
    .registers 12
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 14050
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_66

    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasTelephonyFeature:Z

    if-nez v0, :cond_a

    goto :goto_66

    .line 14053
    :cond_a
    const-string v0, "ComponentName is null in isOverrideApnEnabled"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14054
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 14057
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2

    .line 14059
    .local v2, "id":J
    :try_start_18
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    sget-object v5, Landroid/provider/Telephony$Carriers;->ENFORCE_MANAGED_URI:Landroid/net/Uri;

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    invoke-virtual/range {v4 .. v9}, Landroid/content/ContentResolver;->query(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v0
    :try_end_28
    .catchall {:try_start_18 .. :try_end_28} :catchall_5f

    .line 14062
    .local v0, "enforceCursor":Landroid/database/Cursor;
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 14063
    nop

    .line 14065
    if-nez v0, :cond_31

    .line 14066
    return v1

    .line 14069
    :cond_31
    :try_start_31
    invoke-interface {v0}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v4

    if-eqz v4, :cond_49

    .line 14070
    const-string v4, "enforced"

    invoke-interface {v0, v4}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v4

    invoke-interface {v0, v4}, Landroid/database/Cursor;->getInt(I)I

    move-result v4
    :try_end_41
    .catch Ljava/lang/IllegalArgumentException; {:try_start_31 .. :try_end_41} :catch_50
    .catchall {:try_start_31 .. :try_end_41} :catchall_4e

    const/4 v5, 0x1

    if-ne v4, v5, :cond_45

    move v1, v5

    .line 14076
    :cond_45
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    .line 14070
    return v1

    .line 14076
    :cond_49
    nop

    :goto_4a
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    .line 14077
    goto :goto_5a

    .line 14076
    :catchall_4e
    move-exception v1

    goto :goto_5b

    .line 14072
    :catch_50
    move-exception v4

    .line 14073
    .local v4, "e":Ljava/lang/IllegalArgumentException;
    :try_start_51
    const-string v5, "DevicePolicyManager"

    const-string v6, "Cursor returned from ENFORCE_MANAGED_URI doesn\'t contain correct info."

    invoke-static {v5, v6, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_58
    .catchall {:try_start_51 .. :try_end_58} :catchall_4e

    .line 14076
    nop

    .end local v4  # "e":Ljava/lang/IllegalArgumentException;
    goto :goto_4a

    .line 14078
    :goto_5a
    return v1

    .line 14076
    :goto_5b
    invoke-interface {v0}, Landroid/database/Cursor;->close()V

    throw v1

    .line 14062
    .end local v0  # "enforceCursor":Landroid/database/Cursor;
    :catchall_5f
    move-exception v0

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0

    .line 14051
    .end local v2  # "id":J
    :cond_66
    :goto_66
    return v1
.end method

.method public isPackageAllowedToAccessCalendarForUser(Ljava/lang/String;I)Z
    .registers 7
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userHandle"  # I

    .line 14281
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 14282
    return v1

    .line 14284
    :cond_6
    const-string v0, "Package name is null or empty"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkStringNotEmpty(Ljava/lang/CharSequence;Ljava/lang/Object;)Ljava/lang/CharSequence;

    .line 14286
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCrossUsersPermission(I)V

    .line 14287
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 14288
    :try_start_13
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string v3, "cross_profile_calendar_enabled"

    invoke-virtual {v2, v3, v1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsSecureGetIntForUser(Ljava/lang/String;II)I

    move-result v2

    if-nez v2, :cond_1f

    .line 14290
    monitor-exit v0

    return v1

    .line 14292
    :cond_1f
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 14293
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v2, :cond_34

    .line 14294
    iget-object v1, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->mCrossProfileCalendarPackages:Ljava/util/List;

    if-nez v1, :cond_2c

    .line 14295
    const/4 v1, 0x1

    monitor-exit v0

    return v1

    .line 14297
    :cond_2c
    iget-object v1, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->mCrossProfileCalendarPackages:Ljava/util/List;

    invoke-interface {v1, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v1

    monitor-exit v0

    return v1

    .line 14299
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_34
    monitor-exit v0

    .line 14300
    return v1

    .line 14299
    :catchall_36
    move-exception v1

    monitor-exit v0
    :try_end_38
    .catchall {:try_start_13 .. :try_end_38} :catchall_36

    throw v1
.end method

.method isPackageInstalledForUser(Ljava/lang/String;I)Z
    .registers 6
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userHandle"  # I

    .line 11865
    :try_start_0
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    const/4 v1, 0x0

    invoke-interface {v0, p1, v1, p2}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;

    move-result-object v0

    .line 11867
    .local v0, "pi":Landroid/content/pm/PackageInfo;
    if-eqz v0, :cond_14

    iget-object v2, v0, Landroid/content/pm/PackageInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I
    :try_end_11
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_11} :catch_15

    if-eqz v2, :cond_14

    const/4 v1, 0x1

    :cond_14
    return v1

    .line 11868
    .end local v0  # "pi":Landroid/content/pm/PackageInfo;
    :catch_15
    move-exception v0

    .line 11869
    .local v0, "re":Landroid/os/RemoteException;
    new-instance v1, Ljava/lang/RuntimeException;

    const-string v2, "Package manager has died"

    invoke-direct {v1, v2, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method public isPackageSuspended(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)Z
    .registers 11
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "packageName"  # Ljava/lang/String;

    .line 10020
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 10021
    .local v0, "callingUserId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 10023
    const/4 v2, -0x1

    :try_start_a
    const-string v3, "delegation-package-access"

    invoke-direct {p0, p1, p2, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 10026
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2
    :try_end_15
    .catchall {:try_start_a .. :try_end_15} :catchall_3c

    .line 10028
    .local v2, "id":J
    :try_start_15
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-interface {v4, p3, v0}, Landroid/content/pm/IPackageManager;->isPackageSuspendedForUser(Ljava/lang/String;I)Z

    move-result v4
    :try_end_1b
    .catch Landroid/os/RemoteException; {:try_start_15 .. :try_end_1b} :catch_24
    .catchall {:try_start_15 .. :try_end_1b} :catchall_22

    .line 10033
    :try_start_1b
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v1
    :try_end_21
    .catchall {:try_start_1b .. :try_end_21} :catchall_3c

    .line 10028
    return v4

    .line 10033
    :catchall_22
    move-exception v4

    goto :goto_36

    .line 10029
    :catch_24
    move-exception v4

    .line 10031
    .local v4, "re":Landroid/os/RemoteException;
    :try_start_25
    const-string v5, "DevicePolicyManager"

    const-string v6, "Failed talking to the package manager"

    invoke-static {v5, v6, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2c
    .catchall {:try_start_25 .. :try_end_2c} :catchall_22

    .line 10033
    nop

    .end local v4  # "re":Landroid/os/RemoteException;
    :try_start_2d
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 10034
    nop

    .line 10035
    const/4 v4, 0x0

    monitor-exit v1

    return v4

    .line 10033
    :goto_36
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "callingUserId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageName":Ljava/lang/String;
    throw v4

    .line 10036
    .end local v2  # "id":J
    .restart local v0  # "callingUserId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageName":Ljava/lang/String;
    :catchall_3c
    move-exception v2

    monitor-exit v1
    :try_end_3e
    .catchall {:try_start_2d .. :try_end_3e} :catchall_3c

    throw v2
.end method

.method public isProfileActivePasswordSufficientForParent(I)Z
    .registers 9
    .param p1, "userHandle"  # I

    .line 4778
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 4779
    const/4 v0, 0x1

    return v0

    .line 4781
    :cond_6
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 4782
    const-string v0, "call APIs refering to the parent profile"

    invoke-direct {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManagedProfile(ILjava/lang/String;)V

    .line 4784
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 4785
    :try_start_13
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v1

    .line 4786
    .local v1, "targetUser":I
    const/4 v2, 0x0

    invoke-direct {p0, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceUserUnlocked(IZ)V

    .line 4787
    invoke-direct {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getCredentialOwner(IZ)I

    move-result v3

    .line 4788
    .local v3, "credentialOwner":I
    invoke-virtual {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserDataUnchecked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    .line 4789
    .local v4, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    invoke-virtual {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserPasswordMetricsLocked(I)Landroid/app/admin/PasswordMetrics;

    move-result-object v5

    .line 4790
    .local v5, "metrics":Landroid/app/admin/PasswordMetrics;
    iget-boolean v6, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordValidAtLastCheckpoint:Z

    invoke-direct {p0, v6, v5, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isActivePasswordSufficientForUserLocked(ZLandroid/app/admin/PasswordMetrics;IZ)Z

    move-result v2

    monitor-exit v0

    return v2

    .line 4792
    .end local v1  # "targetUser":I
    .end local v3  # "credentialOwner":I
    .end local v4  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v5  # "metrics":Landroid/app/admin/PasswordMetrics;
    :catchall_2f
    move-exception v1

    monitor-exit v0
    :try_end_31
    .catchall {:try_start_13 .. :try_end_31} :catchall_2f

    throw v1
.end method

.method public isProfileOwner(Landroid/content/ComponentName;I)Z
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userId"  # I

    .line 7894
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwner(I)Landroid/content/ComponentName;

    move-result-object v0

    .line 7895
    .local v0, "profileOwner":Landroid/content/ComponentName;
    if-eqz p1, :cond_e

    invoke-virtual {p1, v0}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_e

    const/4 v1, 0x1

    goto :goto_f

    :cond_e
    const/4 v1, 0x0

    :goto_f
    return v1
.end method

.method public isProvisioningAllowed(Ljava/lang/String;Ljava/lang/String;)Z
    .registers 11
    .param p1, "action"  # Ljava/lang/String;
    .param p2, "packageName"  # Ljava/lang/String;

    .line 11882
    invoke-static {p2}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 11884
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    .line 11885
    .local v0, "callingUid":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 11887
    .local v1, "ident":J
    :try_start_f
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v3

    .line 11888
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    .line 11887
    invoke-virtual {v3, p2, v4}, Landroid/content/pm/PackageManager;->getPackageUidAsUser(Ljava/lang/String;I)I

    move-result v3

    .line 11889
    .local v3, "uidForPackage":I
    const/4 v4, 0x1

    const/4 v5, 0x0

    if-ne v0, v3, :cond_23

    move v6, v4

    goto :goto_24

    :cond_23
    move v6, v5

    :goto_24
    const-string v7, "Caller uid doesn\'t match the one for the provided package."

    invoke-static {v6, v7}, Lcom/android/internal/util/Preconditions;->checkArgument(ZLjava/lang/Object;)V
    :try_end_29
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_f .. :try_end_29} :catch_3a
    .catchall {:try_start_f .. :try_end_29} :catchall_38

    .line 11894
    .end local v3  # "uidForPackage":I
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 11895
    nop

    .line 11897
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkProvisioningPreConditionSkipPermission(Ljava/lang/String;Ljava/lang/String;)I

    move-result v3

    if-nez v3, :cond_36

    goto :goto_37

    :cond_36
    move v4, v5

    :goto_37
    return v4

    .line 11894
    :catchall_38
    move-exception v3

    goto :goto_52

    .line 11891
    :catch_3a
    move-exception v3

    .line 11892
    .local v3, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    :try_start_3b
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Invalid package provided "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    .end local v0  # "callingUid":I
    .end local v1  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "action":Ljava/lang/String;
    .end local p2  # "packageName":Ljava/lang/String;
    throw v4
    :try_end_52
    .catchall {:try_start_3b .. :try_end_52} :catchall_38

    .line 11894
    .end local v3  # "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    .restart local v0  # "callingUid":I
    .restart local v1  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "action":Ljava/lang/String;
    .restart local p2  # "packageName":Ljava/lang/String;
    :goto_52
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method public isRemovingAdmin(Landroid/content/ComponentName;I)Z
    .registers 6
    .param p1, "adminReceiver"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 3941
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 3942
    const/4 v0, 0x0

    return v0

    .line 3944
    :cond_6
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 3945
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 3946
    :try_start_e
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 3947
    .local v1, "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRemovingAdmins:Ljava/util/ArrayList;

    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    monitor-exit v0

    return v2

    .line 3948
    .end local v1  # "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :catchall_1a
    move-exception v1

    monitor-exit v0
    :try_end_1c
    .catchall {:try_start_e .. :try_end_1c} :catchall_1a

    throw v1
.end method

.method public isResetPasswordTokenActive(Landroid/content/ComponentName;)Z
    .registers 10
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 13537
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_4a

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_e

    goto :goto_4a

    .line 13540
    :cond_e
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13541
    :try_start_13
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v2

    .line 13542
    .local v2, "userHandle":I
    const/4 v3, -0x1

    invoke-virtual {p0, p1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 13544
    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v3

    .line 13545
    .local v3, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-wide v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    const-wide/16 v6, 0x0

    cmp-long v4, v4, v6

    if-eqz v4, :cond_45

    .line 13546
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v4
    :try_end_2f
    .catchall {:try_start_13 .. :try_end_2f} :catchall_47

    .line 13548
    .local v4, "ident":J
    :try_start_2f
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    iget-wide v6, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    invoke-virtual {v1, v6, v7, v2}, Lcom/android/internal/widget/LockPatternUtils;->isEscrowTokenActive(JI)Z

    move-result v1
    :try_end_37
    .catchall {:try_start_2f .. :try_end_37} :catchall_3e

    .line 13551
    :try_start_37
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v0

    .line 13548
    return v1

    .line 13551
    :catchall_3e
    move-exception v1

    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    throw v1

    .line 13554
    .end local v2  # "userHandle":I
    .end local v3  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v4  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    :cond_45
    monitor-exit v0

    .line 13555
    return v1

    .line 13554
    :catchall_47
    move-exception v1

    monitor-exit v0
    :try_end_49
    .catchall {:try_start_37 .. :try_end_49} :catchall_47

    throw v1

    .line 13538
    :cond_4a
    :goto_4a
    return v1
.end method

.method public isRuntimePermission(Ljava/lang/String;)Z
    .registers 7
    .param p1, "permissionName"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/content/pm/PackageManager$NameNotFoundException;
        }
    .end annotation

    .line 11874
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    .line 11875
    .local v0, "packageManager":Landroid/content/pm/PackageManager;
    const/4 v1, 0x0

    invoke-virtual {v0, p1, v1}, Landroid/content/pm/PackageManager;->getPermissionInfo(Ljava/lang/String;I)Landroid/content/pm/PermissionInfo;

    move-result-object v2

    .line 11876
    .local v2, "permissionInfo":Landroid/content/pm/PermissionInfo;
    iget v3, v2, Landroid/content/pm/PermissionInfo;->protectionLevel:I

    and-int/lit8 v3, v3, 0xf

    const/4 v4, 0x1

    if-ne v3, v4, :cond_13

    move v1, v4

    :cond_13
    return v1
.end method

.method public isSecurityLoggingEnabled(Landroid/content/ComponentName;)Z
    .registers 4
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 12682
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_6

    .line 12683
    const/4 v0, 0x0

    return v0

    .line 12686
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12687
    :try_start_b
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v1

    if-nez v1, :cond_18

    .line 12688
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12689
    const/4 v1, -0x2

    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 12691
    :cond_18
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogGetLoggingEnabledProperty()Z

    move-result v1

    monitor-exit v0

    return v1

    .line 12692
    :catchall_20
    move-exception v1

    monitor-exit v0
    :try_end_22
    .catchall {:try_start_b .. :try_end_22} :catchall_20

    throw v1
.end method

.method public isSeparateProfileChallengeAllowed(I)Z
    .registers 5
    .param p1, "userHandle"  # I

    .line 4122
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    if-eqz v0, :cond_1c

    .line 4125
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwner(I)Landroid/content/ComponentName;

    move-result-object v0

    .line 4127
    .local v0, "profileOwner":Landroid/content/ComponentName;
    if-eqz v0, :cond_1a

    .line 4128
    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    invoke-direct {p0, v1, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTargetSdk(Ljava/lang/String;I)I

    move-result v1

    const/16 v2, 0x17

    if-le v1, v2, :cond_1a

    const/4 v1, 0x1

    goto :goto_1b

    :cond_1a
    const/4 v1, 0x0

    .line 4127
    :goto_1b
    return v1

    .line 4123
    .end local v0  # "profileOwner":Landroid/content/ComponentName;
    :cond_1c
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Caller must be system"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public isSystemOnlyUser(Landroid/content/ComponentName;)Z
    .registers 4
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 12139
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 12140
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 12141
    .local v0, "callingUserId":I
    invoke-static {}, Landroid/os/UserManager;->isSplitSystemUser()Z

    move-result v1

    if-eqz v1, :cond_13

    if-nez v0, :cond_13

    const/4 v1, 0x1

    goto :goto_14

    :cond_13
    const/4 v1, 0x0

    :goto_14
    return v1
.end method

.method public isUnattendedManagedKiosk()Z
    .registers 7

    .line 14336
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 14337
    return v1

    .line 14339
    :cond_6
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 14340
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2

    .line 14342
    .local v2, "id":J
    :try_start_f
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedKioskInternal()Z

    move-result v0

    if-eqz v0, :cond_23

    .line 14343
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getPowerManagerInternal()Landroid/os/PowerManagerInternal;

    move-result-object v0

    const-wide/16 v4, 0x7530

    invoke-virtual {v0, v4, v5}, Landroid/os/PowerManagerInternal;->wasDeviceIdleFor(J)Z

    move-result v0
    :try_end_1f
    .catch Landroid/os/RemoteException; {:try_start_f .. :try_end_1f} :catch_2c
    .catchall {:try_start_f .. :try_end_1f} :catchall_2a

    if-eqz v0, :cond_23

    const/4 v1, 0x1

    goto :goto_24

    :cond_23
    nop

    .line 14347
    :goto_24
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 14342
    return v1

    .line 14347
    :catchall_2a
    move-exception v0

    goto :goto_33

    .line 14344
    :catch_2c
    move-exception v0

    .line 14345
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_2d
    new-instance v1, Ljava/lang/IllegalStateException;

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/Throwable;)V

    .end local v2  # "id":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    throw v1
    :try_end_33
    .catchall {:try_start_2d .. :try_end_33} :catchall_2a

    .line 14347
    .end local v0  # "e":Landroid/os/RemoteException;
    .restart local v2  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    :goto_33
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0
.end method

.method public isUninstallBlocked(Landroid/content/ComponentName;Ljava/lang/String;)Z
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;

    .line 10440
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 10442
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 10443
    if-eqz p1, :cond_f

    .line 10444
    const/4 v2, -0x1

    :try_start_c
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 10447
    :cond_f
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2
    :try_end_15
    .catchall {:try_start_c .. :try_end_15} :catchall_3c

    .line 10449
    .local v2, "id":J
    :try_start_15
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-interface {v4, p2, v0}, Landroid/content/pm/IPackageManager;->getBlockUninstallForUser(Ljava/lang/String;I)Z

    move-result v4
    :try_end_1b
    .catch Landroid/os/RemoteException; {:try_start_15 .. :try_end_1b} :catch_24
    .catchall {:try_start_15 .. :try_end_1b} :catchall_22

    .line 10454
    :try_start_1b
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v1
    :try_end_21
    .catchall {:try_start_1b .. :try_end_21} :catchall_3c

    .line 10449
    return v4

    .line 10454
    :catchall_22
    move-exception v4

    goto :goto_36

    .line 10450
    :catch_24
    move-exception v4

    .line 10452
    .local v4, "re":Landroid/os/RemoteException;
    :try_start_25
    const-string v5, "DevicePolicyManager"

    const-string v6, "Failed to getBlockUninstallForUser"

    invoke-static {v5, v6, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2c
    .catchall {:try_start_25 .. :try_end_2c} :catchall_22

    .line 10454
    nop

    .end local v4  # "re":Landroid/os/RemoteException;
    :try_start_2d
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 10455
    nop

    .line 10456
    .end local v2  # "id":J
    monitor-exit v1

    .line 10457
    const/4 v1, 0x0

    return v1

    .line 10454
    .restart local v2  # "id":J
    :goto_36
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "userId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "packageName":Ljava/lang/String;
    throw v4

    .line 10456
    .end local v2  # "id":J
    .restart local v0  # "userId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "packageName":Ljava/lang/String;
    :catchall_3c
    move-exception v2

    monitor-exit v1
    :try_end_3e
    .catchall {:try_start_2d .. :try_end_3e} :catchall_3c

    throw v2
.end method

.method public isUninstallInQueue(Ljava/lang/String;)Z
    .registers 6
    .param p1, "packageName"  # Ljava/lang/String;

    .line 12788
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageDeviceAdmin()V

    .line 12789
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 12790
    .local v0, "userId":I
    new-instance v1, Landroid/util/Pair;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-direct {v1, p1, v2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 12791
    .local v1, "packageUserPair":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/String;Ljava/lang/Integer;>;"
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 12792
    :try_start_17
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mPackagesToRemove:Ljava/util/Set;

    invoke-interface {v3, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v3

    monitor-exit v2

    return v3

    .line 12793
    :catchall_1f
    move-exception v3

    monitor-exit v2
    :try_end_21
    .catchall {:try_start_17 .. :try_end_21} :catchall_1f

    throw v3
.end method

.method public isUsingUnifiedPassword(Landroid/content/ComponentName;)Z
    .registers 5
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 4767
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x1

    if-nez v0, :cond_6

    .line 4768
    return v1

    .line 4770
    :cond_6
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4771
    .local v0, "userId":I
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 4772
    const-string/jumbo v2, "query unified challenge status"

    invoke-direct {p0, v0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManagedProfile(ILjava/lang/String;)V

    .line 4773
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSeparateProfileChallengeEnabled(I)Z

    move-result v2

    xor-int/2addr v1, v2

    return v1
.end method

.method public synthetic lambda$loadAdminDataAsync$0$DevicePolicyManagerService()V
    .registers 2

    .line 3837
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushActiveAdminPackages()V

    .line 3838
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUsageStatsManagerInternal:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {v0}, Landroid/app/usage/UsageStatsManagerInternal;->onAdminDataAvailable()V

    .line 3839
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushAllMeteredRestrictedPackages()V

    .line 3840
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getNetworkPolicyManagerInternal()Lcom/android/server/net/NetworkPolicyManagerInternal;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/net/NetworkPolicyManagerInternal;->onAdminDataAvailable()V

    .line 3841
    return-void
.end method

.method public synthetic lambda$setDefaultSmsApplication$9$DevicePolicyManagerService(Ljava/lang/String;)V
    .registers 3
    .param p1, "packageName"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 8964
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {p1, v0}, Lcom/android/internal/telephony/SmsApplication;->setDefaultApplication(Ljava/lang/String;Landroid/content/Context;)V

    return-void
.end method

.method public synthetic lambda$setSystemSetting$10$DevicePolicyManagerService(Ljava/lang/String;Ljava/lang/String;I)V
    .registers 5
    .param p1, "setting"  # Ljava/lang/String;
    .param p2, "value"  # Ljava/lang/String;
    .param p3, "callingUserId"  # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 10850
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsSystemPutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V

    return-void
.end method

.method public synthetic lambda$setTime$11$DevicePolicyManagerService(J)V
    .registers 4
    .param p1, "millis"  # J
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 10862
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getAlarmManager()Landroid/app/AlarmManager;

    move-result-object v0

    invoke-virtual {v0, p1, p2}, Landroid/app/AlarmManager;->setTime(J)V

    return-void
.end method

.method public synthetic lambda$setTimeZone$12$DevicePolicyManagerService(Ljava/lang/String;)V
    .registers 3
    .param p1, "timeZone"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 10875
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getAlarmManager()Landroid/app/AlarmManager;

    move-result-object v0

    invoke-virtual {v0, p1}, Landroid/app/AlarmManager;->setTimeZone(Ljava/lang/String;)V

    return-void
.end method

.method loadOwners()V
    .registers 3

    .line 2357
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 2358
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->load()V

    .line 2359
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDeviceOwnerSystemPropertyLocked()V

    .line 2360
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->findOwnerComponentIfNecessaryLocked()V

    .line 2361
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->migrateUserRestrictionsIfNecessaryLocked()V

    .line 2362
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeSetDefaultDeviceOwnerUserRestrictionsLocked()V

    .line 2366
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateDeviceOwnerLocked()V

    .line 2367
    monitor-exit v0

    .line 2368
    return-void

    .line 2367
    :catchall_1b
    move-exception v1

    monitor-exit v0
    :try_end_1d
    .catchall {:try_start_5 .. :try_end_1d} :catchall_1b

    throw v1
.end method

.method public lockNow(IZ)V
    .registers 20
    .param p1, "flags"  # I
    .param p2, "parent"  # Z

    .line 5445
    move-object/from16 v1, p0

    move/from16 v2, p1

    move/from16 v3, p2

    iget-boolean v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_b

    .line 5446
    return-void

    .line 5449
    :cond_b
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v4

    .line 5450
    .local v4, "callingUserId":I
    const/4 v5, 0x0

    .line 5451
    .local v5, "adminComponent":Landroid/content/ComponentName;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v6

    monitor-enter v6

    .line 5454
    :try_start_17
    const-string v0, "android.permission.LOCK_DEVICE"

    const/4 v7, 0x3

    const/4 v8, 0x0

    invoke-virtual {v1, v8, v7, v3, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminOrCheckPermissionForCallerLocked(Landroid/content/ComponentName;IZLjava/lang/String;)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    move-object v9, v0

    .line 5459
    .local v9, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v10
    :try_end_26
    .catchall {:try_start_17 .. :try_end_26} :catchall_ee

    .line 5461
    .local v10, "ident":J
    if-nez v9, :cond_2a

    move-object v0, v8

    goto :goto_30

    :cond_2a
    :try_start_2a
    iget-object v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v0}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    :goto_30
    move-object v5, v0

    .line 5462
    if-eqz v5, :cond_6b

    .line 5464
    and-int/lit8 v0, v2, 0x1

    if-eqz v0, :cond_6b

    .line 5466
    const-string/jumbo v0, "set FLAG_EVICT_CREDENTIAL_ENCRYPTION_KEY"

    invoke-direct {v1, v4, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManagedProfile(ILjava/lang/String;)V

    .line 5468
    invoke-virtual {v1, v5, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProfileOwner(Landroid/content/ComponentName;I)Z

    move-result v0

    if-eqz v0, :cond_63

    .line 5472
    if-nez v3, :cond_5b

    .line 5476
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->storageManagerIsFileBasedEncryptionEnabled()Z

    move-result v0

    if-eqz v0, :cond_53

    .line 5480
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v0, v4}, Landroid/os/UserManager;->evictCredentialEncryptionKey(I)V

    goto :goto_6b

    .line 5477
    :cond_53
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v7, "FLAG_EVICT_CREDENTIAL_ENCRYPTION_KEY only applies to FBE devices"

    invoke-direct {v0, v7}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    .end local v4  # "callingUserId":I
    .end local v5  # "adminComponent":Landroid/content/ComponentName;
    .end local v9  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v10  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "flags":I
    .end local p2  # "parent":Z
    throw v0

    .line 5473
    .restart local v4  # "callingUserId":I
    .restart local v5  # "adminComponent":Landroid/content/ComponentName;
    .restart local v9  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v10  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "flags":I
    .restart local p2  # "parent":Z
    :cond_5b
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v7, "Cannot set FLAG_EVICT_CREDENTIAL_ENCRYPTION_KEY for the parent"

    invoke-direct {v0, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v4  # "callingUserId":I
    .end local v5  # "adminComponent":Landroid/content/ComponentName;
    .end local v9  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v10  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "flags":I
    .end local p2  # "parent":Z
    throw v0

    .line 5469
    .restart local v4  # "callingUserId":I
    .restart local v5  # "adminComponent":Landroid/content/ComponentName;
    .restart local v9  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v10  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "flags":I
    .restart local p2  # "parent":Z
    :cond_63
    new-instance v0, Ljava/lang/SecurityException;

    const-string v7, "Only profile owner admins can set FLAG_EVICT_CREDENTIAL_ENCRYPTION_KEY"

    invoke-direct {v0, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v4  # "callingUserId":I
    .end local v5  # "adminComponent":Landroid/content/ComponentName;
    .end local v9  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v10  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "flags":I
    .end local p2  # "parent":Z
    throw v0

    .line 5485
    .restart local v4  # "callingUserId":I
    .restart local v5  # "adminComponent":Landroid/content/ComponentName;
    .restart local v9  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v10  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "flags":I
    .restart local p2  # "parent":Z
    :cond_6b
    :goto_6b
    const/4 v0, -0x1

    if-nez v3, :cond_77

    invoke-direct {v1, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSeparateProfileChallengeEnabled(I)Z

    move-result v12

    if-nez v12, :cond_75

    goto :goto_77

    .line 5486
    :cond_75
    move v12, v4

    goto :goto_78

    :cond_77
    :goto_77
    move v12, v0

    .line 5487
    .local v12, "userToLock":I
    :goto_78
    iget-object v13, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    const/4 v14, 0x2

    invoke-virtual {v13, v14, v12}, Lcom/android/internal/widget/LockPatternUtils;->requireStrongAuth(II)V

    .line 5491
    const/4 v13, 0x0

    const/4 v15, 0x1

    if-ne v12, v0, :cond_96

    .line 5493
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v7

    invoke-virtual {v0, v7, v8, v15, v13}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->powerManagerGoToSleep(JII)V

    .line 5495
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIWindowManager()Landroid/view/IWindowManager;

    move-result-object v0

    const/4 v7, 0x0

    invoke-interface {v0, v7}, Landroid/view/IWindowManager;->lockNow(Landroid/os/Bundle;)V

    goto :goto_9f

    .line 5497
    :cond_96
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getTrustManager()Landroid/app/trust/TrustManager;

    move-result-object v0

    invoke-virtual {v0, v12, v15}, Landroid/app/trust/TrustManager;->setDeviceLockedForUser(IZ)V

    .line 5500
    :goto_9f
    invoke-static {}, Landroid/app/admin/SecurityLog;->isLoggingEnabled()Z

    move-result v0

    if-eqz v0, :cond_ca

    if-eqz v5, :cond_ca

    .line 5502
    if-eqz v3, :cond_ae

    invoke-virtual {v1, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v0

    goto :goto_af

    :cond_ae
    move v0, v4

    .line 5503
    .local v0, "affectedUserId":I
    :goto_af
    const v7, 0x33466

    const/4 v8, 0x3

    new-array v8, v8, [Ljava/lang/Object;

    .line 5504
    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v16

    aput-object v16, v8, v13

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v8, v15

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v8, v14

    .line 5503
    invoke-static {v7, v8}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I
    :try_end_ca
    .catch Landroid/os/RemoteException; {:try_start_2a .. :try_end_ca} :catch_d4
    .catchall {:try_start_2a .. :try_end_ca} :catchall_cd

    .line 5508
    .end local v0  # "affectedUserId":I
    .end local v12  # "userToLock":I
    :cond_ca
    :try_start_ca
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    goto :goto_d7

    :catchall_cd
    move-exception v0

    iget-object v7, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v7, v10, v11}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v4  # "callingUserId":I
    .end local v5  # "adminComponent":Landroid/content/ComponentName;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "flags":I
    .end local p2  # "parent":Z
    throw v0

    .line 5506
    .restart local v4  # "callingUserId":I
    .restart local v5  # "adminComponent":Landroid/content/ComponentName;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "flags":I
    .restart local p2  # "parent":Z
    :catch_d4
    move-exception v0

    .line 5508
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    :goto_d7
    invoke-virtual {v0, v10, v11}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5509
    nop

    .line 5510
    .end local v9  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v10  # "ident":J
    monitor-exit v6
    :try_end_dc
    .catchall {:try_start_ca .. :try_end_dc} :catchall_ee

    .line 5511
    const/16 v0, 0xa

    .line 5512
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 5513
    invoke-virtual {v0, v5}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 5514
    invoke-virtual {v0, v2}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 5515
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 5516
    return-void

    .line 5510
    :catchall_ee
    move-exception v0

    :try_start_ef
    monitor-exit v6
    :try_end_f0
    .catchall {:try_start_ef .. :try_end_f0} :catchall_ee

    throw v0
.end method

.method public logoutUser(Landroid/content/ComponentName;)I
    .registers 8
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 9877
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9879
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 9880
    .local v0, "callingUserId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 9881
    const/4 v2, -0x1

    :try_start_11
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 9882
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isUserAffiliatedWithDeviceLocked(I)Z

    move-result v2

    if-eqz v2, :cond_66

    .line 9886
    monitor-exit v1
    :try_end_1b
    .catchall {:try_start_11 .. :try_end_1b} :catchall_82

    .line 9888
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v1

    if-eqz v1, :cond_2a

    .line 9889
    const-string v1, "DevicePolicyManager"

    const-string v2, "Managed profile cannot be logout"

    invoke-static {v1, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9890
    const/4 v1, 0x2

    return v1

    .line 9893
    :cond_2a
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 9895
    .local v1, "id":J
    const/4 v3, 0x1

    :try_start_31
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v4

    const/4 v5, 0x0

    invoke-interface {v4, v5}, Landroid/app/IActivityManager;->switchUser(I)Z

    move-result v4

    if-nez v4, :cond_4c

    .line 9896
    const-string v4, "DevicePolicyManager"

    const-string v5, "Failed to switch to primary user"

    invoke-static {v4, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_45
    .catch Landroid/os/RemoteException; {:try_start_31 .. :try_end_45} :catch_5e
    .catchall {:try_start_31 .. :try_end_45} :catchall_57

    .line 9898
    nop

    .line 9904
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9898
    return v3

    .line 9904
    :cond_4c
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9905
    nop

    .line 9907
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->stopUserUnchecked(I)I

    move-result v3

    return v3

    .line 9904
    :catchall_57
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3

    .line 9900
    :catch_5e
    move-exception v4

    .line 9902
    .local v4, "e":Landroid/os/RemoteException;
    nop

    .line 9904
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9902
    return v3

    .line 9883
    .end local v1  # "id":J
    .end local v4  # "e":Landroid/os/RemoteException;
    :cond_66
    :try_start_66
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Admin "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " is neither the device owner or affiliated user\'s profile owner."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUserId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    throw v2

    .line 9886
    .restart local v0  # "callingUserId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    :catchall_82
    move-exception v2

    monitor-exit v1
    :try_end_84
    .catchall {:try_start_66 .. :try_end_84} :catchall_82

    throw v2
.end method

.method public notifyLockTaskModeChanged(ZLjava/lang/String;I)V
    .registers 15
    .param p1, "isEnabled"  # Z
    .param p2, "pkg"  # Ljava/lang/String;
    .param p3, "userHandle"  # I

    .line 10761
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallerWithSystemUid()Z

    move-result v0

    if-eqz v0, :cond_84

    .line 10764
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10765
    :try_start_b
    invoke-virtual {p0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 10767
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mStatusBarDisabled:Z

    const/4 v3, 0x1

    const/4 v4, 0x0

    if-eqz v2, :cond_1d

    .line 10770
    if-nez p1, :cond_19

    move v2, v3

    goto :goto_1a

    :cond_19
    move v2, v4

    :goto_1a
    invoke-direct {p0, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setStatusBarDisabledInternal(ZI)Z

    .line 10773
    :cond_1d
    new-instance v2, Landroid/os/Bundle;

    invoke-direct {v2}, Landroid/os/Bundle;-><init>()V

    .line 10774
    .local v2, "adminExtras":Landroid/os/Bundle;
    const-string v5, "android.app.extra.LOCK_TASK_PACKAGE"

    invoke-virtual {v2, v5, p2}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 10775
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_2d
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_7f

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 10776
    .local v6, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v7, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v7}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v7

    invoke-virtual {p0, v7, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v7

    .line 10777
    .local v7, "ownsDevice":Z
    iget-object v8, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v8}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v8

    invoke-virtual {p0, v8, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProfileOwner(Landroid/content/ComponentName;I)Z

    move-result v8

    .line 10778
    .local v8, "ownsProfile":Z
    if-nez v7, :cond_51

    if-eqz v8, :cond_7e

    .line 10779
    :cond_51
    if-eqz p1, :cond_5a

    .line 10780
    const-string v9, "android.app.action.LOCK_TASK_ENTERING"

    const/4 v10, 0x0

    invoke-virtual {p0, v6, v9, v2, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/os/Bundle;Landroid/content/BroadcastReceiver;)V

    goto :goto_5f

    .line 10783
    :cond_5a
    const-string v9, "android.app.action.LOCK_TASK_EXITING"

    invoke-virtual {p0, v6, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;)V

    .line 10785
    :goto_5f
    const/16 v9, 0x33

    .line 10786
    invoke-static {v9}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    iget-object v10, v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    .line 10787
    invoke-virtual {v10}, Landroid/app/admin/DeviceAdminInfo;->getPackageName()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    .line 10788
    invoke-virtual {v9, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    new-array v10, v3, [Ljava/lang/String;

    aput-object p2, v10, v4

    .line 10789
    invoke-virtual {v9, v10}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    .line 10790
    invoke-virtual {v9}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10792
    .end local v6  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v7  # "ownsDevice":Z
    .end local v8  # "ownsProfile":Z
    :cond_7e
    goto :goto_2d

    .line 10793
    .end local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v2  # "adminExtras":Landroid/os/Bundle;
    :cond_7f
    monitor-exit v0

    .line 10794
    return-void

    .line 10793
    :catchall_81
    move-exception v1

    monitor-exit v0
    :try_end_83
    .catchall {:try_start_b .. :try_end_83} :catchall_81

    throw v1

    .line 10762
    :cond_84
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "notifyLockTaskModeChanged can only be called by system"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public notifyPendingSystemUpdate(Landroid/app/admin/SystemUpdateInfo;)V
    .registers 13
    .param p1, "info"  # Landroid/app/admin/SystemUpdateInfo;

    .line 11646
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.NOTIFY_PENDING_SYSTEM_UPDATE"

    const-string v2, "Only the system update service can broadcast update information"

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11649
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    if-eqz v0, :cond_17

    .line 11650
    const-string v0, "DevicePolicyManager"

    const-string v1, "Only the system update service in the system user can broadcast update information."

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11652
    return-void

    .line 11655
    :cond_17
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0, p1}, Lcom/android/server/devicepolicy/Owners;->saveSystemUpdateInfo(Landroid/app/admin/SystemUpdateInfo;)Z

    move-result v0

    if-nez v0, :cond_20

    .line 11657
    return-void

    .line 11660
    :cond_20
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.app.action.NOTIFY_PENDING_SYSTEM_UPDATE"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 11662
    if-nez p1, :cond_2c

    const-wide/16 v1, -0x1

    goto :goto_30

    :cond_2c
    invoke-virtual {p1}, Landroid/app/admin/SystemUpdateInfo;->getReceivedTime()J

    move-result-wide v1

    .line 11661
    :goto_30
    const-string v3, "android.app.extra.SYSTEM_UPDATE_RECEIVED_TIME"

    invoke-virtual {v0, v3, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;J)Landroid/content/Intent;

    move-result-object v0

    .line 11664
    .local v0, "intent":Landroid/content/Intent;
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 11666
    .local v1, "ident":J
    :try_start_3c
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v3

    monitor-enter v3
    :try_end_41
    .catchall {:try_start_3c .. :try_end_41} :catchall_ab

    .line 11668
    :try_start_41
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/Owners;->hasDeviceOwner()Z

    move-result v4

    if-eqz v4, :cond_61

    .line 11669
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 11670
    invoke-virtual {v4}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v4

    invoke-static {v4}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v4

    .line 11671
    .local v4, "deviceOwnerUser":Landroid/os/UserHandle;
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v5}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v5

    invoke-virtual {v0, v5}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 11672
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v5, v0, v4}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 11674
    .end local v4  # "deviceOwnerUser":Landroid/os/UserHandle;
    :cond_61
    monitor-exit v3
    :try_end_62
    .catchall {:try_start_41 .. :try_end_62} :catchall_a8

    .line 11678
    :try_start_62
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v3

    invoke-interface {v3}, Landroid/app/IActivityManager;->getRunningUserIds()[I

    move-result-object v3
    :try_end_6c
    .catch Landroid/os/RemoteException; {:try_start_62 .. :try_end_6c} :catch_9a
    .catchall {:try_start_62 .. :try_end_6c} :catchall_ab

    .line 11683
    .local v3, "runningUserIds":[I
    nop

    .line 11685
    :try_start_6d
    array-length v4, v3

    const/4 v5, 0x0

    :goto_6f
    if-ge v5, v4, :cond_93

    aget v6, v3, v5

    .line 11686
    .local v6, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v7

    monitor-enter v7
    :try_end_78
    .catchall {:try_start_6d .. :try_end_78} :catchall_ab

    .line 11687
    :try_start_78
    iget-object v8, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    .line 11688
    invoke-virtual {v8, v6}, Lcom/android/server/devicepolicy/Owners;->getProfileOwnerComponent(I)Landroid/content/ComponentName;

    move-result-object v8

    .line 11689
    .local v8, "profileOwnerPackage":Landroid/content/ComponentName;
    if-eqz v8, :cond_8c

    .line 11690
    invoke-virtual {v0, v8}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 11691
    iget-object v9, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {v6}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v10

    invoke-virtual {v9, v0, v10}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 11693
    .end local v8  # "profileOwnerPackage":Landroid/content/ComponentName;
    :cond_8c
    monitor-exit v7

    .line 11685
    .end local v6  # "userId":I
    add-int/lit8 v5, v5, 0x1

    goto :goto_6f

    .line 11693
    .restart local v6  # "userId":I
    :catchall_90
    move-exception v4

    monitor-exit v7
    :try_end_92
    .catchall {:try_start_78 .. :try_end_92} :catchall_90

    .end local v0  # "intent":Landroid/content/Intent;
    .end local v1  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "info":Landroid/app/admin/SystemUpdateInfo;
    :try_start_92
    throw v4
    :try_end_93
    .catchall {:try_start_92 .. :try_end_93} :catchall_ab

    .line 11696
    .end local v3  # "runningUserIds":[I
    .end local v6  # "userId":I
    .restart local v0  # "intent":Landroid/content/Intent;
    .restart local v1  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "info":Landroid/app/admin/SystemUpdateInfo;
    :cond_93
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 11697
    nop

    .line 11698
    return-void

    .line 11679
    :catch_9a
    move-exception v3

    .line 11681
    .local v3, "e":Landroid/os/RemoteException;
    :try_start_9b
    const-string v4, "DevicePolicyManager"

    const-string v5, "Could not retrieve the list of running users"

    invoke-static {v4, v5, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_a2
    .catchall {:try_start_9b .. :try_end_a2} :catchall_ab

    .line 11696
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 11682
    return-void

    .line 11674
    .end local v3  # "e":Landroid/os/RemoteException;
    :catchall_a8
    move-exception v4

    :try_start_a9
    monitor-exit v3
    :try_end_aa
    .catchall {:try_start_a9 .. :try_end_aa} :catchall_a8

    .end local v0  # "intent":Landroid/content/Intent;
    .end local v1  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "info":Landroid/app/admin/SystemUpdateInfo;
    :try_start_aa
    throw v4
    :try_end_ab
    .catchall {:try_start_aa .. :try_end_ab} :catchall_ab

    .line 11696
    .restart local v0  # "intent":Landroid/content/Intent;
    .restart local v1  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "info":Landroid/app/admin/SystemUpdateInfo;
    :catchall_ab
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method protected onInstalledCertificatesChanged(Landroid/os/UserHandle;Ljava/util/Collection;)V
    .registers 7
    .param p1, "userHandle"  # Landroid/os/UserHandle;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/os/UserHandle;",
            "Ljava/util/Collection<",
            "Ljava/lang/String;",
            ">;)V"
        }
    .end annotation

    .line 3744
    .local p2, "installedCertificates":Ljava/util/Collection;, "Ljava/util/Collection<Ljava/lang/String;>;"
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 3745
    return-void

    .line 3747
    :cond_5
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 3749
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 3750
    :try_start_d
    invoke-virtual {p1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v1

    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 3752
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    const/4 v2, 0x0

    .line 3753
    .local v2, "changed":Z
    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAcceptedCaCertificates:Landroid/util/ArraySet;

    invoke-virtual {v3, p2}, Landroid/util/ArraySet;->retainAll(Ljava/util/Collection;)Z

    move-result v3

    or-int/2addr v2, v3

    .line 3754
    iget-object v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mOwnerInstalledCaCerts:Ljava/util/Set;

    invoke-interface {v3, p2}, Ljava/util/Set;->retainAll(Ljava/util/Collection;)Z

    move-result v3

    or-int/2addr v2, v3

    .line 3755
    if-eqz v2, :cond_2d

    .line 3756
    invoke-virtual {p1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v3

    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 3758
    .end local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v2  # "changed":Z
    :cond_2d
    monitor-exit v0

    .line 3759
    return-void

    .line 3758
    :catchall_2f
    move-exception v1

    monitor-exit v0
    :try_end_31
    .catchall {:try_start_d .. :try_end_31} :catchall_2f

    throw v1
.end method

.method public packageHasActiveAdmins(Ljava/lang/String;I)Z
    .registers 9
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "userHandle"  # I

    .line 3990
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 3991
    return v1

    .line 3993
    :cond_6
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 3994
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 3995
    :try_start_e
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 3996
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 3997
    .local v3, "N":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_19
    if-ge v4, v3, :cond_35

    .line 3998
    iget-object v5, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    iget-object v5, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v5}, Landroid/app/admin/DeviceAdminInfo;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_32

    .line 3999
    monitor-exit v0

    const/4 v0, 0x1

    return v0

    .line 3997
    :cond_32
    add-int/lit8 v4, v4, 0x1

    goto :goto_19

    .line 4002
    .end local v4  # "i":I
    :cond_35
    monitor-exit v0

    return v1

    .line 4003
    .end local v2  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v3  # "N":I
    :catchall_37
    move-exception v1

    monitor-exit v0
    :try_end_39
    .catchall {:try_start_e .. :try_end_39} :catchall_37

    throw v1
.end method

.method public reboot(Landroid/content/ComponentName;)V
    .registers 6
    .param p1, "admin"  # Landroid/content/ComponentName;

    .line 12146
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12148
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 12149
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 12152
    .local v0, "ident":J
    :try_start_c
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mTelephonyManager:Landroid/telephony/TelephonyManager;

    invoke-virtual {v2}, Landroid/telephony/TelephonyManager;->getCallState()I

    move-result v2

    if-nez v2, :cond_2f

    .line 12155
    const/16 v2, 0x22

    .line 12156
    invoke-static {v2}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 12157
    invoke-virtual {v2, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 12158
    invoke-virtual {v2}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 12159
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string v3, "deviceowner"

    invoke-virtual {v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->powerManagerReboot(Ljava/lang/String;)V
    :try_end_28
    .catchall {:try_start_c .. :try_end_28} :catchall_37

    .line 12161
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 12162
    nop

    .line 12163
    return-void

    .line 12153
    :cond_2f
    :try_start_2f
    new-instance v2, Ljava/lang/IllegalStateException;

    const-string v3, "Cannot be called with ongoing call on the device"

    invoke-direct {v2, v3}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local v0  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    throw v2
    :try_end_37
    .catchall {:try_start_2f .. :try_end_37} :catchall_37

    .line 12161
    .restart local v0  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    :catchall_37
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method public removeActiveAdmin(Landroid/content/ComponentName;I)V
    .registers 9
    .param p1, "adminReceiver"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 4090
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 4091
    return-void

    .line 4093
    :cond_5
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 4094
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceUserUnlocked(I)V

    .line 4095
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 4096
    :try_start_10
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 4097
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-nez v1, :cond_18

    .line 4098
    monitor-exit v0

    return-void

    .line 4101
    :cond_18
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v2

    if-nez v2, :cond_51

    .line 4102
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProfileOwner(Landroid/content/ComponentName;I)Z

    move-result v2

    if-eqz v2, :cond_25

    goto :goto_51

    .line 4107
    :cond_25
    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUid()I

    move-result v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v3

    if-eq v2, v3, :cond_39

    .line 4108
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v3, "android.permission.MANAGE_DEVICE_ADMINS"

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 4111
    :cond_39
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2
    :try_end_3f
    .catchall {:try_start_10 .. :try_end_3f} :catchall_69

    .line 4113
    .local v2, "ident":J
    :try_start_3f
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeActiveAdminLocked(Landroid/content/ComponentName;I)V
    :try_end_42
    .catchall {:try_start_3f .. :try_end_42} :catchall_4a

    .line 4115
    :try_start_42
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 4116
    nop

    .line 4117
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v2  # "ident":J
    monitor-exit v0

    .line 4118
    return-void

    .line 4115
    .restart local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v2  # "ident":J
    :catchall_4a
    move-exception v4

    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "adminReceiver":Landroid/content/ComponentName;
    .end local p2  # "userHandle":I
    throw v4

    .line 4103
    .end local v2  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "adminReceiver":Landroid/content/ComponentName;
    .restart local p2  # "userHandle":I
    :cond_51
    :goto_51
    const-string v2, "DevicePolicyManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Device/profile owner cannot be removed: component="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 4105
    monitor-exit v0

    return-void

    .line 4117
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_69
    move-exception v1

    monitor-exit v0
    :try_end_6b
    .catchall {:try_start_42 .. :try_end_6b} :catchall_69

    throw v1
.end method

.method removeActiveAdminLocked(Landroid/content/ComponentName;I)V
    .registers 7
    .param p1, "adminReceiver"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # I

    .line 2958
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 2959
    .local v0, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 2960
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    if-eqz v0, :cond_21

    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRemovingAdmins:Ljava/util/ArrayList;

    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_21

    .line 2961
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRemovingAdmins:Ljava/util/ArrayList;

    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 2962
    new-instance v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$5;

    invoke-direct {v2, p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$5;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Landroid/content/ComponentName;I)V

    const-string v3, "android.app.action.DEVICE_ADMIN_DISABLED"

    invoke-virtual {p0, v0, v3, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/content/BroadcastReceiver;)V

    .line 2972
    :cond_21
    return-void
.end method

.method public removeCrossProfileWidgetProvider(Landroid/content/ComponentName;Ljava/lang/String;)Z
    .registers 10
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;

    .line 4446
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 4447
    .local v0, "userId":I
    const/4 v1, 0x0

    .line 4449
    .local v1, "changedProviders":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 4450
    const/4 v3, -0x1

    :try_start_b
    invoke-virtual {p0, p1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 4452
    .local v3, "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->crossProfileWidgetProviders:Ljava/util/List;

    const/4 v5, 0x0

    if-eqz v4, :cond_46

    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->crossProfileWidgetProviders:Ljava/util/List;

    .line 4453
    invoke-interface {v4}, Ljava/util/List;->isEmpty()Z

    move-result v4

    if-eqz v4, :cond_1d

    goto :goto_46

    .line 4456
    :cond_1d
    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->crossProfileWidgetProviders:Ljava/util/List;

    .line 4457
    .local v4, "providers":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-interface {v4, p2}, Ljava/util/List;->remove(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_2e

    .line 4458
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6, v4}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    move-object v1, v6

    .line 4459
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4461
    .end local v3  # "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v4  # "providers":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_2e
    monitor-exit v2
    :try_end_2f
    .catchall {:try_start_b .. :try_end_2f} :catchall_48

    .line 4463
    const/16 v2, 0x75

    .line 4464
    invoke-static {v2}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 4465
    invoke-virtual {v2, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 4466
    invoke-virtual {v2}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 4468
    if-eqz v1, :cond_45

    .line 4469
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLocalService:Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;

    invoke-static {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;->access$2100(Lcom/android/server/devicepolicy/DevicePolicyManagerService$LocalService;ILjava/util/List;)V

    .line 4470
    const/4 v2, 0x1

    return v2

    .line 4473
    :cond_45
    return v5

    .line 4454
    .restart local v3  # "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_46
    :goto_46
    :try_start_46
    monitor-exit v2

    return v5

    .line 4461
    .end local v3  # "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_48
    move-exception v3

    monitor-exit v2
    :try_end_4a
    .catchall {:try_start_46 .. :try_end_4a} :catchall_48

    throw v3
.end method

.method public removeKeyPair(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)Z
    .registers 14
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "alias"  # Ljava/lang/String;

    .line 5689
    const-string v0, "DevicePolicyManager"

    const/4 v1, -0x1

    const-string v2, "delegation-cert-install"

    invoke-direct {p0, p1, p2, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 5692
    new-instance v1, Landroid/os/UserHandle;

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    invoke-direct {v1, v2}, Landroid/os/UserHandle;-><init>(I)V

    .line 5693
    .local v1, "userHandle":Landroid/os/UserHandle;
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 5695
    .local v2, "id":J
    const/4 v4, 0x0

    :try_start_16
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {v5, v1}, Landroid/security/KeyChain;->bindAsUser(Landroid/content/Context;Landroid/os/UserHandle;)Landroid/security/KeyChain$KeyChainConnection;

    move-result-object v5
    :try_end_1c
    .catch Ljava/lang/InterruptedException; {:try_start_16 .. :try_end_1c} :catch_55
    .catchall {:try_start_16 .. :try_end_1c} :catchall_53

    .line 5697
    .local v5, "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    :try_start_1c
    invoke-virtual {v5}, Landroid/security/KeyChain$KeyChainConnection;->getService()Landroid/security/IKeyChainService;

    move-result-object v6

    .line 5698
    .local v6, "keyChain":Landroid/security/IKeyChainService;
    invoke-interface {v6, p3}, Landroid/security/IKeyChainService;->removeKeyPair(Ljava/lang/String;)Z

    move-result v7

    .line 5699
    .local v7, "result":Z
    if-nez p1, :cond_28

    const/4 v8, 0x1

    goto :goto_29

    :cond_28
    move v8, v4

    .line 5700
    .local v8, "isDelegate":Z
    :goto_29
    const/16 v9, 0x17

    .line 5701
    invoke-static {v9}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    .line 5702
    invoke-virtual {v9, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    .line 5703
    invoke-virtual {v9, v8}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    .line 5704
    invoke-virtual {v9}, Landroid/app/admin/DevicePolicyEventLogger;->write()V
    :try_end_3a
    .catch Landroid/os/RemoteException; {:try_start_1c .. :try_end_3a} :catch_44
    .catchall {:try_start_1c .. :try_end_3a} :catchall_42

    .line 5705
    nop

    .line 5709
    :try_start_3b
    invoke-virtual {v5}, Landroid/security/KeyChain$KeyChainConnection;->close()V
    :try_end_3e
    .catch Ljava/lang/InterruptedException; {:try_start_3b .. :try_end_3e} :catch_55
    .catchall {:try_start_3b .. :try_end_3e} :catchall_53

    .line 5715
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5705
    return v7

    .line 5709
    .end local v6  # "keyChain":Landroid/security/IKeyChainService;
    .end local v7  # "result":Z
    .end local v8  # "isDelegate":Z
    :catchall_42
    move-exception v6

    goto :goto_4f

    .line 5706
    :catch_44
    move-exception v6

    .line 5707
    .local v6, "e":Landroid/os/RemoteException;
    :try_start_45
    const-string v7, "Removing keypair"

    invoke-static {v0, v7, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4a
    .catchall {:try_start_45 .. :try_end_4a} :catchall_42

    .line 5709
    nop

    .end local v6  # "e":Landroid/os/RemoteException;
    :try_start_4b
    invoke-virtual {v5}, Landroid/security/KeyChain$KeyChainConnection;->close()V

    .line 5710
    goto :goto_62

    .line 5709
    :goto_4f
    invoke-virtual {v5}, Landroid/security/KeyChain$KeyChainConnection;->close()V

    .end local v1  # "userHandle":Landroid/os/UserHandle;
    .end local v2  # "id":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "alias":Ljava/lang/String;
    throw v6
    :try_end_53
    .catch Ljava/lang/InterruptedException; {:try_start_4b .. :try_end_53} :catch_55
    .catchall {:try_start_4b .. :try_end_53} :catchall_53

    .line 5715
    .end local v5  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .restart local v1  # "userHandle":Landroid/os/UserHandle;
    .restart local v2  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "alias":Ljava/lang/String;
    :catchall_53
    move-exception v0

    goto :goto_67

    .line 5711
    :catch_55
    move-exception v5

    .line 5712
    .local v5, "e":Ljava/lang/InterruptedException;
    :try_start_56
    const-string v6, "Interrupted while removing keypair"

    invoke-static {v0, v6, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5713
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Thread;->interrupt()V
    :try_end_62
    .catchall {:try_start_56 .. :try_end_62} :catchall_53

    .line 5715
    .end local v5  # "e":Ljava/lang/InterruptedException;
    :goto_62
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5716
    nop

    .line 5717
    return v4

    .line 5715
    :goto_67
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method public removeOverrideApn(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "apnId"  # I

    .line 13965
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-eqz v0, :cond_16

    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasTelephonyFeature:Z

    if-nez v0, :cond_9

    goto :goto_16

    .line 13968
    :cond_9
    const-string v0, "ComponentName is null in removeOverrideApn"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13969
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 13971
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeOverrideApnUnchecked(I)Z

    move-result v0

    return v0

    .line 13966
    :cond_16
    :goto_16
    const/4 v0, 0x0

    return v0
.end method

.method public removeUser(Landroid/content/ComponentName;Landroid/os/UserHandle;)Z
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # Landroid/os/UserHandle;

    .line 9770
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9771
    const-string v0, "UserHandle is null"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9772
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 9774
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 9775
    .local v0, "callingUserId":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 9777
    .local v1, "id":J
    :try_start_19
    invoke-virtual {p2}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v3

    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v3

    if-eqz v3, :cond_27

    .line 9778
    const-string/jumbo v3, "no_remove_managed_profile"

    goto :goto_2a

    .line 9779
    :cond_27
    const-string/jumbo v3, "no_remove_user"

    :goto_2a
    nop

    .line 9780
    .local v3, "restriction":Ljava/lang/String;
    invoke-direct {p0, p1, v3, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdminAffectedByRestriction(Landroid/content/ComponentName;Ljava/lang/String;I)Z

    move-result v4

    if-eqz v4, :cond_53

    .line 9781
    const-string v4, "DevicePolicyManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "The device owner cannot remove a user because "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " is enabled, and was not set by the device owner"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4c
    .catchall {:try_start_19 .. :try_end_4c} :catchall_63

    .line 9783
    const/4 v4, 0x0

    .line 9787
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9783
    return v4

    .line 9785
    :cond_53
    :try_start_53
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    invoke-virtual {p2}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v5

    invoke-virtual {v4, v5}, Landroid/os/UserManagerInternal;->removeUserEvenWhenDisallowed(I)Z

    move-result v4
    :try_end_5d
    .catchall {:try_start_53 .. :try_end_5d} :catchall_63

    .line 9787
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9785
    return v4

    .line 9787
    .end local v3  # "restriction":Ljava/lang/String;
    :catchall_63
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method removeUserData(I)V
    .registers 8
    .param p1, "userHandle"  # I

    .line 2331
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 2332
    if-nez p1, :cond_10

    .line 2333
    :try_start_7
    const-string v1, "DevicePolicyManager"

    const-string v2, "Tried to remove device policy file for user 0! Ignoring."

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2334
    monitor-exit v0

    return-void

    .line 2336
    :cond_10
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordQualityCacheForUserGroup(I)V

    .line 2337
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mPolicyCache:Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;

    invoke-virtual {v1, p1}, Lcom/android/server/devicepolicy/DevicePolicyCacheImpl;->onUserRemoved(I)V

    .line 2338
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p1}, Lcom/android/server/devicepolicy/Owners;->removeProfileOwner(I)V

    .line 2339
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p1}, Lcom/android/server/devicepolicy/Owners;->writeProfileOwner(I)V

    .line 2341
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserData:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    .line 2342
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    if-eqz v1, :cond_31

    .line 2343
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserData:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 2345
    :cond_31
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserPasswordMetrics:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    if-eqz v2, :cond_3e

    .line 2346
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserPasswordMetrics:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 2349
    :cond_3e
    new-instance v2, Ljava/io/File;

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->environmentGetUserSystemDirectory(I)Ljava/io/File;

    move-result-object v3

    const-string v4, "device_policies.xml"

    invoke-direct {v2, v3, v4}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 2351
    .local v2, "policyFile":Ljava/io/File;
    invoke-virtual {v2}, Ljava/io/File;->delete()Z

    .line 2352
    const-string v3, "DevicePolicyManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Removed device policy file "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2353
    nop

    .end local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v2  # "policyFile":Ljava/io/File;
    monitor-exit v0

    .line 2354
    return-void

    .line 2353
    :catchall_6b
    move-exception v1

    monitor-exit v0
    :try_end_6d
    .catchall {:try_start_7 .. :try_end_6d} :catchall_6b

    throw v1
.end method

.method public reportFailedBiometricAttempt(I)V
    .registers 6
    .param p1, "userHandle"  # I

    .line 6835
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 6836
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.BIND_DEVICE_ADMIN"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6838
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogIsLoggingEnabled()Z

    move-result v0

    if-eqz v0, :cond_2a

    .line 6839
    const v0, 0x33457

    const/4 v1, 0x2

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v2, 0x0

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v1, v2

    const/4 v3, 0x1

    .line 6840
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, v1, v3

    .line 6839
    invoke-static {v0, v1}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 6842
    :cond_2a
    return-void
.end method

.method public reportFailedPasswordAttempt(I)V
    .registers 18
    .param p1, "userHandle"  # I

    .line 6736
    move-object/from16 v7, p0

    move/from16 v8, p1

    invoke-direct/range {p0 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 6737
    invoke-direct/range {p0 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSeparateProfileChallengeEnabled(I)Z

    move-result v0

    if-nez v0, :cond_13

    .line 6738
    const-string/jumbo v0, "report failed password attempt if separate profile challenge is not in place"

    invoke-direct {v7, v8, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceNotManagedProfile(ILjava/lang/String;)V

    .line 6741
    :cond_13
    iget-object v0, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v1, 0x0

    const-string v2, "android.permission.BIND_DEVICE_ADMIN"

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6744
    const/4 v1, 0x0

    .line 6745
    .local v1, "wipeData":Z
    const/4 v2, 0x0

    .line 6746
    .local v2, "strictestAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v0, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v9

    .line 6748
    .local v9, "ident":J
    :try_start_23
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v3

    monitor-enter v3
    :try_end_28
    .catchall {:try_start_23 .. :try_end_28} :catchall_ec

    .line 6749
    :try_start_28
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    .line 6750
    .local v0, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget v4, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mFailedPasswordAttempts:I

    const/4 v11, 0x1

    add-int/2addr v4, v11

    iput v4, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mFailedPasswordAttempts:I

    .line 6751
    invoke-direct/range {p0 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 6752
    iget-boolean v4, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v12, 0x0

    if-eqz v4, :cond_54

    .line 6753
    invoke-direct {v7, v8, v12}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getAdminWithMinimumFailedPasswordsForWipeLocked(IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v4

    move-object v2, v4

    .line 6755
    if-eqz v2, :cond_44

    .line 6756
    iget v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumFailedPasswordsForWipe:I

    goto :goto_45

    :cond_44
    move v4, v12

    .line 6757
    .local v4, "max":I
    :goto_45
    if-lez v4, :cond_4c

    iget v5, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mFailedPasswordAttempts:I

    if-lt v5, v4, :cond_4c

    .line 6758
    const/4 v1, 0x1

    .line 6761
    :cond_4c
    const-string v5, "android.app.action.ACTION_PASSWORD_FAILED"

    invoke-direct {v7, v5, v11, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandForLockscreenPoliciesLocked(Ljava/lang/String;II)V
    :try_end_51
    .catchall {:try_start_28 .. :try_end_51} :catchall_e9

    move v13, v1

    move-object v14, v2

    goto :goto_56

    .line 6752
    .end local v4  # "max":I
    :cond_54
    move v13, v1

    move-object v14, v2

    .line 6765
    .end local v0  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v1  # "wipeData":Z
    .end local v2  # "strictestAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .local v13, "wipeData":Z
    .local v14, "strictestAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :goto_56
    :try_start_56
    monitor-exit v3
    :try_end_57
    .catchall {:try_start_56 .. :try_end_57} :catchall_e5

    .line 6767
    iget-object v0, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v9, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 6768
    nop

    .line 6770
    if-eqz v13, :cond_c7

    if-eqz v14, :cond_c7

    .line 6771
    invoke-virtual {v14}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v15

    .line 6772
    .local v15, "userId":I
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Max failed password attempts policy reached for admin: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v14, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    .line 6773
    invoke-virtual {v1}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ". Calling wipeData for user "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 6772
    const-string v1, "DevicePolicyManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6783
    :try_start_91
    iget-object v0, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const v1, 0x10407b3

    invoke-virtual {v0, v1}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v5

    .line 6785
    .local v5, "wipeReasonForUser":Ljava/lang/String;
    iget-object v0, v14, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v0}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    const/4 v3, 0x0

    const-string/jumbo v4, "reportFailedPasswordAttempt()"

    move-object/from16 v1, p0

    move v6, v15

    invoke-direct/range {v1 .. v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->wipeDataNoLock(Landroid/content/ComponentName;ILjava/lang/String;Ljava/lang/String;I)V
    :try_end_aa
    .catch Ljava/lang/SecurityException; {:try_start_91 .. :try_end_aa} :catch_ab

    .line 6793
    .end local v5  # "wipeReasonForUser":Ljava/lang/String;
    goto :goto_c7

    .line 6790
    :catch_ab
    move-exception v0

    .line 6791
    .local v0, "e":Ljava/lang/SecurityException;
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Failed to wipe user "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " after max failed password attempts reached."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "DevicePolicyManager"

    invoke-static {v2, v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6796
    .end local v0  # "e":Ljava/lang/SecurityException;
    .end local v15  # "userId":I
    :cond_c7
    :goto_c7
    iget-object v0, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogIsLoggingEnabled()Z

    move-result v0

    if-eqz v0, :cond_e4

    .line 6797
    const v0, 0x33457

    const/4 v1, 0x2

    new-array v1, v1, [Ljava/lang/Object;

    .line 6798
    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, v1, v12

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, v1, v11

    .line 6797
    invoke-static {v0, v1}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 6800
    :cond_e4
    return-void

    .line 6765
    :catchall_e5
    move-exception v0

    move v1, v13

    move-object v2, v14

    goto :goto_ea

    .end local v13  # "wipeData":Z
    .end local v14  # "strictestAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v1  # "wipeData":Z
    .restart local v2  # "strictestAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_e9
    move-exception v0

    :goto_ea
    :try_start_ea
    monitor-exit v3
    :try_end_eb
    .catchall {:try_start_ea .. :try_end_eb} :catchall_e9

    .end local v1  # "wipeData":Z
    .end local v2  # "strictestAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v9  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "userHandle":I
    :try_start_eb
    throw v0
    :try_end_ec
    .catchall {:try_start_eb .. :try_end_ec} :catchall_ec

    .line 6767
    .restart local v1  # "wipeData":Z
    .restart local v2  # "strictestAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v9  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "userHandle":I
    :catchall_ec
    move-exception v0

    iget-object v3, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v9, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0
.end method

.method public reportKeyguardDismissed(I)V
    .registers 5
    .param p1, "userHandle"  # I

    .line 6857
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 6858
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.BIND_DEVICE_ADMIN"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6861
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogIsLoggingEnabled()Z

    move-result v0

    if-eqz v0, :cond_1c

    .line 6862
    const v0, 0x33456

    const/4 v1, 0x0

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0, v1}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 6864
    :cond_1c
    return-void
.end method

.method public reportKeyguardSecured(I)V
    .registers 5
    .param p1, "userHandle"  # I

    .line 6868
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 6869
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.BIND_DEVICE_ADMIN"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6872
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogIsLoggingEnabled()Z

    move-result v0

    if-eqz v0, :cond_1c

    .line 6873
    const v0, 0x33458

    const/4 v1, 0x0

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v0, v1}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 6875
    :cond_1c
    return-void
.end method

.method public reportPasswordChanged(I)V
    .registers 8
    .param p1, "userId"  # I

    .line 6677
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-eqz v0, :cond_5e

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_d

    goto :goto_5e

    .line 6680
    :cond_d
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 6683
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSeparateProfileChallengeEnabled(I)Z

    move-result v0

    if-nez v0, :cond_1c

    .line 6684
    const-string/jumbo v0, "set the active password"

    invoke-direct {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceNotManagedProfile(ILjava/lang/String;)V

    .line 6687
    :cond_1c
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v1, 0x0

    const-string v2, "android.permission.BIND_DEVICE_ADMIN"

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6690
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    .line 6692
    .local v0, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 6694
    .local v1, "ident":J
    :try_start_2e
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v3

    monitor-enter v3
    :try_end_33
    .catchall {:try_start_2e .. :try_end_33} :catchall_57

    .line 6695
    const/4 v4, 0x0

    :try_start_34
    iput v4, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mFailedPasswordAttempts:I

    .line 6696
    invoke-direct {p0, p1, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordValidityCheckpointLocked(IZ)V

    .line 6697
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 6698
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordExpirationsLocked(I)V

    .line 6699
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-direct {p0, v5, p1, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setExpirationAlarmCheckLocked(Landroid/content/Context;IZ)V

    .line 6702
    const-string v5, "android.app.action.ACTION_PASSWORD_CHANGED"

    invoke-direct {p0, v5, v4, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandForLockscreenPoliciesLocked(Ljava/lang/String;II)V

    .line 6705
    monitor-exit v3
    :try_end_4a
    .catchall {:try_start_34 .. :try_end_4a} :catchall_54

    .line 6706
    :try_start_4a
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeCaApprovalsIfNeeded(I)V
    :try_end_4d
    .catchall {:try_start_4a .. :try_end_4d} :catchall_57

    .line 6708
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 6709
    nop

    .line 6710
    return-void

    .line 6705
    :catchall_54
    move-exception v4

    :try_start_55
    monitor-exit v3
    :try_end_56
    .catchall {:try_start_55 .. :try_end_56} :catchall_54

    .end local v0  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v1  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "userId":I
    :try_start_56
    throw v4
    :try_end_57
    .catchall {:try_start_56 .. :try_end_57} :catchall_57

    .line 6708
    .restart local v0  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .restart local v1  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "userId":I
    :catchall_57
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3

    .line 6678
    .end local v0  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v1  # "ident":J
    :cond_5e
    :goto_5e
    return-void
.end method

.method public reportSuccessfulBiometricAttempt(I)V
    .registers 7
    .param p1, "userHandle"  # I

    .line 6846
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 6847
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.BIND_DEVICE_ADMIN"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6849
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogIsLoggingEnabled()Z

    move-result v0

    if-eqz v0, :cond_2a

    .line 6850
    const v0, 0x33457

    const/4 v1, 0x2

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v2, 0x1

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    const/4 v4, 0x0

    aput-object v3, v1, v4

    .line 6851
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v1, v2

    .line 6850
    invoke-static {v0, v1}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 6853
    :cond_2a
    return-void
.end method

.method public reportSuccessfulPasswordAttempt(I)V
    .registers 9
    .param p1, "userHandle"  # I

    .line 6804
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 6805
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.BIND_DEVICE_ADMIN"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6808
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 6809
    :try_start_10
    invoke-virtual {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 6810
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mFailedPasswordAttempts:I

    const/4 v3, 0x0

    const/4 v4, 0x1

    if-nez v2, :cond_1e

    iget v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    if-ltz v2, :cond_3b

    .line 6811
    :cond_1e
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v5
    :try_end_24
    .catchall {:try_start_10 .. :try_end_24} :catchall_61

    .line 6813
    .local v5, "ident":J
    :try_start_24
    iput v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mFailedPasswordAttempts:I

    .line 6814
    const/4 v2, -0x1

    iput v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    .line 6815
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 6816
    iget-boolean v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-eqz v2, :cond_35

    .line 6817
    const-string v2, "android.app.action.ACTION_PASSWORD_SUCCEEDED"

    invoke-direct {p0, v2, v4, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandForLockscreenPoliciesLocked(Ljava/lang/String;II)V
    :try_end_35
    .catchall {:try_start_24 .. :try_end_35} :catchall_5a

    .line 6822
    :cond_35
    :try_start_35
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v5, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 6823
    nop

    .line 6825
    .end local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v5  # "ident":J
    :cond_3b
    monitor-exit v0
    :try_end_3c
    .catchall {:try_start_35 .. :try_end_3c} :catchall_61

    .line 6827
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogIsLoggingEnabled()Z

    move-result v0

    if-eqz v0, :cond_59

    .line 6828
    const v0, 0x33457

    const/4 v1, 0x2

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, v1, v3

    .line 6829
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, v1, v4

    .line 6828
    invoke-static {v0, v1}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 6831
    :cond_59
    return-void

    .line 6822
    .restart local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .restart local v5  # "ident":J
    :catchall_5a
    move-exception v2

    :try_start_5b
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v5, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "userHandle":I
    throw v2

    .line 6825
    .end local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v5  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "userHandle":I
    :catchall_61
    move-exception v1

    monitor-exit v0
    :try_end_63
    .catchall {:try_start_5b .. :try_end_63} :catchall_61

    throw v1
.end method

.method public requestBugreport(Landroid/content/ComponentName;)Z
    .registers 13
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 7359
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 7360
    return v1

    .line 7362
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7367
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureDeviceOwnerAndAllUsersAffiliated(Landroid/content/ComponentName;)V

    .line 7369
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportServiceIsActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    move-result v0

    if-nez v0, :cond_a3

    .line 7370
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerRemoteBugreportUri()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_1e

    goto/16 :goto_a3

    .line 7375
    :cond_1e
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v2

    .line 7376
    .local v2, "currentTime":J
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7377
    :try_start_27
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    .line 7378
    .local v4, "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-wide v5, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastBugReportRequestTime:J

    cmp-long v5, v2, v5

    if-lez v5, :cond_36

    .line 7379
    iput-wide v2, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastBugReportRequestTime:J

    .line 7380
    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 7382
    .end local v4  # "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :cond_36
    monitor-exit v0
    :try_end_37
    .catchall {:try_start_27 .. :try_end_37} :catchall_a0

    .line 7384
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v4

    .line 7386
    .local v4, "callingIdentity":J
    :try_start_3d
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v0

    const/4 v6, 0x2

    invoke-interface {v0, v6}, Landroid/app/IActivityManager;->requestBugReport(I)V

    .line 7389
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportServiceIsActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v6, 0x1

    invoke-virtual {v0, v6}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 7390
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportSharingAccepted:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 7391
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->registerRemoteBugreportReceivers()V

    .line 7392
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getNotificationManager()Landroid/app/NotificationManager;

    move-result-object v0

    const-string v7, "DevicePolicyManager"

    const v8, 0x28700e57

    iget-object v9, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 7394
    invoke-static {v9, v6}, Lcom/android/server/devicepolicy/RemoteBugreportUtils;->buildNotification(Landroid/content/Context;I)Landroid/app/Notification;

    move-result-object v9

    sget-object v10, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    .line 7392
    invoke-virtual {v0, v7, v8, v9, v10}, Landroid/app/NotificationManager;->notifyAsUser(Ljava/lang/String;ILandroid/app/Notification;Landroid/os/UserHandle;)V

    .line 7396
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHandler:Landroid/os/Handler;

    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mRemoteBugreportTimeoutRunnable:Ljava/lang/Runnable;

    const-wide/32 v8, 0x927c0

    invoke-virtual {v0, v7, v8, v9}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 7398
    const/16 v0, 0x35

    .line 7399
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 7400
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 7401
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V
    :try_end_82
    .catch Landroid/os/RemoteException; {:try_start_3d .. :try_end_82} :catch_8b
    .catchall {:try_start_3d .. :try_end_82} :catchall_89

    .line 7402
    nop

    .line 7408
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 7402
    return v6

    .line 7408
    :catchall_89
    move-exception v0

    goto :goto_9a

    .line 7403
    :catch_8b
    move-exception v0

    .line 7405
    .local v0, "re":Landroid/os/RemoteException;
    :try_start_8c
    const-string v6, "DevicePolicyManager"

    const-string v7, "Failed to make remote calls to start bugreportremote service"

    invoke-static {v6, v7, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_93
    .catchall {:try_start_8c .. :try_end_93} :catchall_89

    .line 7406
    nop

    .line 7408
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 7406
    return v1

    .line 7408
    .end local v0  # "re":Landroid/os/RemoteException;
    :goto_9a
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0

    .line 7382
    .end local v4  # "callingIdentity":J
    :catchall_a0
    move-exception v1

    :try_start_a1
    monitor-exit v0
    :try_end_a2
    .catchall {:try_start_a1 .. :try_end_a2} :catchall_a0

    throw v1

    .line 7371
    .end local v2  # "currentTime":J
    :cond_a3
    :goto_a3
    const-string v0, "DevicePolicyManager"

    const-string v2, "Remote bugreport wasn\'t started because there\'s already one running."

    invoke-static {v0, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 7372
    return v1
.end method

.method public resetPassword(Ljava/lang/String;I)Z
    .registers 14
    .param p1, "passwordOrNull"  # Ljava/lang/String;
    .param p2, "flags"  # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 5010
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    const/4 v1, 0x0

    if-nez v0, :cond_11

    .line 5011
    const-string v0, "DevicePolicyManager"

    const-string v2, "Cannot reset password when the device has no lock screen"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5012
    return v1

    .line 5015
    :cond_11
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v0

    .line 5016
    .local v0, "callingUid":I
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v10

    .line 5018
    .local v10, "userHandle":I
    if-eqz p1, :cond_21

    move-object v3, p1

    goto :goto_24

    :cond_21
    const-string v2, ""

    move-object v3, v2

    .line 5021
    .local v3, "password":Ljava/lang/String;
    :goto_24
    invoke-static {v3}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v2

    if-eqz v2, :cond_2f

    .line 5022
    const-string v2, "clear the active password"

    invoke-direct {p0, v10, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceNotManagedProfile(ILjava/lang/String;)V

    .line 5025
    :cond_2f
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 5027
    const/4 v4, -0x1

    const/4 v5, 0x0

    :try_start_36
    invoke-direct {p0, v5, v4, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminWithPolicyForUidLocked(Landroid/content/ComponentName;II)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v4

    .line 5030
    .local v4, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    const/4 v6, 0x1

    const/16 v7, 0x17

    if-eqz v4, :cond_5e

    .line 5031
    invoke-direct {p0, v4, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->canPOorDOCallResetPassword(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;I)Z

    move-result v5

    if-eqz v5, :cond_55

    .line 5035
    iget-object v5, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v5}, Landroid/app/admin/DeviceAdminInfo;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-direct {p0, v5, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTargetSdk(Ljava/lang/String;I)I

    move-result v5

    if-gt v5, v7, :cond_52

    goto :goto_53

    :cond_52
    move v6, v1

    :goto_53
    move v5, v6

    .local v5, "preN":Z
    goto :goto_a9

    .line 5032
    .end local v5  # "preN":Z
    :cond_55
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v5, "resetPassword() is deprecated for DPC targeting O or later"

    invoke-direct {v1, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUid":I
    .end local v3  # "password":Ljava/lang/String;
    .end local v10  # "userHandle":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "passwordOrNull":Ljava/lang/String;
    .end local p2  # "flags":I
    throw v1

    .line 5040
    .restart local v0  # "callingUid":I
    .restart local v3  # "password":Ljava/lang/String;
    .restart local v10  # "userHandle":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "passwordOrNull":Ljava/lang/String;
    .restart local p2  # "flags":I
    :cond_5e
    const/4 v8, 0x2

    const-string v9, "android.permission.RESET_PASSWORD"

    invoke-virtual {p0, v5, v8, v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminOrCheckPermissionForCallerLocked(Landroid/content/ComponentName;ILjava/lang/String;)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v5

    move-object v4, v5

    .line 5046
    if-nez v4, :cond_6a

    :cond_68
    move v6, v1

    goto :goto_76

    .line 5047
    :cond_6a
    iget-object v5, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    .line 5046
    invoke-virtual {v5}, Landroid/app/admin/DeviceAdminInfo;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-direct {p0, v5, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTargetSdk(Ljava/lang/String;I)I

    move-result v5

    if-gt v5, v7, :cond_68

    :goto_76
    move v5, v6

    .line 5051
    .restart local v5  # "preN":Z
    invoke-static {v3}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v6

    if-eqz v6, :cond_90

    .line 5052
    if-eqz v5, :cond_88

    .line 5055
    const-string v6, "DevicePolicyManager"

    const-string v7, "Cannot call with null password"

    invoke-static {v6, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5056
    monitor-exit v2

    return v1

    .line 5053
    :cond_88
    new-instance v1, Ljava/lang/SecurityException;

    const-string v6, "Cannot call with null password"

    invoke-direct {v1, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUid":I
    .end local v3  # "password":Ljava/lang/String;
    .end local v10  # "userHandle":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "passwordOrNull":Ljava/lang/String;
    .end local p2  # "flags":I
    throw v1

    .line 5060
    .restart local v0  # "callingUid":I
    .restart local v3  # "password":Ljava/lang/String;
    .restart local v10  # "userHandle":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "passwordOrNull":Ljava/lang/String;
    .restart local p2  # "flags":I
    :cond_90
    invoke-direct {p0, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isLockScreenSecureUnchecked(I)Z

    move-result v6

    if-eqz v6, :cond_a9

    .line 5061
    if-eqz v5, :cond_a1

    .line 5064
    const-string v6, "DevicePolicyManager"

    const-string v7, "Cannot change current password"

    invoke-static {v6, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5065
    monitor-exit v2

    return v1

    .line 5062
    :cond_a1
    new-instance v1, Ljava/lang/SecurityException;

    const-string v6, "Cannot change current password"

    invoke-direct {v1, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUid":I
    .end local v3  # "password":Ljava/lang/String;
    .end local v10  # "userHandle":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "passwordOrNull":Ljava/lang/String;
    .end local p2  # "flags":I
    throw v1

    .line 5070
    .restart local v0  # "callingUid":I
    .restart local v3  # "password":Ljava/lang/String;
    .restart local v10  # "userHandle":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "passwordOrNull":Ljava/lang/String;
    .restart local p2  # "flags":I
    :cond_a9
    :goto_a9
    invoke-direct {p0, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v6

    if-nez v6, :cond_df

    .line 5071
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v6, v10}, Landroid/os/UserManager;->getProfiles(I)Ljava/util/List;

    move-result-object v6

    invoke-interface {v6}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v6

    :goto_b9
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_df

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/pm/UserInfo;

    .line 5072
    .local v7, "userInfo":Landroid/content/pm/UserInfo;
    invoke-virtual {v7}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v8

    if-eqz v8, :cond_de

    .line 5073
    if-eqz v5, :cond_d6

    .line 5077
    const-string v6, "DevicePolicyManager"

    const-string v8, "Cannot reset password on user has managed profile"

    invoke-static {v6, v8}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5078
    monitor-exit v2

    return v1

    .line 5074
    :cond_d6
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v6, "Cannot reset password on user has managed profile"

    invoke-direct {v1, v6}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUid":I
    .end local v3  # "password":Ljava/lang/String;
    .end local v10  # "userHandle":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "passwordOrNull":Ljava/lang/String;
    .end local p2  # "flags":I
    throw v1

    .line 5081
    .end local v7  # "userInfo":Landroid/content/pm/UserInfo;
    .restart local v0  # "callingUid":I
    .restart local v3  # "password":Ljava/lang/String;
    .restart local v10  # "userHandle":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "passwordOrNull":Ljava/lang/String;
    .restart local p2  # "flags":I
    :cond_de
    goto :goto_b9

    .line 5084
    :cond_df
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v6, v10}, Landroid/os/UserManager;->isUserUnlocked(I)Z

    move-result v6

    if-nez v6, :cond_fa

    .line 5085
    if-eqz v5, :cond_f2

    .line 5088
    const-string v6, "DevicePolicyManager"

    const-string v7, "Cannot reset password when user is locked"

    invoke-static {v6, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5089
    monitor-exit v2

    return v1

    .line 5086
    :cond_f2
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v6, "Cannot reset password when user is locked"

    invoke-direct {v1, v6}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUid":I
    .end local v3  # "password":Ljava/lang/String;
    .end local v10  # "userHandle":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "passwordOrNull":Ljava/lang/String;
    .end local p2  # "flags":I
    throw v1

    .line 5092
    .end local v4  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v5  # "preN":Z
    .restart local v0  # "callingUid":I
    .restart local v3  # "password":Ljava/lang/String;
    .restart local v10  # "userHandle":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "passwordOrNull":Ljava/lang/String;
    .restart local p2  # "flags":I
    :cond_fa
    monitor-exit v2
    :try_end_fb
    .catchall {:try_start_36 .. :try_end_fb} :catchall_107

    .line 5094
    const-wide/16 v4, 0x0

    const/4 v6, 0x0

    move-object v2, p0

    move v7, p2

    move v8, v0

    move v9, v10

    invoke-direct/range {v2 .. v9}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->resetPasswordInternal(Ljava/lang/String;J[BIII)Z

    move-result v1

    return v1

    .line 5092
    :catchall_107
    move-exception v1

    :try_start_108
    monitor-exit v2
    :try_end_109
    .catchall {:try_start_108 .. :try_end_109} :catchall_107

    throw v1
.end method

.method public resetPasswordWithToken(Landroid/content/ComponentName;Ljava/lang/String;[BI)Z
    .registers 18
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "passwordOrNull"  # Ljava/lang/String;
    .param p3, "token"  # [B
    .param p4, "flags"  # I

    .line 13561
    move-object v9, p0

    iget-boolean v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_5b

    iget-object v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_10

    move-object v11, p1

    goto :goto_5c

    .line 13564
    :cond_10
    invoke-static/range {p3 .. p3}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13565
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v10

    monitor-enter v10

    .line 13566
    :try_start_18
    iget-object v0, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0
    :try_end_1e
    .catchall {:try_start_18 .. :try_end_1e} :catchall_55

    .line 13567
    .local v0, "userHandle":I
    const/4 v2, -0x1

    move-object v11, p1

    :try_start_20
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 13569
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    move-object v12, v2

    .line 13570
    .local v12, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-wide v2, v12, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-eqz v2, :cond_4b

    .line 13571
    if-eqz p2, :cond_34

    move-object v2, p2

    goto :goto_37

    :cond_34
    const-string v1, ""

    move-object v2, v1

    .line 13572
    .local v2, "password":Ljava/lang/String;
    :goto_37
    iget-wide v3, v12, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    iget-object v1, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 13573
    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v7

    .line 13572
    move-object v1, p0

    move-object/from16 v5, p3

    move/from16 v6, p4

    move v8, v0

    invoke-direct/range {v1 .. v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->resetPasswordInternal(Ljava/lang/String;J[BIII)Z

    move-result v1

    monitor-exit v10

    return v1

    .line 13575
    .end local v2  # "password":Ljava/lang/String;
    :cond_4b
    const-string v2, "DevicePolicyManager"

    const-string v3, "No saved token handle"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13577
    nop

    .end local v0  # "userHandle":I
    .end local v12  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    monitor-exit v10

    .line 13578
    return v1

    .line 13577
    :catchall_55
    move-exception v0

    move-object v11, p1

    :goto_57
    monitor-exit v10
    :try_end_58
    .catchall {:try_start_20 .. :try_end_58} :catchall_59

    throw v0

    :catchall_59
    move-exception v0

    goto :goto_57

    .line 13561
    :cond_5b
    move-object v11, p1

    .line 13562
    :goto_5c
    return v1
.end method

.method public retrieveNetworkLogs(Landroid/content/ComponentName;Ljava/lang/String;J)Ljava/util/List;
    .registers 13
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;
    .param p3, "batchToken"  # J
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/lang/String;",
            "J)",
            "Ljava/util/List<",
            "Landroid/app/admin/NetworkEvent;",
            ">;"
        }
    .end annotation

    .line 13351
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 13352
    return-object v1

    .line 13354
    :cond_6
    const/4 v0, -0x2

    const-string v2, "delegation-network-logging"

    invoke-direct {p0, p1, p2, v0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 13356
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureAllUsersAffiliated()V

    .line 13358
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13359
    :try_start_14
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    if-eqz v2, :cond_51

    .line 13360
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isNetworkLoggingEnabledInternalLocked()Z

    move-result v2

    if-nez v2, :cond_1f

    goto :goto_51

    .line 13363
    :cond_1f
    const/4 v1, 0x0

    if-nez p1, :cond_24

    const/4 v2, 0x1

    goto :goto_25

    :cond_24
    move v2, v1

    .line 13364
    .local v2, "isDelegate":Z
    :goto_25
    const/16 v3, 0x78

    .line 13365
    invoke-static {v3}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 13366
    invoke-virtual {v3, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 13367
    invoke-virtual {v3, v2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 13368
    invoke-virtual {v3}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 13370
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v3

    .line 13371
    .local v3, "currentTime":J
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v5

    .line 13372
    .local v5, "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-wide v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastNetworkLogsRetrievalTime:J

    cmp-long v6, v3, v6

    if-lez v6, :cond_49

    .line 13373
    iput-wide v3, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mLastNetworkLogsRetrievalTime:J

    .line 13374
    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 13376
    :cond_49
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mNetworkLogger:Lcom/android/server/devicepolicy/NetworkLogger;

    invoke-virtual {v1, p3, p4}, Lcom/android/server/devicepolicy/NetworkLogger;->retrieveLogs(J)Ljava/util/List;

    move-result-object v1

    monitor-exit v0

    return-object v1

    .line 13361
    .end local v2  # "isDelegate":Z
    .end local v3  # "currentTime":J
    .end local v5  # "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :cond_51
    :goto_51
    monitor-exit v0

    return-object v1

    .line 13377
    :catchall_53
    move-exception v1

    monitor-exit v0
    :try_end_55
    .catchall {:try_start_14 .. :try_end_55} :catchall_53

    throw v1
.end method

.method public retrievePreRebootSecurityLogs(Landroid/content/ComponentName;)Landroid/content/pm/ParceledListSlice;
    .registers 6
    .param p1, "admin"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            ")",
            "Landroid/content/pm/ParceledListSlice<",
            "Landroid/app/admin/SecurityLog$SecurityEvent;",
            ">;"
        }
    .end annotation

    .line 12708
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 12709
    return-object v1

    .line 12712
    :cond_6
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12713
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureDeviceOwnerAndAllUsersAffiliated(Landroid/content/ComponentName;)V

    .line 12715
    const/16 v0, 0x11

    .line 12716
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 12717
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 12718
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 12720
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v2, 0x11100d2

    invoke-virtual {v0, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v0

    if-eqz v0, :cond_54

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 12721
    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogGetLoggingEnabledProperty()Z

    move-result v0

    if-nez v0, :cond_31

    goto :goto_54

    .line 12725
    :cond_31
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->recordSecurityLogRetrievalTime()V

    .line 12726
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 12728
    .local v0, "output":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/admin/SecurityLog$SecurityEvent;>;"
    :try_start_39
    invoke-static {v0}, Landroid/app/admin/SecurityLog;->readPreviousEvents(Ljava/util/Collection;)V

    .line 12729
    new-instance v1, Landroid/content/pm/ParceledListSlice;

    invoke-direct {v1, v0}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V
    :try_end_41
    .catch Ljava/io/IOException; {:try_start_39 .. :try_end_41} :catch_42

    return-object v1

    .line 12730
    :catch_42
    move-exception v1

    .line 12731
    .local v1, "e":Ljava/io/IOException;
    const-string v2, "DevicePolicyManager"

    const-string v3, "Fail to read previous events"

    invoke-static {v2, v3, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 12732
    new-instance v2, Landroid/content/pm/ParceledListSlice;

    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v3

    invoke-direct {v2, v3}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object v2

    .line 12722
    .end local v0  # "output":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/admin/SecurityLog$SecurityEvent;>;"
    .end local v1  # "e":Ljava/io/IOException;
    :cond_54
    :goto_54
    return-object v1
.end method

.method public retrieveSecurityLogs(Landroid/content/ComponentName;)Landroid/content/pm/ParceledListSlice;
    .registers 5
    .param p1, "admin"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            ")",
            "Landroid/content/pm/ParceledListSlice<",
            "Landroid/app/admin/SecurityLog$SecurityEvent;",
            ">;"
        }
    .end annotation

    .line 12738
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 12739
    return-object v1

    .line 12742
    :cond_6
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12743
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureDeviceOwnerAndAllUsersAffiliated(Landroid/content/ComponentName;)V

    .line 12745
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogGetLoggingEnabledProperty()Z

    move-result v0

    if-nez v0, :cond_15

    .line 12746
    return-object v1

    .line 12749
    :cond_15
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->recordSecurityLogRetrievalTime()V

    .line 12751
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSecurityLogMonitor:Lcom/android/server/devicepolicy/SecurityLogMonitor;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/SecurityLogMonitor;->retrieveLogs()Ljava/util/List;

    move-result-object v0

    .line 12752
    .local v0, "logs":Ljava/util/List;, "Ljava/util/List<Landroid/app/admin/SecurityLog$SecurityEvent;>;"
    const/16 v2, 0x10

    .line 12753
    invoke-static {v2}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 12754
    invoke-virtual {v2, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 12755
    invoke-virtual {v2}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 12756
    if-eqz v0, :cond_32

    new-instance v1, Landroid/content/pm/ParceledListSlice;

    invoke-direct {v1, v0}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    :cond_32
    return-object v1
.end method

.method saveTransferOwnershipBundleLocked(Landroid/os/PersistableBundle;I)V
    .registers 10
    .param p1, "bundle"  # Landroid/os/PersistableBundle;
    .param p2, "userId"  # I
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 14083
    const-string/jumbo v0, "transfer-ownership-bundle"

    new-instance v1, Ljava/io/File;

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 14084
    invoke-virtual {v2, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->environmentGetUserSystemDirectory(I)Ljava/io/File;

    move-result-object v2

    const-string/jumbo v3, "transfer-ownership-parameters.xml"

    invoke-direct {v1, v2, v3}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 14086
    .local v1, "parametersFile":Ljava/io/File;
    new-instance v2, Landroid/util/AtomicFile;

    invoke-direct {v2, v1}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    .line 14087
    .local v2, "atomicFile":Landroid/util/AtomicFile;
    const/4 v3, 0x0

    .line 14089
    .local v3, "stream":Ljava/io/FileOutputStream;
    :try_start_17
    invoke-virtual {v2}, Landroid/util/AtomicFile;->startWrite()Ljava/io/FileOutputStream;

    move-result-object v4

    move-object v3, v4

    .line 14090
    new-instance v4, Lcom/android/internal/util/FastXmlSerializer;

    invoke-direct {v4}, Lcom/android/internal/util/FastXmlSerializer;-><init>()V

    .line 14091
    .local v4, "serializer":Lorg/xmlpull/v1/XmlSerializer;
    sget-object v5, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v5}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v5

    invoke-interface {v4, v3, v5}, Lorg/xmlpull/v1/XmlSerializer;->setOutput(Ljava/io/OutputStream;Ljava/lang/String;)V

    .line 14092
    const/4 v5, 0x1

    invoke-static {v5}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v5

    const/4 v6, 0x0

    invoke-interface {v4, v6, v5}, Lorg/xmlpull/v1/XmlSerializer;->startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V

    .line 14093
    invoke-interface {v4, v6, v0}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 14094
    invoke-virtual {p1, v4}, Landroid/os/PersistableBundle;->saveToXml(Lorg/xmlpull/v1/XmlSerializer;)V

    .line 14095
    invoke-interface {v4, v6, v0}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 14096
    invoke-interface {v4}, Lorg/xmlpull/v1/XmlSerializer;->endDocument()V

    .line 14097
    invoke-virtual {v2, v3}, Landroid/util/AtomicFile;->finishWrite(Ljava/io/FileOutputStream;)V
    :try_end_42
    .catch Ljava/io/IOException; {:try_start_17 .. :try_end_42} :catch_43
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_17 .. :try_end_42} :catch_43

    .line 14103
    .end local v4  # "serializer":Lorg/xmlpull/v1/XmlSerializer;
    goto :goto_60

    .line 14098
    :catch_43
    move-exception v0

    .line 14099
    .local v0, "e":Ljava/lang/Exception;
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Caught exception while trying to save the owner transfer parameters to file "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "DevicePolicyManager"

    invoke-static {v5, v4, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 14101
    invoke-virtual {v1}, Ljava/io/File;->delete()Z

    .line 14102
    invoke-virtual {v2, v3}, Landroid/util/AtomicFile;->failWrite(Ljava/io/FileOutputStream;)V

    .line 14104
    .end local v0  # "e":Ljava/lang/Exception;
    :goto_60
    return-void
.end method

.method sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;)V
    .registers 4
    .param p1, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .param p2, "action"  # Ljava/lang/String;

    .line 2863
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/content/BroadcastReceiver;)V

    .line 2864
    return-void
.end method

.method sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/content/BroadcastReceiver;)V
    .registers 5
    .param p1, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .param p2, "action"  # Ljava/lang/String;
    .param p3, "result"  # Landroid/content/BroadcastReceiver;

    .line 2867
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/os/Bundle;Landroid/content/BroadcastReceiver;)V

    .line 2868
    return-void
.end method

.method sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/os/Bundle;Landroid/content/BroadcastReceiver;)V
    .registers 11
    .param p1, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .param p2, "action"  # Ljava/lang/String;
    .param p3, "adminExtras"  # Landroid/os/Bundle;
    .param p4, "result"  # Landroid/content/BroadcastReceiver;

    .line 2872
    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/os/Bundle;Landroid/content/BroadcastReceiver;Z)Z

    .line 2873
    return-void
.end method

.method sendAdminCommandLocked(Ljava/lang/String;IILandroid/os/Bundle;)V
    .registers 10
    .param p1, "action"  # Ljava/lang/String;
    .param p2, "reqPolicy"  # I
    .param p3, "userHandle"  # I
    .param p4, "adminExtras"  # Landroid/os/Bundle;

    .line 2921
    invoke-virtual {p0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v0

    .line 2922
    .local v0, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v1, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 2923
    .local v1, "count":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_b
    if-ge v2, v1, :cond_24

    .line 2924
    iget-object v3, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 2925
    .local v3, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v4, p2}, Landroid/app/admin/DeviceAdminInfo;->usesPolicy(I)Z

    move-result v4

    if-eqz v4, :cond_21

    .line 2926
    const/4 v4, 0x0

    invoke-virtual {p0, v3, p1, p4, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/os/Bundle;Landroid/content/BroadcastReceiver;)V

    .line 2923
    .end local v3  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_21
    add-int/lit8 v2, v2, 0x1

    goto :goto_b

    .line 2929
    .end local v2  # "i":I
    :cond_24
    return-void
.end method

.method sendAdminCommandLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/lang/String;Landroid/os/Bundle;Landroid/content/BroadcastReceiver;Z)Z
    .registers 25
    .param p1, "admin"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .param p2, "action"  # Ljava/lang/String;
    .param p3, "adminExtras"  # Landroid/os/Bundle;
    .param p4, "result"  # Landroid/content/BroadcastReceiver;
    .param p5, "inForeground"  # Z

    .line 2882
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    new-instance v4, Landroid/content/Intent;

    invoke-direct {v4, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 2883
    .local v4, "intent":Landroid/content/Intent;
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    invoke-virtual {v5}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    invoke-virtual {v4, v5}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 2884
    iget-object v5, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {v5}, Landroid/os/UserManager;->isDeviceInDemoMode(Landroid/content/Context;)Z

    move-result v5

    const/high16 v6, 0x10000000

    if-eqz v5, :cond_23

    .line 2885
    invoke-virtual {v4, v6}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 2887
    :cond_23
    const-string v5, "android.app.action.ACTION_PASSWORD_EXPIRING"

    invoke-virtual {v2, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_32

    .line 2888
    iget-wide v7, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationDate:J

    const-string v5, "expiration"

    invoke-virtual {v4, v5, v7, v8}, Landroid/content/Intent;->putExtra(Ljava/lang/String;J)Landroid/content/Intent;

    .line 2890
    :cond_32
    if-eqz p5, :cond_37

    .line 2891
    invoke-virtual {v4, v6}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 2893
    :cond_37
    if-eqz v3, :cond_3c

    .line 2894
    invoke-virtual {v4, v3}, Landroid/content/Intent;->putExtras(Landroid/os/Bundle;)Landroid/content/Intent;

    .line 2896
    :cond_3c
    iget-object v5, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v5

    .line 2899
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v7

    .line 2896
    invoke-virtual {v5, v4, v6, v7}, Landroid/content/pm/PackageManager;->queryBroadcastReceiversAsUser(Landroid/content/Intent;ILandroid/os/UserHandle;)Ljava/util/List;

    move-result-object v5

    .line 2899
    invoke-interface {v5}, Ljava/util/List;->isEmpty()Z

    move-result v5

    if-eqz v5, :cond_52

    .line 2900
    const/4 v5, 0x0

    return v5

    .line 2903
    :cond_52
    invoke-static {}, Landroid/app/BroadcastOptions;->makeBasic()Landroid/app/BroadcastOptions;

    move-result-object v15

    .line 2904
    .local v15, "options":Landroid/app/BroadcastOptions;
    const/4 v14, 0x1

    invoke-virtual {v15, v14}, Landroid/app/BroadcastOptions;->setBackgroundActivityStartsAllowed(Z)V

    .line 2906
    if-eqz p4, :cond_7e

    .line 2907
    iget-object v5, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v7

    const/4 v8, 0x0

    const/4 v9, -0x1

    .line 2908
    invoke-virtual {v15}, Landroid/app/BroadcastOptions;->toBundle()Landroid/os/Bundle;

    move-result-object v10

    iget-object v12, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHandler:Landroid/os/Handler;

    const/4 v13, -0x1

    const/16 v16, 0x0

    const/16 v17, 0x0

    .line 2907
    move-object v6, v4

    move-object/from16 v11, p4

    move/from16 v18, v14

    move-object/from16 v14, v16

    move-object/from16 v16, v15

    .end local v15  # "options":Landroid/app/BroadcastOptions;
    .local v16, "options":Landroid/app/BroadcastOptions;
    move-object/from16 v15, v17

    invoke-virtual/range {v5 .. v15}, Landroid/content/Context;->sendOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;ILandroid/os/Bundle;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V

    goto :goto_90

    .line 2911
    .end local v16  # "options":Landroid/app/BroadcastOptions;
    .restart local v15  # "options":Landroid/app/BroadcastOptions;
    :cond_7e
    move/from16 v18, v14

    move-object/from16 v16, v15

    .end local v15  # "options":Landroid/app/BroadcastOptions;
    .restart local v16  # "options":Landroid/app/BroadcastOptions;
    iget-object v5, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v6

    const/4 v7, 0x0

    invoke-virtual/range {v16 .. v16}, Landroid/app/BroadcastOptions;->toBundle()Landroid/os/Bundle;

    move-result-object v8

    invoke-virtual {v5, v4, v6, v7, v8}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/os/Bundle;)V

    .line 2914
    :goto_90
    return v18
.end method

.method sendDeviceOwnerCommand(Ljava/lang/String;Landroid/os/Bundle;)V
    .registers 7
    .param p1, "action"  # Ljava/lang/String;
    .param p2, "extras"  # Landroid/os/Bundle;

    .line 7414
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 7415
    :try_start_5
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v1

    .line 7416
    .local v1, "deviceOwnerUserId":I
    monitor-exit v0
    :try_end_c
    .catchall {:try_start_5 .. :try_end_c} :catchall_32

    .line 7418
    const/4 v0, 0x0

    .line 7419
    .local v0, "receiverComponent":Landroid/content/ComponentName;
    const-string v2, "android.app.action.NETWORK_LOGS_AVAILABLE"

    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1b

    .line 7420
    const-string v2, "delegation-network-logging"

    invoke-direct {p0, v2, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->resolveDelegateReceiver(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v0

    .line 7423
    :cond_1b
    if-nez v0, :cond_2e

    .line 7424
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 7425
    :try_start_22
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerComponent()Landroid/content/ComponentName;

    move-result-object v3

    move-object v0, v3

    .line 7426
    monitor-exit v2

    goto :goto_2e

    :catchall_2b
    move-exception v3

    monitor-exit v2
    :try_end_2d
    .catchall {:try_start_22 .. :try_end_2d} :catchall_2b

    throw v3

    .line 7428
    :cond_2e
    :goto_2e
    invoke-direct {p0, p1, p2, v1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendActiveAdminCommand(Ljava/lang/String;Landroid/os/Bundle;ILandroid/content/ComponentName;)V

    .line 7429
    return-void

    .line 7416
    .end local v0  # "receiverComponent":Landroid/content/ComponentName;
    .end local v1  # "deviceOwnerUserId":I
    :catchall_32
    move-exception v1

    :try_start_33
    monitor-exit v0
    :try_end_34
    .catchall {:try_start_33 .. :try_end_34} :catchall_32

    throw v1
.end method

.method public setAccountManagementDisabled(Landroid/content/ComponentName;Ljava/lang/String;Z)V
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "accountType"  # Ljava/lang/String;
    .param p3, "disabled"  # Z

    .line 10368
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 10369
    return-void

    .line 10371
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10372
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10373
    const/4 v1, -0x1

    :try_start_10
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 10375
    .local v1, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz p3, :cond_1c

    .line 10376
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->accountTypesWithManagementDisabled:Ljava/util/Set;

    invoke-interface {v2, p2}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    goto :goto_21

    .line 10378
    :cond_1c
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->accountTypesWithManagementDisabled:Ljava/util/Set;

    invoke-interface {v2, p2}, Ljava/util/Set;->remove(Ljava/lang/Object;)Z

    .line 10380
    :goto_21
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 10381
    .end local v1  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v0

    .line 10382
    return-void

    .line 10381
    :catchall_2a
    move-exception v1

    monitor-exit v0
    :try_end_2c
    .catchall {:try_start_10 .. :try_end_2c} :catchall_2a

    throw v1
.end method

.method public setActiveAdmin(Landroid/content/ComponentName;ZI)V
    .registers 5
    .param p1, "adminReceiver"  # Landroid/content/ComponentName;
    .param p2, "refreshing"  # Z
    .param p3, "userHandle"  # I

    .line 3780
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 3781
    return-void

    .line 3783
    :cond_5
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, p3, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setActiveAdmin(Landroid/content/ComponentName;ZILandroid/os/Bundle;)V

    .line 3784
    return-void
.end method

.method public setActivePasswordState(Landroid/app/admin/PasswordMetrics;I)V
    .registers 6
    .param p1, "metrics"  # Landroid/app/admin/PasswordMetrics;
    .param p2, "userHandle"  # I

    .line 6657
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_9

    .line 6658
    return-void

    .line 6660
    :cond_9
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 6661
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v1, 0x0

    const-string v2, "android.permission.BIND_DEVICE_ADMIN"

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6665
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v0

    if-eqz v0, :cond_26

    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isSeparateProfileChallengeEnabled(I)Z

    move-result v0

    if-nez v0, :cond_26

    .line 6666
    new-instance v0, Landroid/app/admin/PasswordMetrics;

    invoke-direct {v0}, Landroid/app/admin/PasswordMetrics;-><init>()V

    move-object p1, v0

    .line 6669
    :cond_26
    iget v0, p1, Landroid/app/admin/PasswordMetrics;->quality:I

    invoke-static {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->validateQualityConstant(I)V

    .line 6670
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 6671
    :try_start_30
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserPasswordMetrics:Landroid/util/SparseArray;

    invoke-virtual {v1, p2, p1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 6672
    monitor-exit v0

    .line 6673
    return-void

    .line 6672
    :catchall_37
    move-exception v1

    monitor-exit v0
    :try_end_39
    .catchall {:try_start_30 .. :try_end_39} :catchall_37

    throw v1
.end method

.method public setAffiliationIds(Landroid/content/ComponentName;Ljava/util/List;)V
    .registers 8
    .param p1, "admin"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;)V"
        }
    .end annotation

    .line 12545
    .local p2, "ids":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 12546
    return-void

    .line 12548
    :cond_5
    if-eqz p2, :cond_64

    .line 12551
    invoke-interface {p2}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_b
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_27

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    .line 12552
    .local v1, "id":Ljava/lang/String;
    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v2

    if-nez v2, :cond_1e

    .line 12555
    .end local v1  # "id":Ljava/lang/String;
    goto :goto_b

    .line 12553
    .restart local v1  # "id":Ljava/lang/String;
    :cond_1e
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "ids must not contain empty string"

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12557
    .end local v1  # "id":Ljava/lang/String;
    :cond_27
    new-instance v0, Landroid/util/ArraySet;

    invoke-direct {v0, p2}, Landroid/util/ArraySet;-><init>(Ljava/util/Collection;)V

    .line 12558
    .local v0, "affiliationIds":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v1

    .line 12559
    .local v1, "callingUserId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 12560
    const/4 v3, -0x1

    :try_start_38
    invoke-virtual {p0, p1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 12561
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v3

    iput-object v0, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAffiliationIds:Ljava/util/Set;

    .line 12562
    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 12563
    if-eqz v1, :cond_56

    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v3

    if-eqz v3, :cond_56

    .line 12566
    const/4 v3, 0x0

    invoke-virtual {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    iput-object v0, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAffiliationIds:Ljava/util/Set;

    .line 12567
    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 12573
    :cond_56
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybePauseDeviceWideLoggingLocked()V

    .line 12574
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeResumeDeviceWideLoggingLocked()V

    .line 12575
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeClearLockTaskPolicyLocked()V

    .line 12576
    monitor-exit v2

    .line 12577
    return-void

    .line 12576
    :catchall_61
    move-exception v3

    monitor-exit v2
    :try_end_63
    .catchall {:try_start_38 .. :try_end_63} :catchall_61

    throw v3

    .line 12549
    .end local v0  # "affiliationIds":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    .end local v1  # "callingUserId":I
    :cond_64
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "ids must not be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setAlwaysOnVpnPackage(Landroid/content/ComponentName;Ljava/lang/String;ZLjava/util/List;)Z
    .registers 13
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "vpnPackage"  # Ljava/lang/String;
    .param p3, "lockdown"  # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/lang/String;",
            "Z",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;)Z"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 6416
    .local p4, "lockdownWhitelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 6418
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 6419
    .local v0, "userId":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 6421
    .local v1, "token":J
    const-string v3, "DevicePolicyManager"

    const/4 v4, 0x1

    if-eqz p2, :cond_38

    :try_start_14
    invoke-virtual {p0, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isPackageInstalledForUser(Ljava/lang/String;I)Z

    move-result v5

    if-eqz v5, :cond_1b

    goto :goto_38

    .line 6422
    :cond_1b
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Non-existent VPN package specified: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6423
    new-instance v3, Landroid/os/ServiceSpecificException;

    invoke-direct {v3, v4, p2}, Landroid/os/ServiceSpecificException;-><init>(ILjava/lang/String;)V

    .end local v0  # "userId":I
    .end local v1  # "token":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "vpnPackage":Ljava/lang/String;
    .end local p3  # "lockdown":Z
    .end local p4  # "lockdownWhitelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    throw v3

    .line 6449
    .restart local v0  # "userId":I
    .restart local v1  # "token":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "vpnPackage":Ljava/lang/String;
    .restart local p3  # "lockdown":Z
    .restart local p4  # "lockdownWhitelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :catchall_35
    move-exception v3

    goto/16 :goto_ac

    .line 6427
    :cond_38
    :goto_38
    if-eqz p2, :cond_6f

    if-eqz p3, :cond_6f

    if-eqz p4, :cond_6f

    .line 6428
    invoke-interface {p4}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_42
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_6f

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/String;

    .line 6429
    .local v6, "packageName":Ljava/lang/String;
    invoke-virtual {p0, v6, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isPackageInstalledForUser(Ljava/lang/String;I)Z

    move-result v7

    if-eqz v7, :cond_55

    .line 6434
    .end local v6  # "packageName":Ljava/lang/String;
    goto :goto_42

    .line 6430
    .restart local v6  # "packageName":Ljava/lang/String;
    :cond_55
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Non-existent package in VPN whitelist: "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6431
    new-instance v3, Landroid/os/ServiceSpecificException;

    invoke-direct {v3, v4, v6}, Landroid/os/ServiceSpecificException;-><init>(ILjava/lang/String;)V

    .end local v0  # "userId":I
    .end local v1  # "token":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "vpnPackage":Ljava/lang/String;
    .end local p3  # "lockdown":Z
    .end local p4  # "lockdownWhitelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    throw v3

    .line 6437
    .end local v6  # "packageName":Ljava/lang/String;
    .restart local v0  # "userId":I
    .restart local v1  # "token":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "vpnPackage":Ljava/lang/String;
    .restart local p3  # "lockdown":Z
    .restart local p4  # "lockdownWhitelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_6f
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getConnectivityManager()Landroid/net/ConnectivityManager;

    move-result-object v3

    invoke-virtual {v3, v0, p2, p3, p4}, Landroid/net/ConnectivityManager;->setAlwaysOnVpnPackageForUser(ILjava/lang/String;ZLjava/util/List;)Z

    move-result v3

    if-eqz v3, :cond_a6

    .line 6441
    const/16 v3, 0x1a

    .line 6442
    invoke-static {v3}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 6443
    invoke-virtual {v3, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    new-array v5, v4, [Ljava/lang/String;

    const/4 v6, 0x0

    aput-object p2, v5, v6

    .line 6444
    invoke-virtual {v3, v5}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 6445
    invoke-virtual {v3, p3}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 6446
    if-eqz p4, :cond_98

    invoke-interface {p4}, Ljava/util/List;->size()I

    move-result v6

    :cond_98
    invoke-virtual {v3, v6}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 6447
    invoke-virtual {v3}, Landroid/app/admin/DevicePolicyEventLogger;->write()V
    :try_end_9f
    .catchall {:try_start_14 .. :try_end_9f} :catchall_35

    .line 6449
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 6450
    nop

    .line 6451
    return v4

    .line 6439
    :cond_a6
    :try_start_a6
    new-instance v3, Ljava/lang/UnsupportedOperationException;

    invoke-direct {v3}, Ljava/lang/UnsupportedOperationException;-><init>()V

    .end local v0  # "userId":I
    .end local v1  # "token":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "vpnPackage":Ljava/lang/String;
    .end local p3  # "lockdown":Z
    .end local p4  # "lockdownWhitelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    throw v3
    :try_end_ac
    .catchall {:try_start_a6 .. :try_end_ac} :catchall_35

    .line 6449
    .restart local v0  # "userId":I
    .restart local v1  # "token":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "vpnPackage":Ljava/lang/String;
    .restart local p3  # "lockdown":Z
    .restart local p4  # "lockdownWhitelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :goto_ac
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method public setApplicationHidden(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Z)Z
    .registers 13
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "packageName"  # Ljava/lang/String;
    .param p4, "hidden"  # Z

    .line 10151
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 10152
    .local v0, "callingUserId":I
    const/4 v1, 0x0

    .line 10153
    .local v1, "result":Z
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 10155
    const/4 v3, -0x1

    :try_start_b
    const-string v4, "delegation-package-access"

    invoke-direct {p0, p1, p2, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 10158
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v3
    :try_end_16
    .catchall {:try_start_b .. :try_end_16} :catchall_64

    .line 10160
    .local v3, "id":J
    :try_start_16
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    .line 10161
    invoke-interface {v5, p3, p4, v0}, Landroid/content/pm/IPackageManager;->setApplicationHiddenSettingAsUser(Ljava/lang/String;ZI)Z

    move-result v5
    :try_end_1c
    .catch Landroid/os/RemoteException; {:try_start_16 .. :try_end_1c} :catch_25
    .catchall {:try_start_16 .. :try_end_1c} :catchall_23

    move v1, v5

    .line 10166
    :try_start_1d
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    :goto_1f
    invoke-virtual {v5, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V
    :try_end_22
    .catchall {:try_start_1d .. :try_end_22} :catchall_64

    .line 10167
    goto :goto_31

    .line 10166
    :catchall_23
    move-exception v5

    goto :goto_5e

    .line 10162
    :catch_25
    move-exception v5

    .line 10164
    .local v5, "re":Landroid/os/RemoteException;
    :try_start_26
    const-string v6, "DevicePolicyManager"

    const-string v7, "Failed to setApplicationHiddenSetting"

    invoke-static {v6, v7, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2d
    .catchall {:try_start_26 .. :try_end_2d} :catchall_23

    .line 10166
    nop

    .end local v5  # "re":Landroid/os/RemoteException;
    :try_start_2e
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    goto :goto_1f

    .line 10168
    .end local v3  # "id":J
    :goto_31
    monitor-exit v2
    :try_end_32
    .catchall {:try_start_2e .. :try_end_32} :catchall_64

    .line 10169
    const/4 v2, 0x1

    const/4 v3, 0x0

    if-nez p1, :cond_38

    move v4, v2

    goto :goto_39

    :cond_38
    move v4, v3

    .line 10170
    .local v4, "isDelegate":Z
    :goto_39
    const/16 v5, 0x3f

    .line 10171
    invoke-static {v5}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v5

    .line 10172
    invoke-virtual {v5, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v5

    .line 10173
    invoke-virtual {v5, v4}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v5

    const/4 v6, 0x2

    new-array v6, v6, [Ljava/lang/String;

    aput-object p3, v6, v3

    .line 10174
    if-eqz p4, :cond_51

    const-string v3, "hidden"

    goto :goto_54

    :cond_51
    const-string/jumbo v3, "not_hidden"

    :goto_54
    aput-object v3, v6, v2

    invoke-virtual {v5, v6}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 10175
    invoke-virtual {v2}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10176
    return v1

    .line 10166
    .end local v4  # "isDelegate":Z
    .restart local v3  # "id":J
    :goto_5e
    :try_start_5e
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "callingUserId":I
    .end local v1  # "result":Z
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageName":Ljava/lang/String;
    .end local p4  # "hidden":Z
    throw v5

    .line 10168
    .end local v3  # "id":J
    .restart local v0  # "callingUserId":I
    .restart local v1  # "result":Z
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageName":Ljava/lang/String;
    .restart local p4  # "hidden":Z
    :catchall_64
    move-exception v3

    monitor-exit v2
    :try_end_66
    .catchall {:try_start_5e .. :try_end_66} :catchall_64

    throw v3
.end method

.method public setApplicationRestrictions(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)V
    .registers 12
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "packageName"  # Ljava/lang/String;
    .param p4, "settings"  # Landroid/os/Bundle;

    .line 8994
    const/4 v0, -0x1

    const-string v1, "delegation-app-restrictions"

    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 8997
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v0

    .line 8998
    .local v0, "userHandle":Landroid/os/UserHandle;
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 9000
    .local v1, "id":J
    :try_start_12
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v3, p3, p4, v0}, Landroid/os/UserManager;->setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;Landroid/os/UserHandle;)V

    .line 9001
    const/4 v3, 0x1

    const/4 v4, 0x0

    if-nez p1, :cond_1d

    move v5, v3

    goto :goto_1e

    :cond_1d
    move v5, v4

    .line 9002
    .local v5, "isDelegate":Z
    :goto_1e
    const/16 v6, 0x3e

    .line 9003
    invoke-static {v6}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v6

    .line 9004
    invoke-virtual {v6, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v6

    .line 9005
    invoke-virtual {v6, v5}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v6

    new-array v3, v3, [Ljava/lang/String;

    aput-object p3, v3, v4

    .line 9006
    invoke-virtual {v6, v3}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 9007
    invoke-virtual {v3}, Landroid/app/admin/DevicePolicyEventLogger;->write()V
    :try_end_37
    .catchall {:try_start_12 .. :try_end_37} :catchall_3e

    .line 9009
    .end local v5  # "isDelegate":Z
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9010
    nop

    .line 9011
    return-void

    .line 9009
    :catchall_3e
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method public setApplicationRestrictionsManagingPackage(Landroid/content/ComponentName;Ljava/lang/String;)Z
    .registers 5
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;

    .line 8971
    :try_start_0
    const-string v0, "delegation-app-restrictions"

    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDelegatedScopePreO(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V
    :try_end_5
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_5} :catch_8

    .line 8974
    nop

    .line 8975
    const/4 v0, 0x1

    return v0

    .line 8972
    :catch_8
    move-exception v0

    .line 8973
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    const/4 v1, 0x0

    return v1
.end method

.method public setAutoTimeRequired(Landroid/content/ComponentName;Z)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "required"  # Z

    .line 7239
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 7240
    return-void

    .line 7242
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7243
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 7244
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 7245
    const/4 v2, -0x1

    :try_start_14
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 7247
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->requireAutoTime:Z

    if-eq v3, p2, :cond_21

    .line 7248
    iput-boolean p2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->requireAutoTime:Z

    .line 7249
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 7251
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_21
    monitor-exit v1
    :try_end_22
    .catchall {:try_start_14 .. :try_end_22} :catchall_51

    .line 7254
    if-eqz p2, :cond_3f

    .line 7255
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 7257
    .local v1, "ident":J
    :try_start_2a
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string v4, "auto_time"

    const/4 v5, 0x1

    invoke-virtual {v3, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalPutInt(Ljava/lang/String;I)V
    :try_end_32
    .catchall {:try_start_2a .. :try_end_32} :catchall_38

    .line 7259
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 7260
    goto :goto_3f

    .line 7259
    :catchall_38
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3

    .line 7262
    .end local v1  # "ident":J
    :cond_3f
    :goto_3f
    const/16 v1, 0x24

    .line 7263
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7264
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7265
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7266
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 7267
    return-void

    .line 7251
    :catchall_51
    move-exception v2

    :try_start_52
    monitor-exit v1
    :try_end_53
    .catchall {:try_start_52 .. :try_end_53} :catchall_51

    throw v2
.end method

.method public setBackupServiceEnabled(Landroid/content/ComponentName;Z)V
    .registers 4
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "enabled"  # Z

    .line 12987
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 12988
    return-void

    .line 12990
    :cond_5
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12991
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 12992
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 12993
    .local v0, "userId":I
    invoke-direct {p0, v0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->toggleBackupServiceActive(IZ)V

    .line 12994
    return-void
.end method

.method public setBluetoothContactSharingDisabled(Landroid/content/ComponentName;Z)V
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "disabled"  # Z

    .line 10609
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 10610
    return-void

    .line 10612
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10613
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10614
    const/4 v1, -0x1

    :try_start_10
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 10616
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableBluetoothContactSharing:Z

    if-eq v2, p2, :cond_21

    .line 10617
    iput-boolean p2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableBluetoothContactSharing:Z

    .line 10618
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 10620
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_21
    monitor-exit v0
    :try_end_22
    .catchall {:try_start_10 .. :try_end_22} :catchall_34

    .line 10621
    const/16 v0, 0x2f

    .line 10622
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10623
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10624
    invoke-virtual {v0, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10625
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10626
    return-void

    .line 10620
    :catchall_34
    move-exception v1

    :try_start_35
    monitor-exit v0
    :try_end_36
    .catchall {:try_start_35 .. :try_end_36} :catchall_34

    throw v1
.end method

.method public setCameraDisabled(Landroid/content/ComponentName;Z)V
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "disabled"  # Z

    .line 7597
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 7598
    return-void

    .line 7600
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7601
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 7602
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 7603
    const/16 v2, 0x8

    :try_start_17
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 7605
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCamera:Z

    if-eq v3, p2, :cond_24

    .line 7606
    iput-boolean p2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCamera:Z

    .line 7607
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 7609
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_24
    monitor-exit v1
    :try_end_25
    .catchall {:try_start_17 .. :try_end_25} :catchall_3a

    .line 7611
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushUserRestrictions(I)V

    .line 7612
    const/16 v1, 0x1e

    .line 7613
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7614
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7615
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7616
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 7617
    return-void

    .line 7609
    :catchall_3a
    move-exception v2

    :try_start_3b
    monitor-exit v1
    :try_end_3c
    .catchall {:try_start_3b .. :try_end_3c} :catchall_3a

    throw v2
.end method

.method public setCertInstallerPackage(Landroid/content/ComponentName;Ljava/lang/String;)V
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "installerPackage"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 6391
    const-string v0, "delegation-cert-install"

    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDelegatedScopePreO(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V

    .line 6392
    nop

    .line 6393
    const/16 v0, 0x19

    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 6394
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    const/4 v1, 0x1

    new-array v1, v1, [Ljava/lang/String;

    const/4 v2, 0x0

    aput-object p2, v1, v2

    .line 6395
    invoke-virtual {v0, v1}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 6396
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 6397
    return-void
.end method

.method public setCrossProfileCalendarPackages(Landroid/content/ComponentName;Ljava/util/List;)V
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;)V"
        }
    .end annotation

    .line 14245
    .local p2, "packageNames":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 14246
    return-void

    .line 14248
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14250
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 14251
    const/4 v1, -0x1

    :try_start_10
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 14253
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iput-object p2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->mCrossProfileCalendarPackages:Ljava/util/List;

    .line 14254
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v2

    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 14255
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v0
    :try_end_20
    .catchall {:try_start_10 .. :try_end_20} :catchall_42

    .line 14256
    const/16 v0, 0x46

    .line 14257
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 14258
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 14259
    if-nez p2, :cond_2e

    const/4 v1, 0x0

    goto :goto_3a

    .line 14260
    :cond_2e
    invoke-interface {p2}, Ljava/util/List;->size()I

    move-result v1

    new-array v1, v1, [Ljava/lang/String;

    invoke-interface {p2, v1}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [Ljava/lang/String;

    .line 14259
    :goto_3a
    invoke-virtual {v0, v1}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 14261
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 14262
    return-void

    .line 14255
    :catchall_42
    move-exception v1

    :try_start_43
    monitor-exit v0
    :try_end_44
    .catchall {:try_start_43 .. :try_end_44} :catchall_42

    throw v1
.end method

.method public setCrossProfileCallerIdDisabled(Landroid/content/ComponentName;Z)V
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "disabled"  # Z

    .line 10462
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 10463
    return-void

    .line 10465
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10466
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10467
    const/4 v1, -0x1

    :try_start_10
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 10469
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCallerId:Z

    if-eq v2, p2, :cond_23

    .line 10470
    iput-boolean p2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableCallerId:Z

    .line 10471
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v2

    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 10473
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_23
    monitor-exit v0
    :try_end_24
    .catchall {:try_start_10 .. :try_end_24} :catchall_36

    .line 10474
    const/16 v0, 0x2e

    .line 10475
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10476
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10477
    invoke-virtual {v0, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10478
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10479
    return-void

    .line 10473
    :catchall_36
    move-exception v1

    :try_start_37
    monitor-exit v0
    :try_end_38
    .catchall {:try_start_37 .. :try_end_38} :catchall_36

    throw v1
.end method

.method public setCrossProfileContactsSearchDisabled(Landroid/content/ComponentName;Z)V
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "disabled"  # Z

    .line 10505
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 10506
    return-void

    .line 10508
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10509
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10510
    const/4 v1, -0x1

    :try_start_10
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 10512
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableContactsSearch:Z

    if-eq v2, p2, :cond_23

    .line 10513
    iput-boolean p2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableContactsSearch:Z

    .line 10514
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v2

    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 10516
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_23
    monitor-exit v0
    :try_end_24
    .catchall {:try_start_10 .. :try_end_24} :catchall_36

    .line 10517
    const/16 v0, 0x2d

    .line 10518
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10519
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10520
    invoke-virtual {v0, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10521
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10522
    return-void

    .line 10516
    :catchall_36
    move-exception v1

    :try_start_37
    monitor-exit v0
    :try_end_38
    .catchall {:try_start_37 .. :try_end_38} :catchall_36

    throw v1
.end method

.method public setDefaultSmsApplication(Landroid/content/ComponentName;Ljava/lang/String;)V
    .registers 5
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;

    .line 8961
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 8962
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 8963
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    new-instance v1, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$dDeS1FUetDCbtT673Qp0Hcsm5Vw;

    invoke-direct {v1, p0, p2}, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$dDeS1FUetDCbtT673Qp0Hcsm5Vw;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderWithCleanCallingIdentity(Lcom/android/internal/util/FunctionalUtils$ThrowingRunnable;)V

    .line 8965
    return-void
.end method

.method public setDelegatedScopes(Landroid/content/ComponentName;Ljava/lang/String;Ljava/util/List;)V
    .registers 14
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "delegatePackage"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/lang/String;",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;)V"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 6052
    .local p3, "scopeList":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 6053
    const-string v0, "Delegate package is null or empty"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkStringNotEmpty(Ljava/lang/CharSequence;Ljava/lang/Object;)Ljava/lang/CharSequence;

    .line 6054
    const-string v0, "Scopes"

    invoke-static {p3, v0}, Lcom/android/internal/util/Preconditions;->checkCollectionElementsNotNull(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;

    .line 6056
    new-instance v0, Ljava/util/ArrayList;

    new-instance v1, Landroid/util/ArraySet;

    invoke-direct {v1, p3}, Landroid/util/ArraySet;-><init>(Ljava/util/Collection;)V

    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 6058
    .local v0, "scopes":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    sget-object v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DELEGATIONS:[Ljava/lang/String;

    invoke-static {v1}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->retainAll(Ljava/util/Collection;)Z

    move-result v1

    if-nez v1, :cond_ea

    .line 6061
    sget-object v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->DEVICE_OWNER_DELEGATIONS:Ljava/util/List;

    invoke-static {v0, v1}, Ljava/util/Collections;->disjoint(Ljava/util/Collection;Ljava/util/Collection;)Z

    move-result v1

    xor-int/lit8 v1, v1, 0x1

    .line 6063
    .local v1, "hasDoDelegation":Z
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v2

    .line 6064
    .local v2, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v3

    monitor-enter v3

    .line 6066
    if-eqz v1, :cond_3f

    .line 6067
    const/4 v4, -0x2

    :try_start_3b
    invoke-virtual {p0, p1, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    goto :goto_43

    .line 6069
    :cond_3f
    const/4 v4, -0x1

    invoke-virtual {p0, p1, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 6072
    :goto_43
    nop

    .line 6073
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-direct {p0, v4, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTargetSdk(Ljava/lang/String;I)I

    move-result v4

    .line 6072
    invoke-static {p2, v4, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->shouldCheckIfDelegatePackageIsInstalled(Ljava/lang/String;ILjava/util/List;)Z

    move-result v4

    if-eqz v4, :cond_75

    .line 6075
    invoke-virtual {p0, p2, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isPackageInstalledForUser(Ljava/lang/String;I)Z

    move-result v4

    if-eqz v4, :cond_59

    goto :goto_75

    .line 6076
    :cond_59
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Package "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " is not installed on the current user"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v0  # "scopes":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    .end local v1  # "hasDoDelegation":Z
    .end local v2  # "userId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "delegatePackage":Ljava/lang/String;
    .end local p3  # "scopeList":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    throw v4

    .line 6082
    .restart local v0  # "scopes":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    .restart local v1  # "hasDoDelegation":Z
    .restart local v2  # "userId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "delegatePackage":Ljava/lang/String;
    .restart local p3  # "scopeList":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_75
    :goto_75
    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    .line 6083
    .local v4, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    const/4 v5, 0x0

    .line 6084
    .local v5, "exclusiveScopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v6

    if-nez v6, :cond_96

    .line 6085
    iget-object v6, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7, v0}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    invoke-virtual {v6, p2, v7}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 6086
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6, v0}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    move-object v5, v6

    .line 6087
    sget-object v6, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->EXCLUSIVE_DELEGATIONS:Ljava/util/List;

    invoke-interface {v5, v6}, Ljava/util/List;->retainAll(Ljava/util/Collection;)Z

    goto :goto_9b

    .line 6090
    :cond_96
    iget-object v6, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v6, p2}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 6092
    :goto_9b
    invoke-direct {p0, p2, v0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendDelegationChangedBroadcast(Ljava/lang/String;Ljava/util/ArrayList;I)V

    .line 6095
    if-eqz v5, :cond_e2

    invoke-interface {v5}, Ljava/util/List;->isEmpty()Z

    move-result v6

    if-nez v6, :cond_e2

    .line 6096
    iget-object v6, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v6}, Landroid/util/ArrayMap;->size()I

    move-result v6

    add-int/lit8 v6, v6, -0x1

    .local v6, "i":I
    :goto_ae
    if-ltz v6, :cond_e2

    .line 6097
    iget-object v7, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v7, v6}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/String;

    .line 6098
    .local v7, "currentPackage":Ljava/lang/String;
    iget-object v8, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v8, v6}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Ljava/util/List;

    .line 6100
    .local v8, "currentScopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-virtual {v7, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-nez v9, :cond_df

    .line 6102
    invoke-interface {v8, v5}, Ljava/util/List;->removeAll(Ljava/util/Collection;)Z

    move-result v9

    if-eqz v9, :cond_df

    .line 6105
    invoke-interface {v8}, Ljava/util/List;->isEmpty()Z

    move-result v9

    if-eqz v9, :cond_d7

    .line 6106
    iget-object v9, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDelegationMap:Landroid/util/ArrayMap;

    invoke-virtual {v9, v6}, Landroid/util/ArrayMap;->removeAt(I)Ljava/lang/Object;

    .line 6108
    :cond_d7
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9, v8}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    invoke-direct {p0, v7, v9, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendDelegationChangedBroadcast(Ljava/lang/String;Ljava/util/ArrayList;I)V

    .line 6096
    .end local v7  # "currentPackage":Ljava/lang/String;
    .end local v8  # "currentScopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_df
    add-int/lit8 v6, v6, -0x1

    goto :goto_ae

    .line 6115
    .end local v6  # "i":I
    :cond_e2
    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 6116
    .end local v4  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v5  # "exclusiveScopes":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    monitor-exit v3

    .line 6117
    return-void

    .line 6116
    :catchall_e7
    move-exception v4

    monitor-exit v3
    :try_end_e9
    .catchall {:try_start_3b .. :try_end_e9} :catchall_e7

    throw v4

    .line 6059
    .end local v1  # "hasDoDelegation":Z
    .end local v2  # "userId":I
    :cond_ea
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Unexpected delegation scopes"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public setDeviceOwner(Landroid/content/ComponentName;Ljava/lang/String;I)Z
    .registers 14
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "ownerName"  # Ljava/lang/String;
    .param p3, "userId"  # I

    .line 7798
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 7799
    return v1

    .line 7801
    :cond_6
    if-eqz p1, :cond_109

    .line 7802
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isPackageInstalledForUser(Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_109

    .line 7806
    nop

    .line 7807
    invoke-direct {p0, p3, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasIncompatibleAccountsOrNonAdbNoLock(ILandroid/content/ComponentName;)Z

    move-result v0

    .line 7808
    .local v0, "hasIncompatibleAccountsOrNonAdb":Z
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 7809
    :try_start_1c
    invoke-direct {p0, p1, p3, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanSetDeviceOwnerLocked(Landroid/content/ComponentName;IZ)V

    .line 7810
    invoke-virtual {p0, p1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 7811
    .local v3, "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v3, :cond_ef

    .line 7812
    invoke-virtual {p0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    iget-object v4, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRemovingAdmins:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_ef

    .line 7817
    invoke-direct {p0, v1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->toggleBackupServiceActive(IZ)V

    .line 7818
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdb()Z

    move-result v1

    if-eqz v1, :cond_5a

    .line 7820
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/16 v4, 0x269

    const-string v5, "device-owner"

    invoke-static {v1, v4, v5}, Lcom/android/internal/logging/MetricsLogger;->action(Landroid/content/Context;ILjava/lang/String;)V

    .line 7821
    const/16 v1, 0x52

    .line 7822
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7823
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    const-string v4, "device-owner"

    filled-new-array {v4}, [Ljava/lang/String;

    move-result-object v4

    .line 7824
    invoke-virtual {v1, v4}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7825
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 7828
    :cond_5a
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p1, p2, p3}, Lcom/android/server/devicepolicy/Owners;->setDeviceOwner(Landroid/content/ComponentName;Ljava/lang/String;I)V

    .line 7829
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/Owners;->writeDeviceOwner()V

    .line 7830
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateDeviceOwnerLocked()V

    .line 7831
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setDeviceOwnerSystemPropertyLocked()V

    .line 7834
    invoke-static {}, Lcom/android/server/pm/UserRestrictionsUtils;->getDefaultEnabledForDeviceOwner()Ljava/util/Set;

    move-result-object v1

    .line 7835
    .local v1, "restrictions":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    invoke-interface {v1}, Ljava/util/Set;->isEmpty()Z

    move-result v4

    const/4 v5, 0x1

    if-nez v4, :cond_ab

    .line 7836
    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_79
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_8d

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/String;

    .line 7837
    .local v6, "restriction":Ljava/lang/String;
    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->ensureUserRestrictions()Landroid/os/Bundle;

    move-result-object v7

    invoke-virtual {v7, v6, v5}, Landroid/os/Bundle;->putBoolean(Ljava/lang/String;Z)V

    .line 7838
    .end local v6  # "restriction":Ljava/lang/String;
    goto :goto_79

    .line 7839
    :cond_8d
    iget-object v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->defaultEnabledRestrictionsAlreadySet:Ljava/util/Set;

    invoke-interface {v4, v1}, Ljava/util/Set;->addAll(Ljava/util/Collection;)Z

    .line 7840
    const-string v4, "DevicePolicyManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Enabled the following restrictions by default: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7842
    invoke-direct {p0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveUserRestrictionsLocked(I)V

    .line 7845
    :cond_ab
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v6
    :try_end_b1
    .catchall {:try_start_1c .. :try_end_b1} :catchall_106

    .line 7848
    .local v6, "ident":J
    :try_start_b1
    const-string v4, "android.app.action.DEVICE_OWNER_CHANGED"

    invoke-direct {p0, v4, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendOwnerChangedBroadcast(Ljava/lang/String;I)V
    :try_end_b6
    .catchall {:try_start_b1 .. :try_end_b6} :catchall_e8

    .line 7850
    :try_start_b6
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v6, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 7851
    nop

    .line 7852
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mDeviceAdminServiceController:Lcom/android/server/devicepolicy/DeviceAdminServiceController;

    .line 7853
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v8

    const-string/jumbo v9, "set-device-owner"

    .line 7852
    invoke-virtual {v4, v8, p3, v9}, Lcom/android/server/devicepolicy/DeviceAdminServiceController;->startServiceForOwner(Ljava/lang/String;ILjava/lang/String;)V

    .line 7855
    const-string v4, "DevicePolicyManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Device owner set: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v9, " on user "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v4, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7856
    monitor-exit v2

    return v5

    .line 7850
    :catchall_e8
    move-exception v4

    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v6, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "hasIncompatibleAccountsOrNonAdb":Z
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "ownerName":Ljava/lang/String;
    .end local p3  # "userId":I
    throw v4

    .line 7813
    .end local v1  # "restrictions":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    .end local v6  # "ident":J
    .restart local v0  # "hasIncompatibleAccountsOrNonAdb":Z
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "ownerName":Ljava/lang/String;
    .restart local p3  # "userId":I
    :cond_ef
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Not active admin: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v0  # "hasIncompatibleAccountsOrNonAdb":Z
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "ownerName":Ljava/lang/String;
    .end local p3  # "userId":I
    throw v1

    .line 7857
    .end local v3  # "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v0  # "hasIncompatibleAccountsOrNonAdb":Z
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "ownerName":Ljava/lang/String;
    .restart local p3  # "userId":I
    :catchall_106
    move-exception v1

    monitor-exit v2
    :try_end_108
    .catchall {:try_start_b6 .. :try_end_108} :catchall_106

    throw v1

    .line 7803
    .end local v0  # "hasIncompatibleAccountsOrNonAdb":Z
    :cond_109
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Invalid component "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " for device owner"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setDeviceOwnerLockScreenInfo(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V
    .registers 8
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "info"  # Ljava/lang/CharSequence;

    .line 8193
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 8194
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_a

    .line 8195
    return-void

    .line 8198
    :cond_a
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 8199
    const/4 v1, -0x2

    :try_start_10
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 8200
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1
    :try_end_19
    .catchall {:try_start_10 .. :try_end_19} :catchall_42

    .line 8202
    .local v1, "token":J
    :try_start_19
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    if-eqz p2, :cond_22

    invoke-interface {p2}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    move-result-object v4

    goto :goto_23

    :cond_22
    const/4 v4, 0x0

    :goto_23
    invoke-virtual {v3, v4}, Lcom/android/internal/widget/LockPatternUtils;->setDeviceOwnerInfo(Ljava/lang/String;)V
    :try_end_26
    .catchall {:try_start_19 .. :try_end_26} :catchall_3b

    .line 8204
    :try_start_26
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8205
    nop

    .line 8206
    .end local v1  # "token":J
    monitor-exit v0
    :try_end_2d
    .catchall {:try_start_26 .. :try_end_2d} :catchall_42

    .line 8207
    const/16 v0, 0x2a

    .line 8208
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 8209
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 8210
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 8211
    return-void

    .line 8204
    .restart local v1  # "token":J
    :catchall_3b
    move-exception v3

    :try_start_3c
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "info":Ljava/lang/CharSequence;
    throw v3

    .line 8206
    .end local v1  # "token":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "info":Ljava/lang/CharSequence;
    :catchall_42
    move-exception v1

    monitor-exit v0
    :try_end_44
    .catchall {:try_start_3c .. :try_end_44} :catchall_42

    throw v1
.end method

.method public setDeviceProvisioningConfigApplied()V
    .registers 5

    .line 12943
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 12944
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12945
    const/4 v1, 0x0

    :try_start_9
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 12946
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    const/4 v3, 0x1

    iput-boolean v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mDeviceProvisioningConfigApplied:Z

    .line 12947
    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 12948
    .end local v2  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    monitor-exit v0

    .line 12949
    return-void

    .line 12948
    :catchall_15
    move-exception v1

    monitor-exit v0
    :try_end_17
    .catchall {:try_start_9 .. :try_end_17} :catchall_15

    throw v1
.end method

.method public setEndUserSessionMessage(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V
    .registers 7
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "endUserSessionMessage"  # Ljava/lang/CharSequence;

    .line 13832
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 13833
    return-void

    .line 13835
    :cond_5
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13838
    if-eqz p2, :cond_f

    invoke-interface {p2}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    move-result-object v0

    goto :goto_10

    :cond_f
    const/4 v0, 0x0

    .line 13840
    .local v0, "endUserSessionMessageString":Ljava/lang/String;
    :goto_10
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 13841
    const/4 v2, -0x2

    .line 13842
    :try_start_16
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 13844
    .local v2, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->endUserSessionMessage:Ljava/lang/String;

    invoke-static {v3, p2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v3

    if-eqz v3, :cond_24

    .line 13845
    monitor-exit v1

    return-void

    .line 13847
    :cond_24
    iput-object v0, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->endUserSessionMessage:Ljava/lang/String;

    .line 13848
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v3

    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 13849
    .end local v2  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v1
    :try_end_30
    .catchall {:try_start_16 .. :try_end_30} :catchall_3a

    .line 13851
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getActivityManagerInternal()Landroid/app/ActivityManagerInternal;

    move-result-object v1

    .line 13852
    invoke-virtual {v1, v0}, Landroid/app/ActivityManagerInternal;->setSwitchingToSystemUserMessage(Ljava/lang/String;)V

    .line 13853
    return-void

    .line 13849
    :catchall_3a
    move-exception v2

    :try_start_3b
    monitor-exit v1
    :try_end_3c
    .catchall {:try_start_3b .. :try_end_3c} :catchall_3a

    throw v2
.end method

.method public setForceEphemeralUsers(Landroid/content/ComponentName;Z)V
    .registers 8
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "forceEphemeralUsers"  # Z

    .line 7298
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 7299
    return-void

    .line 7301
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7303
    if-eqz p2, :cond_1d

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userManagerIsSplitSystemUser()Z

    move-result v0

    if-eqz v0, :cond_15

    goto :goto_1d

    .line 7304
    :cond_15
    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "Cannot force ephemeral users on systems without split system user."

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7307
    :cond_1d
    :goto_1d
    const/4 v0, 0x0

    .line 7308
    .local v0, "removeAllUsers":Z
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 7309
    const/4 v2, -0x2

    .line 7310
    :try_start_24
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 7311
    .local v2, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->forceEphemeralUsers:Z

    if-eq v3, p2, :cond_3d

    .line 7312
    iput-boolean p2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->forceEphemeralUsers:Z

    .line 7313
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v3

    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 7314
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    invoke-virtual {v3, p2}, Landroid/os/UserManagerInternal;->setForceEphemeralUsers(Z)V

    .line 7315
    move v0, p2

    .line 7317
    .end local v2  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_3d
    monitor-exit v1
    :try_end_3e
    .catchall {:try_start_24 .. :try_end_3e} :catchall_59

    .line 7318
    if-eqz v0, :cond_58

    .line 7319
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 7321
    .local v1, "identitity":J
    :try_start_46
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    invoke-virtual {v3}, Landroid/os/UserManagerInternal;->removeAllUsers()V
    :try_end_4b
    .catchall {:try_start_46 .. :try_end_4b} :catchall_51

    .line 7323
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 7324
    goto :goto_58

    .line 7323
    :catchall_51
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3

    .line 7326
    .end local v1  # "identitity":J
    :cond_58
    :goto_58
    return-void

    .line 7317
    :catchall_59
    move-exception v2

    :try_start_5a
    monitor-exit v1
    :try_end_5b
    .catchall {:try_start_5a .. :try_end_5b} :catchall_59

    throw v2
.end method

.method public setGlobalPrivateDns(Landroid/content/ComponentName;ILjava/lang/String;)I
    .registers 8
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "mode"  # I
    .param p3, "privateDnsHost"  # Ljava/lang/String;

    .line 14141
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x2

    if-nez v0, :cond_6

    .line 14142
    return v1

    .line 14145
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14146
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 14150
    const/4 v0, 0x0

    if-eq p2, v1, :cond_4b

    const/4 v1, 0x3

    const/4 v2, 0x1

    if-ne p2, v1, :cond_37

    .line 14159
    invoke-static {p3}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_27

    .line 14160
    invoke-static {p3}, Landroid/net/NetworkUtils;->isWeaklyValidatedHostname(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_27

    .line 14167
    const-string v1, "hostname"

    invoke-direct {p0, v1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->putPrivateDnsSettings(Ljava/lang/String;Ljava/lang/String;)V

    .line 14170
    return v0

    .line 14161
    :cond_27
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-array v2, v2, [Ljava/lang/Object;

    aput-object p3, v2, v0

    .line 14162
    const-string v0, "Provided hostname %s is not valid"

    invoke-static {v0, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 14172
    :cond_37
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-array v2, v2, [Ljava/lang/Object;

    .line 14173
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v2, v0

    const-string v0, "Provided mode, %d, is not a valid mode."

    invoke-static {v0, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 14152
    :cond_4b
    invoke-static {p3}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_59

    .line 14156
    const/4 v1, 0x0

    const-string/jumbo v2, "opportunistic"

    invoke-direct {p0, v2, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->putPrivateDnsSettings(Ljava/lang/String;Ljava/lang/String;)V

    .line 14157
    return v0

    .line 14153
    :cond_59
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Host provided for opportunistic mode, but is not needed."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setGlobalProxy(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)Landroid/content/ComponentName;
    .registers 14
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "proxySpec"  # Ljava/lang/String;
    .param p3, "exclusionList"  # Ljava/lang/String;

    .line 6880
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 6881
    return-object v1

    .line 6883
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 6884
    :try_start_b
    const-string v2, "ComponentName is null"

    invoke-static {p1, v2}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 6887
    const/4 v2, 0x0

    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v3

    .line 6888
    .local v3, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    const/4 v4, 0x5

    invoke-virtual {p0, p1, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v4

    .line 6893
    .local v4, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v5, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v5}, Landroid/util/ArrayMap;->keySet()Ljava/util/Set;

    move-result-object v5

    .line 6894
    .local v5, "compSet":Ljava/util/Set;, "Ljava/util/Set<Landroid/content/ComponentName;>;"
    invoke-interface {v5}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v6

    :goto_24
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_45

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/ComponentName;

    .line 6895
    .local v7, "component":Landroid/content/ComponentName;
    iget-object v8, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminMap:Landroid/util/ArrayMap;

    invoke-virtual {v8, v7}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 6896
    .local v8, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v9, v8, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->specifiesGlobalProxy:Z

    if-eqz v9, :cond_44

    invoke-virtual {v7, p1}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-nez v9, :cond_44

    .line 6899
    monitor-exit v0

    return-object v7

    .line 6901
    .end local v7  # "component":Landroid/content/ComponentName;
    .end local v8  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_44
    goto :goto_24

    .line 6904
    :cond_45
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v6

    if-eqz v6, :cond_6c

    .line 6905
    const-string v2, "DevicePolicyManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Only the owner is allowed to set the global proxy. User "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6906
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v7, " is not permitted."

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 6905
    invoke-static {v2, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6907
    monitor-exit v0

    return-object v1

    .line 6909
    :cond_6c
    if-nez p2, :cond_75

    .line 6910
    iput-boolean v2, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->specifiesGlobalProxy:Z

    .line 6911
    iput-object v1, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->globalProxySpec:Ljava/lang/String;

    .line 6912
    iput-object v1, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->globalProxyExclusionList:Ljava/lang/String;

    goto :goto_7c

    .line 6915
    :cond_75
    const/4 v2, 0x1

    iput-boolean v2, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->specifiesGlobalProxy:Z

    .line 6916
    iput-object p2, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->globalProxySpec:Ljava/lang/String;

    .line 6917
    iput-object p3, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->globalProxyExclusionList:Ljava/lang/String;

    .line 6922
    :goto_7c
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v6
    :try_end_82
    .catchall {:try_start_b .. :try_end_82} :catchall_94

    .line 6924
    .local v6, "origId":J
    :try_start_82
    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->resetGlobalProxyLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;)V
    :try_end_85
    .catchall {:try_start_82 .. :try_end_85} :catchall_8d

    .line 6926
    :try_start_85
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v6, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 6927
    nop

    .line 6928
    monitor-exit v0

    return-object v1

    .line 6926
    :catchall_8d
    move-exception v1

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v6, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "proxySpec":Ljava/lang/String;
    .end local p3  # "exclusionList":Ljava/lang/String;
    throw v1

    .line 6929
    .end local v3  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v4  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v5  # "compSet":Ljava/util/Set;, "Ljava/util/Set<Landroid/content/ComponentName;>;"
    .end local v6  # "origId":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "proxySpec":Ljava/lang/String;
    .restart local p3  # "exclusionList":Ljava/lang/String;
    :catchall_94
    move-exception v1

    monitor-exit v0
    :try_end_96
    .catchall {:try_start_85 .. :try_end_96} :catchall_94

    throw v1
.end method

.method public setGlobalSetting(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "setting"  # Ljava/lang/String;
    .param p3, "value"  # Ljava/lang/String;

    .line 10798
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10800
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10801
    const/4 v1, -0x2

    :try_start_b
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 10805
    sget-object v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_DEPRECATED:Ljava/util/Set;

    invoke-interface {v1, p2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2e

    .line 10806
    const-string v1, "DevicePolicyManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Global setting no longer supported: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10807
    monitor-exit v0

    return-void

    .line 10810
    :cond_2e
    sget-object v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->GLOBAL_SETTINGS_WHITELIST:Ljava/util/Set;

    invoke-interface {v1, p2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v1

    const/4 v2, 0x0

    if-nez v1, :cond_51

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 10811
    invoke-static {v1}, Landroid/os/UserManager;->isDeviceInDemoMode(Landroid/content/Context;)Z

    move-result v1

    if-eqz v1, :cond_40

    goto :goto_51

    .line 10812
    :cond_40
    new-instance v1, Ljava/lang/SecurityException;

    const-string v3, "Permission denial: device owners cannot update %1$s"

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    aput-object p2, v4, v2

    invoke-static {v3, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "setting":Ljava/lang/String;
    .end local p3  # "value":Ljava/lang/String;
    throw v1

    .line 10816
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "setting":Ljava/lang/String;
    .restart local p3  # "value":Ljava/lang/String;
    :cond_51
    :goto_51
    const-string/jumbo v1, "stay_on_while_plugged_in"

    invoke-virtual {v1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_75

    .line 10818
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 10819
    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v1

    .line 10818
    invoke-virtual {p0, p1, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getMaximumTimeToLock(Landroid/content/ComponentName;IZ)J

    move-result-wide v1

    .line 10820
    .local v1, "timeMs":J
    const-wide/16 v3, 0x0

    cmp-long v3, v1, v3

    if-lez v3, :cond_75

    const-wide v3, 0x7fffffffffffffffL

    cmp-long v3, v1, v3

    if-gez v3, :cond_75

    .line 10821
    monitor-exit v0

    return-void

    .line 10825
    .end local v1  # "timeMs":J
    :cond_75
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1
    :try_end_7b
    .catchall {:try_start_b .. :try_end_7b} :catchall_8f

    .line 10827
    .local v1, "id":J
    :try_start_7b
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, p2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalPutString(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_80
    .catchall {:try_start_7b .. :try_end_80} :catchall_88

    .line 10829
    :try_start_80
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 10830
    nop

    .line 10831
    .end local v1  # "id":J
    monitor-exit v0

    .line 10832
    return-void

    .line 10829
    .restart local v1  # "id":J
    :catchall_88
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "setting":Ljava/lang/String;
    .end local p3  # "value":Ljava/lang/String;
    throw v3

    .line 10831
    .end local v1  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "setting":Ljava/lang/String;
    .restart local p3  # "value":Ljava/lang/String;
    :catchall_8f
    move-exception v1

    monitor-exit v0
    :try_end_91
    .catchall {:try_start_80 .. :try_end_91} :catchall_8f

    throw v1
.end method

.method public setKeepUninstalledPackages(Landroid/content/ComponentName;Ljava/lang/String;Ljava/util/List;)V
    .registers 8
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/lang/String;",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;)V"
        }
    .end annotation

    .line 7750
    .local p3, "packageList":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 7751
    return-void

    .line 7753
    :cond_5
    const-string/jumbo v0, "packageList is null"

    invoke-static {p3, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7754
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 7755
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 7757
    const/4 v2, -0x2

    :try_start_15
    const-string v3, "delegation-keep-uninstalled-packages"

    invoke-direct {p0, p1, p2, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 7760
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 7762
    .local v2, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iput-object p3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->keepUninstalledPackages:Ljava/util/List;

    .line 7764
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 7766
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v3

    invoke-virtual {v3, p3}, Landroid/content/pm/PackageManagerInternal;->setKeepUninstalledPackages(Ljava/util/List;)V

    .line 7767
    .end local v2  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v1
    :try_end_2d
    .catchall {:try_start_15 .. :try_end_2d} :catchall_51

    .line 7768
    const/4 v1, 0x0

    if-nez p1, :cond_32

    const/4 v2, 0x1

    goto :goto_33

    :cond_32
    move v2, v1

    .line 7769
    .local v2, "isDelegate":Z
    :goto_33
    const/16 v3, 0x3d

    .line 7770
    invoke-static {v3}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 7771
    invoke-virtual {v3, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 7772
    invoke-virtual {v3, v2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    new-array v1, v1, [Ljava/lang/String;

    .line 7773
    invoke-interface {p3, v1}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [Ljava/lang/String;

    invoke-virtual {v3, v1}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7774
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 7775
    return-void

    .line 7767
    .end local v2  # "isDelegate":Z
    :catchall_51
    move-exception v2

    :try_start_52
    monitor-exit v1
    :try_end_53
    .catchall {:try_start_52 .. :try_end_53} :catchall_51

    throw v2
.end method

.method public setKeyPairCertificate(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;[B[BZ)Z
    .registers 25
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "alias"  # Ljava/lang/String;
    .param p4, "cert"  # [B
    .param p5, "chain"  # [B
    .param p6, "isUserSelectable"  # Z

    .line 5913
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    const-string v5, "DevicePolicyManager"

    const/4 v0, -0x1

    const-string v6, "delegation-cert-install"

    invoke-direct {v1, v2, v3, v0, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 5916
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v6

    .line 5917
    .local v6, "callingUid":I
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v7

    .line 5918
    .local v7, "id":J
    const/4 v9, 0x0

    :try_start_1d
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 5919
    invoke-static {v6}, Landroid/os/UserHandle;->getUserHandleForUid(I)Landroid/os/UserHandle;

    move-result-object v10

    invoke-static {v0, v10}, Landroid/security/KeyChain;->bindAsUser(Landroid/content/Context;Landroid/os/UserHandle;)Landroid/security/KeyChain$KeyChainConnection;

    move-result-object v0
    :try_end_27
    .catch Ljava/lang/InterruptedException; {:try_start_1d .. :try_end_27} :catch_a8
    .catch Landroid/os/RemoteException; {:try_start_1d .. :try_end_27} :catch_95
    .catchall {:try_start_1d .. :try_end_27} :catchall_8d

    move-object v10, v0

    .line 5918
    .local v10, "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    const/4 v0, 0x0

    .line 5920
    :try_start_29
    invoke-virtual {v10}, Landroid/security/KeyChain$KeyChainConnection;->getService()Landroid/security/IKeyChainService;

    move-result-object v11
    :try_end_2d
    .catchall {:try_start_29 .. :try_end_2d} :catchall_78

    .line 5921
    .local v11, "keyChain":Landroid/security/IKeyChainService;
    move-object/from16 v12, p4

    move-object/from16 v13, p5

    :try_start_31
    invoke-interface {v11, v4, v12, v13}, Landroid/security/IKeyChainService;->setKeyPairCertificate(Ljava/lang/String;[B[B)Z

    move-result v14
    :try_end_35
    .catchall {:try_start_31 .. :try_end_35} :catchall_76

    if-nez v14, :cond_48

    .line 5922
    nop

    .line 5932
    :try_start_38
    invoke-static {v0, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->$closeResource(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V
    :try_end_3b
    .catch Ljava/lang/InterruptedException; {:try_start_38 .. :try_end_3b} :catch_45
    .catch Landroid/os/RemoteException; {:try_start_38 .. :try_end_3b} :catch_43
    .catchall {:try_start_38 .. :try_end_3b} :catchall_41

    .line 5938
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5922
    return v9

    .line 5938
    .end local v10  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .end local v11  # "keyChain":Landroid/security/IKeyChainService;
    :catchall_41
    move-exception v0

    goto :goto_92

    .line 5935
    :catch_43
    move-exception v0

    goto :goto_9a

    .line 5932
    :catch_45
    move-exception v0

    goto/16 :goto_ad

    .line 5924
    .restart local v10  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .restart local v11  # "keyChain":Landroid/security/IKeyChainService;
    :cond_48
    move/from16 v14, p6

    :try_start_4a
    invoke-interface {v11, v4, v14}, Landroid/security/IKeyChainService;->setUserSelectable(Ljava/lang/String;Z)V

    .line 5925
    if-nez v2, :cond_52

    const/16 v16, 0x1

    goto :goto_54

    :cond_52
    move/from16 v16, v9

    :goto_54
    move/from16 v17, v16

    .line 5926
    .local v17, "isDelegate":Z
    const/16 v16, 0x3c

    .line 5927
    invoke-static/range {v16 .. v16}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    .line 5928
    invoke-virtual {v9, v3}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    .line 5929
    move/from16 v15, v17

    .end local v17  # "isDelegate":Z
    .local v15, "isDelegate":Z
    invoke-virtual {v9, v15}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v9

    .line 5930
    invoke-virtual {v9}, Landroid/app/admin/DevicePolicyEventLogger;->write()V
    :try_end_69
    .catchall {:try_start_4a .. :try_end_69} :catchall_74

    .line 5931
    nop

    .line 5932
    :try_start_6a
    invoke-static {v0, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->$closeResource(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V
    :try_end_6d
    .catch Ljava/lang/InterruptedException; {:try_start_6a .. :try_end_6d} :catch_8b
    .catch Landroid/os/RemoteException; {:try_start_6a .. :try_end_6d} :catch_89
    .catchall {:try_start_6a .. :try_end_6d} :catchall_be

    .line 5938
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5931
    const/4 v0, 0x1

    return v0

    .line 5918
    .end local v11  # "keyChain":Landroid/security/IKeyChainService;
    .end local v15  # "isDelegate":Z
    :catchall_74
    move-exception v0

    goto :goto_7f

    :catchall_76
    move-exception v0

    goto :goto_7d

    :catchall_78
    move-exception v0

    move-object/from16 v12, p4

    move-object/from16 v13, p5

    :goto_7d
    move/from16 v14, p6

    :goto_7f
    move-object v9, v0

    .end local v6  # "callingUid":I
    .end local v7  # "id":J
    .end local v10  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "alias":Ljava/lang/String;
    .end local p4  # "cert":[B
    .end local p5  # "chain":[B
    .end local p6  # "isUserSelectable":Z
    :try_start_80
    throw v9
    :try_end_81
    .catchall {:try_start_80 .. :try_end_81} :catchall_81

    .line 5932
    .restart local v6  # "callingUid":I
    .restart local v7  # "id":J
    .restart local v10  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "alias":Ljava/lang/String;
    .restart local p4  # "cert":[B
    .restart local p5  # "chain":[B
    .restart local p6  # "isUserSelectable":Z
    :catchall_81
    move-exception v0

    move-object v11, v0

    if-eqz v10, :cond_88

    :try_start_85
    invoke-static {v9, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->$closeResource(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V

    .end local v6  # "callingUid":I
    .end local v7  # "id":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "alias":Ljava/lang/String;
    .end local p4  # "cert":[B
    .end local p5  # "chain":[B
    .end local p6  # "isUserSelectable":Z
    :cond_88
    throw v11
    :try_end_89
    .catch Ljava/lang/InterruptedException; {:try_start_85 .. :try_end_89} :catch_8b
    .catch Landroid/os/RemoteException; {:try_start_85 .. :try_end_89} :catch_89
    .catchall {:try_start_85 .. :try_end_89} :catchall_be

    .line 5935
    .end local v10  # "keyChainConnection":Landroid/security/KeyChain$KeyChainConnection;
    .restart local v6  # "callingUid":I
    .restart local v7  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "alias":Ljava/lang/String;
    .restart local p4  # "cert":[B
    .restart local p5  # "chain":[B
    .restart local p6  # "isUserSelectable":Z
    :catch_89
    move-exception v0

    goto :goto_9c

    .line 5932
    :catch_8b
    move-exception v0

    goto :goto_af

    .line 5938
    :catchall_8d
    move-exception v0

    move-object/from16 v12, p4

    move-object/from16 v13, p5

    :goto_92
    move/from16 v14, p6

    goto :goto_bf

    .line 5935
    :catch_95
    move-exception v0

    move-object/from16 v12, p4

    move-object/from16 v13, p5

    :goto_9a
    move/from16 v14, p6

    .line 5936
    .local v0, "e":Landroid/os/RemoteException;
    :goto_9c
    :try_start_9c
    const-string v9, "Failed setting keypair certificate"

    invoke-static {v5, v9, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_a1
    .catchall {:try_start_9c .. :try_end_a1} :catchall_be

    .line 5938
    nop

    .end local v0  # "e":Landroid/os/RemoteException;
    :goto_a2
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5939
    goto :goto_bc

    .line 5932
    :catch_a8
    move-exception v0

    move-object/from16 v12, p4

    move-object/from16 v13, p5

    :goto_ad
    move/from16 v14, p6

    .line 5933
    .local v0, "e":Ljava/lang/InterruptedException;
    :goto_af
    :try_start_af
    const-string v9, "Interrupted while setting keypair certificate"

    invoke-static {v5, v9, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5934
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Thread;->interrupt()V
    :try_end_bb
    .catchall {:try_start_af .. :try_end_bb} :catchall_be

    .line 5938
    .end local v0  # "e":Ljava/lang/InterruptedException;
    goto :goto_a2

    .line 5940
    :goto_bc
    const/4 v5, 0x0

    return v5

    .line 5938
    :catchall_be
    move-exception v0

    :goto_bf
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0
.end method

.method public setKeyguardDisabled(Landroid/content/ComponentName;Z)Z
    .registers 8
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "disabled"  # Z

    .line 11001
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 11002
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 11003
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 11004
    const/4 v2, -0x1

    :try_start_11
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 11005
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isUserAffiliatedWithDeviceLocked(I)Z

    move-result v2

    if-eqz v2, :cond_73

    .line 11009
    monitor-exit v1
    :try_end_1b
    .catchall {:try_start_11 .. :try_end_1b} :catchall_8f

    .line 11010
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v1

    if-nez v1, :cond_6b

    .line 11014
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 11017
    .local v1, "ident":J
    if-eqz p2, :cond_38

    :try_start_29
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v3, v0}, Lcom/android/internal/widget/LockPatternUtils;->isSecure(I)Z

    move-result v3
    :try_end_2f
    .catch Landroid/os/RemoteException; {:try_start_29 .. :try_end_2f} :catch_62
    .catchall {:try_start_29 .. :try_end_2f} :catchall_5b

    if-eqz v3, :cond_38

    .line 11018
    const/4 v3, 0x0

    .line 11034
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 11018
    return v3

    .line 11020
    :cond_38
    :try_start_38
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v3, p2, v0}, Lcom/android/internal/widget/LockPatternUtils;->setLockScreenDisabled(ZI)V

    .line 11021
    if-eqz p2, :cond_49

    .line 11022
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 11023
    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIWindowManager()Landroid/view/IWindowManager;

    move-result-object v3

    .line 11024
    const/4 v4, 0x0

    invoke-interface {v3, v4, v4}, Landroid/view/IWindowManager;->dismissKeyguard(Lcom/android/internal/policy/IKeyguardDismissCallback;Ljava/lang/CharSequence;)V

    .line 11026
    :cond_49
    const/16 v3, 0x25

    .line 11027
    invoke-static {v3}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 11028
    invoke-virtual {v3, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 11029
    invoke-virtual {v3, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 11030
    invoke-virtual {v3}, Landroid/app/admin/DevicePolicyEventLogger;->write()V
    :try_end_5a
    .catch Landroid/os/RemoteException; {:try_start_38 .. :try_end_5a} :catch_62
    .catchall {:try_start_38 .. :try_end_5a} :catchall_5b

    goto :goto_63

    .line 11034
    :catchall_5b
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3

    .line 11031
    :catch_62
    move-exception v3

    .line 11034
    :goto_63
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 11035
    nop

    .line 11036
    const/4 v3, 0x1

    return v3

    .line 11011
    .end local v1  # "ident":J
    :cond_6b
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Managed profile cannot disable keyguard"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 11006
    :cond_73
    :try_start_73
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Admin "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " is neither the device owner or affiliated user\'s profile owner."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "userId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "disabled":Z
    throw v2

    .line 11009
    .restart local v0  # "userId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "disabled":Z
    :catchall_8f
    move-exception v2

    monitor-exit v1
    :try_end_91
    .catchall {:try_start_73 .. :try_end_91} :catchall_8f

    throw v2
.end method

.method public setKeyguardDisabledFeatures(Landroid/content/ComponentName;IZ)V
    .registers 11
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "which"  # I
    .param p3, "parent"  # Z

    .line 7662
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 7663
    return-void

    .line 7665
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7666
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 7667
    .local v0, "userHandle":I
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v1

    if-eqz v1, :cond_1d

    .line 7668
    if-eqz p3, :cond_1b

    .line 7669
    and-int/lit16 p2, p2, 0x1b0

    goto :goto_1d

    .line 7671
    :cond_1b
    and-int/lit16 p2, p2, 0x1b8

    .line 7674
    :cond_1d
    :goto_1d
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 7675
    const/16 v2, 0x9

    :try_start_24
    invoke-virtual {p0, p1, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 7677
    .local v3, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disabledKeyguardFeatures:I

    if-eq v4, p2, :cond_31

    .line 7678
    iput p2, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disabledKeyguardFeatures:I

    .line 7679
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 7681
    .end local v3  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_31
    monitor-exit v1
    :try_end_32
    .catchall {:try_start_24 .. :try_end_32} :catchall_7a

    .line 7682
    invoke-static {}, Landroid/app/admin/SecurityLog;->isLoggingEnabled()Z

    move-result v1

    if-eqz v1, :cond_65

    .line 7683
    if-eqz p3, :cond_3f

    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v1

    goto :goto_40

    :cond_3f
    move v1, v0

    .line 7684
    .local v1, "affectedUserId":I
    :goto_40
    const v3, 0x33465

    const/4 v4, 0x4

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    .line 7685
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    aput-object v6, v4, v5

    const/4 v5, 0x1

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v4, v5

    const/4 v5, 0x2

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v4, v5

    const/4 v5, 0x3

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v4, v5

    .line 7684
    invoke-static {v3, v4}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 7687
    .end local v1  # "affectedUserId":I
    :cond_65
    nop

    .line 7688
    invoke-static {v2}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7689
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7690
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7691
    invoke-virtual {v1, p3}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7692
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 7693
    return-void

    .line 7681
    :catchall_7a
    move-exception v2

    :try_start_7b
    monitor-exit v1
    :try_end_7c
    .catchall {:try_start_7b .. :try_end_7c} :catchall_7a

    throw v2
.end method

.method public setLockTaskFeatures(Landroid/content/ComponentName;I)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "flags"  # I

    .line 10696
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10699
    and-int/lit8 v0, p2, 0x4

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_d

    move v0, v1

    goto :goto_e

    :cond_d
    move v0, v2

    .line 10700
    .local v0, "hasHome":Z
    :goto_e
    and-int/lit8 v3, p2, 0x8

    if-eqz v3, :cond_14

    move v3, v1

    goto :goto_15

    :cond_14
    move v3, v2

    .line 10701
    .local v3, "hasOverview":Z
    :goto_15
    if-nez v0, :cond_1c

    if-nez v3, :cond_1a

    goto :goto_1c

    :cond_1a
    move v4, v2

    goto :goto_1d

    :cond_1c
    :goto_1c
    move v4, v1

    :goto_1d
    const-string v5, "Cannot use LOCK_TASK_FEATURE_OVERVIEW without LOCK_TASK_FEATURE_HOME"

    invoke-static {v4, v5}, Lcom/android/internal/util/Preconditions;->checkArgument(ZLjava/lang/Object;)V

    .line 10703
    and-int/lit8 v4, p2, 0x2

    if-eqz v4, :cond_28

    move v4, v1

    goto :goto_29

    :cond_28
    move v4, v2

    .line 10704
    .local v4, "hasNotification":Z
    :goto_29
    if-nez v0, :cond_2f

    if-nez v4, :cond_2e

    goto :goto_2f

    :cond_2e
    move v1, v2

    :cond_2f
    :goto_2f
    const-string v2, "Cannot use LOCK_TASK_FEATURE_NOTIFICATIONS without LOCK_TASK_FEATURE_HOME"

    invoke-static {v1, v2}, Lcom/android/internal/util/Preconditions;->checkArgument(ZLjava/lang/Object;)V

    .line 10707
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v1

    .line 10708
    .local v1, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 10709
    :try_start_3f
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanCallLockTaskLocked(Landroid/content/ComponentName;)V

    .line 10710
    invoke-direct {p0, v1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setLockTaskFeaturesLocked(II)V

    .line 10711
    monitor-exit v2

    .line 10712
    return-void

    .line 10711
    :catchall_47
    move-exception v5

    monitor-exit v2
    :try_end_49
    .catchall {:try_start_3f .. :try_end_49} :catchall_47

    throw v5
.end method

.method public setLockTaskPackages(Landroid/content/ComponentName;[Ljava/lang/String;)V
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "packages"  # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/SecurityException;
        }
    .end annotation

    .line 10655
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10656
    const-string/jumbo v0, "packages is null"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10658
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10659
    :try_start_10
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanCallLockTaskLocked(Landroid/content/ComponentName;)V

    .line 10660
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v1

    .line 10661
    .local v1, "userHandle":I
    new-instance v2, Ljava/util/ArrayList;

    invoke-static {p2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    invoke-direct {p0, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setLockTaskPackagesLocked(ILjava/util/List;)V

    .line 10662
    .end local v1  # "userHandle":I
    monitor-exit v0

    .line 10663
    return-void

    .line 10662
    :catchall_27
    move-exception v1

    monitor-exit v0
    :try_end_29
    .catchall {:try_start_10 .. :try_end_29} :catchall_27

    throw v1
.end method

.method public setLogoutEnabled(Landroid/content/ComponentName;Z)V
    .registers 6
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "enabled"  # Z

    .line 13630
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 13631
    return-void

    .line 13633
    :cond_5
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13635
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13636
    const/4 v1, -0x2

    .line 13637
    :try_start_e
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 13639
    .local v1, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->isLogoutEnabled:Z

    if-ne v2, p2, :cond_18

    .line 13641
    monitor-exit v0

    return-void

    .line 13643
    :cond_18
    iput-boolean p2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->isLogoutEnabled:Z

    .line 13644
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v2

    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 13645
    .end local v1  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v0

    .line 13646
    return-void

    .line 13645
    :catchall_25
    move-exception v1

    monitor-exit v0
    :try_end_27
    .catchall {:try_start_e .. :try_end_27} :catchall_25

    throw v1
.end method

.method public setLongSupportMessage(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "message"  # Ljava/lang/CharSequence;

    .line 12201
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 12202
    return-void

    .line 12204
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12205
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 12206
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 12207
    :try_start_15
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 12208
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v2

    .line 12207
    invoke-direct {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForUidLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 12209
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->longSupportMessage:Ljava/lang/CharSequence;

    invoke-static {v3, p2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v3

    if-nez v3, :cond_2c

    .line 12210
    iput-object p2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->longSupportMessage:Ljava/lang/CharSequence;

    .line 12211
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 12213
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_2c
    monitor-exit v1
    :try_end_2d
    .catchall {:try_start_15 .. :try_end_2d} :catchall_3b

    .line 12214
    const/16 v1, 0x2c

    .line 12215
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 12216
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 12217
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 12218
    return-void

    .line 12213
    :catchall_3b
    move-exception v2

    :try_start_3c
    monitor-exit v1
    :try_end_3d
    .catchall {:try_start_3c .. :try_end_3d} :catchall_3b

    throw v2
.end method

.method public setMasterVolumeMuted(Landroid/content/ComponentName;Z)V
    .registers 5
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "on"  # Z

    .line 10955
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10956
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10957
    const/4 v1, -0x1

    :try_start_b
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 10958
    const-string v1, "disallow_unmute_device"

    invoke-virtual {p0, p1, v1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setUserRestriction(Landroid/content/ComponentName;Ljava/lang/String;Z)V

    .line 10959
    const/16 v1, 0x23

    .line 10960
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 10961
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 10962
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 10963
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10964
    monitor-exit v0

    .line 10965
    return-void

    .line 10964
    :catchall_26
    move-exception v1

    monitor-exit v0
    :try_end_28
    .catchall {:try_start_b .. :try_end_28} :catchall_26

    throw v1
.end method

.method public setMaximumFailedPasswordsForWipe(Landroid/content/ComponentName;IZ)V
    .registers 11
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "num"  # I
    .param p3, "parent"  # Z

    .line 4889
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-eqz v0, :cond_65

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_d

    goto :goto_65

    .line 4892
    :cond_d
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4893
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4894
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 4897
    const/4 v2, 0x4

    :try_start_1e
    invoke-virtual {p0, p1, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 4899
    const/4 v3, 0x1

    invoke-virtual {p0, p1, v3, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v4

    .line 4901
    .local v4, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget v5, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumFailedPasswordsForWipe:I

    if-eq v5, p2, :cond_2f

    .line 4902
    iput p2, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumFailedPasswordsForWipe:I

    .line 4903
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4905
    .end local v4  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_2f
    monitor-exit v1
    :try_end_30
    .catchall {:try_start_1e .. :try_end_30} :catchall_62

    .line 4906
    invoke-static {}, Landroid/app/admin/SecurityLog;->isLoggingEnabled()Z

    move-result v1

    if-eqz v1, :cond_61

    .line 4907
    if-eqz p3, :cond_3d

    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v1

    goto :goto_3e

    :cond_3d
    move v1, v0

    .line 4908
    .local v1, "affectedUserId":I
    :goto_3e
    const v4, 0x33464

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v5, 0x0

    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    aput-object v6, v2, v5

    .line 4909
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v2, v3

    const/4 v3, 0x2

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v2, v3

    const/4 v3, 0x3

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v2, v3

    .line 4908
    invoke-static {v4, v2}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4911
    .end local v1  # "affectedUserId":I
    :cond_61
    return-void

    .line 4905
    :catchall_62
    move-exception v2

    :try_start_63
    monitor-exit v1
    :try_end_64
    .catchall {:try_start_63 .. :try_end_64} :catchall_62

    throw v2

    .line 4890
    .end local v0  # "userId":I
    :cond_65
    :goto_65
    return-void
.end method

.method public setMaximumTimeToLock(Landroid/content/ComponentName;JZ)V
    .registers 12
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "timeMs"  # J
    .param p4, "parent"  # Z

    .line 5261
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 5262
    return-void

    .line 5264
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5265
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 5266
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 5267
    const/4 v2, 0x3

    :try_start_16
    invoke-virtual {p0, p1, v2, p4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 5269
    .local v3, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-wide v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumTimeToUnlock:J

    cmp-long v4, v4, p2

    if-eqz v4, :cond_28

    .line 5270
    iput-wide p2, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->maximumTimeToUnlock:J

    .line 5271
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 5272
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateMaximumTimeToLockLocked(I)V

    .line 5274
    .end local v3  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_28
    monitor-exit v1
    :try_end_29
    .catchall {:try_start_16 .. :try_end_29} :catchall_5c

    .line 5275
    invoke-static {}, Landroid/app/admin/SecurityLog;->isLoggingEnabled()Z

    move-result v1

    if-eqz v1, :cond_5b

    .line 5276
    if-eqz p4, :cond_36

    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v1

    goto :goto_37

    :cond_36
    move v1, v0

    .line 5277
    .local v1, "affectedUserId":I
    :goto_37
    const v3, 0x33463

    const/4 v4, 0x4

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    .line 5278
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    aput-object v6, v4, v5

    const/4 v5, 0x1

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v4, v5

    const/4 v5, 0x2

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v4, v5

    invoke-static {p2, p3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v5

    aput-object v5, v4, v2

    .line 5277
    invoke-static {v3, v4}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 5280
    .end local v1  # "affectedUserId":I
    :cond_5b
    return-void

    .line 5274
    :catchall_5c
    move-exception v2

    :try_start_5d
    monitor-exit v1
    :try_end_5e
    .catchall {:try_start_5d .. :try_end_5e} :catchall_5c

    throw v2
.end method

.method public setMeteredDataDisabledPackages(Landroid/content/ComponentName;Ljava/util/List;)Ljava/util/List;
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;)",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 12395
    .local p2, "packageNames":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12396
    invoke-static {p2}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12398
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_b

    .line 12399
    return-object p2

    .line 12401
    :cond_b
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12402
    const/4 v1, -0x1

    :try_start_11
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 12404
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v2

    .line 12405
    .local v2, "callingUserId":I
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v3
    :try_end_21
    .catchall {:try_start_11 .. :try_end_21} :catchall_3d

    .line 12407
    .local v3, "identity":J
    nop

    .line 12408
    :try_start_22
    invoke-direct {p0, v2, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeInvalidPkgsForMeteredDataRestriction(ILjava/util/List;)Ljava/util/List;

    move-result-object v5

    .line 12409
    .local v5, "excludedPkgs":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iput-object p2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->meteredDisabledPackages:Ljava/util/List;

    .line 12410
    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->pushMeteredDisabledPackagesLocked(I)V

    .line 12411
    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V
    :try_end_2e
    .catchall {:try_start_22 .. :try_end_2e} :catchall_36

    .line 12412
    nop

    .line 12414
    :try_start_2f
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v0

    .line 12412
    return-object v5

    .line 12414
    .end local v5  # "excludedPkgs":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :catchall_36
    move-exception v5

    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "packageNames":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    throw v5

    .line 12416
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v2  # "callingUserId":I
    .end local v3  # "identity":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "packageNames":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :catchall_3d
    move-exception v1

    monitor-exit v0
    :try_end_3f
    .catchall {:try_start_2f .. :try_end_3f} :catchall_3d

    throw v1
.end method

.method public setNetworkLoggingEnabled(Landroid/content/ComponentName;Ljava/lang/String;Z)V
    .registers 10
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "packageName"  # Ljava/lang/String;
    .param p3, "enabled"  # Z

    .line 13204
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 13205
    return-void

    .line 13207
    :cond_5
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13208
    const/4 v1, -0x2

    :try_start_b
    const-string v2, "delegation-network-logging"

    invoke-direct {p0, p1, p2, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 13211
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isNetworkLoggingEnabledInternalLocked()Z

    move-result v1

    if-ne p3, v1, :cond_18

    .line 13213
    monitor-exit v0

    return-void

    .line 13215
    :cond_18
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerAdminLocked()Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 13216
    .local v1, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iput-boolean p3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->isNetworkLoggingEnabled:Z

    .line 13217
    const/4 v2, 0x0

    if-nez p3, :cond_27

    .line 13218
    iput v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->numNetworkLoggingNotifications:I

    .line 13219
    const-wide/16 v3, 0x0

    iput-wide v3, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->lastNetworkLoggingNotificationTimeMs:J

    .line 13221
    :cond_27
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v3

    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 13223
    invoke-direct {p0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setNetworkLoggingActiveInternal(Z)V

    .line 13225
    const/4 v3, 0x1

    if-nez p1, :cond_38

    move v4, v3

    goto :goto_39

    :cond_38
    move v4, v2

    .line 13226
    .local v4, "isDelegate":Z
    :goto_39
    const/16 v5, 0x77

    .line 13227
    invoke-static {v5}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v5

    .line 13228
    invoke-virtual {v5, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v5

    .line 13229
    invoke-virtual {v5, v4}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v5

    .line 13230
    if-eqz p3, :cond_4a

    move v2, v3

    :cond_4a
    invoke-virtual {v5, v2}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 13231
    invoke-virtual {v2}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 13232
    .end local v1  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v4  # "isDelegate":Z
    monitor-exit v0

    .line 13233
    return-void

    .line 13232
    :catchall_53
    move-exception v1

    monitor-exit v0
    :try_end_55
    .catchall {:try_start_b .. :try_end_55} :catchall_53

    throw v1
.end method

.method public setOrganizationColor(Landroid/content/ComponentName;I)V
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "color"  # I

    .line 12271
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 12272
    return-void

    .line 12274
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12275
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 12276
    .local v0, "userHandle":I
    const-string/jumbo v1, "set organization color"

    invoke-direct {p0, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManagedProfile(ILjava/lang/String;)V

    .line 12277
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 12278
    const/4 v2, -0x1

    :try_start_1c
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 12280
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iput p2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->organizationColor:I

    .line 12281
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 12282
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v1
    :try_end_26
    .catchall {:try_start_1c .. :try_end_26} :catchall_34

    .line 12283
    const/16 v1, 0x27

    .line 12284
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 12285
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 12286
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 12287
    return-void

    .line 12282
    :catchall_34
    move-exception v2

    :try_start_35
    monitor-exit v1
    :try_end_36
    .catchall {:try_start_35 .. :try_end_36} :catchall_34

    throw v2
.end method

.method public setOrganizationColorForUser(II)V
    .registers 5
    .param p1, "color"  # I
    .param p2, "userId"  # I

    .line 12291
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 12292
    return-void

    .line 12294
    :cond_5
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 12295
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManageUsers()V

    .line 12296
    const-string/jumbo v0, "set organization color"

    invoke-direct {p0, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManagedProfile(ILjava/lang/String;)V

    .line 12297
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12298
    :try_start_16
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwnerAdminLocked(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 12299
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iput p1, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->organizationColor:I

    .line 12300
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 12301
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v0

    .line 12302
    return-void

    .line 12301
    :catchall_21
    move-exception v1

    monitor-exit v0
    :try_end_23
    .catchall {:try_start_16 .. :try_end_23} :catchall_21

    throw v1
.end method

.method public setOrganizationName(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "text"  # Ljava/lang/CharSequence;

    .line 12335
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 12336
    return-void

    .line 12338
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12339
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 12341
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 12342
    const/4 v2, -0x1

    :try_start_16
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 12344
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->organizationName:Ljava/lang/String;

    invoke-static {v3, p2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v3

    if-nez v3, :cond_36

    .line 12345
    if-eqz p2, :cond_30

    invoke-interface {p2}, Ljava/lang/CharSequence;->length()I

    move-result v3

    if-nez v3, :cond_2b

    goto :goto_30

    .line 12346
    :cond_2b
    invoke-interface {p2}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    move-result-object v3

    goto :goto_31

    :cond_30
    :goto_30
    const/4 v3, 0x0

    :goto_31
    iput-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->organizationName:Ljava/lang/String;

    .line 12347
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 12349
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_36
    monitor-exit v1

    .line 12350
    return-void

    .line 12349
    :catchall_38
    move-exception v2

    monitor-exit v1
    :try_end_3a
    .catchall {:try_start_16 .. :try_end_3a} :catchall_38

    throw v2
.end method

.method public setOverrideApnsEnabled(Landroid/content/ComponentName;Z)V
    .registers 4
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "enabled"  # Z

    .line 14027
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-eqz v0, :cond_15

    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasTelephonyFeature:Z

    if-nez v0, :cond_9

    goto :goto_15

    .line 14030
    :cond_9
    const-string v0, "ComponentName is null in setOverrideApnEnabled"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14031
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 14033
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setOverrideApnsEnabledUnchecked(Z)V

    .line 14034
    return-void

    .line 14028
    :cond_15
    :goto_15
    return-void
.end method

.method public setPackagesSuspended(Landroid/content/ComponentName;Ljava/lang/String;[Ljava/lang/String;Z)[Ljava/lang/String;
    .registers 23
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "packageNames"  # [Ljava/lang/String;
    .param p4, "suspended"  # Z

    .line 9986
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v12, p3

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v13

    .line 9987
    .local v13, "callingUserId":I
    const/4 v14, 0x0

    .line 9988
    .local v14, "result":[Ljava/lang/String;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v15

    monitor-enter v15

    .line 9990
    const/4 v0, -0x1

    :try_start_13
    const-string v4, "delegation-package-access"

    invoke-direct {v1, v2, v3, v0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 9993
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v4
    :try_end_1e
    .catchall {:try_start_13 .. :try_end_1e} :catchall_7c

    move-wide v10, v4

    .line 9995
    .local v10, "id":J
    :try_start_1f
    iget-object v4, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const-string v0, "android"
    :try_end_26
    .catch Landroid/os/RemoteException; {:try_start_1f .. :try_end_26} :catch_46
    .catchall {:try_start_1f .. :try_end_26} :catchall_43

    .line 9996
    move-object/from16 v5, p3

    move/from16 v6, p4

    move-wide/from16 v16, v10

    .end local v10  # "id":J
    .local v16, "id":J
    move-object v10, v0

    move v11, v13

    :try_start_2e
    invoke-interface/range {v4 .. v11}, Landroid/content/pm/IPackageManager;->setPackagesSuspendedAsUser([Ljava/lang/String;ZLandroid/os/PersistableBundle;Landroid/os/PersistableBundle;Landroid/content/pm/SuspendDialogInfo;Ljava/lang/String;I)[Ljava/lang/String;

    move-result-object v0
    :try_end_32
    .catch Landroid/os/RemoteException; {:try_start_2e .. :try_end_32} :catch_3f
    .catchall {:try_start_2e .. :try_end_32} :catchall_3b

    move-object v14, v0

    .line 10002
    :try_start_33
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    move-wide/from16 v4, v16

    .end local v16  # "id":J
    .local v4, "id":J
    invoke-virtual {v0, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V
    :try_end_3a
    .catchall {:try_start_33 .. :try_end_3a} :catchall_7c

    .line 10003
    :goto_3a
    goto :goto_56

    .line 10002
    .end local v4  # "id":J
    .restart local v16  # "id":J
    :catchall_3b
    move-exception v0

    move-wide/from16 v4, v16

    .end local v16  # "id":J
    .restart local v4  # "id":J
    goto :goto_76

    .line 9998
    .end local v4  # "id":J
    .restart local v16  # "id":J
    :catch_3f
    move-exception v0

    move-wide/from16 v4, v16

    .end local v16  # "id":J
    .restart local v4  # "id":J
    goto :goto_48

    .line 10002
    .end local v4  # "id":J
    .restart local v10  # "id":J
    :catchall_43
    move-exception v0

    move-wide v4, v10

    .end local v10  # "id":J
    .restart local v4  # "id":J
    goto :goto_76

    .line 9998
    .end local v4  # "id":J
    .restart local v10  # "id":J
    :catch_46
    move-exception v0

    move-wide v4, v10

    .line 10000
    .end local v10  # "id":J
    .local v0, "re":Landroid/os/RemoteException;
    .restart local v4  # "id":J
    :goto_48
    :try_start_48
    const-string v6, "DevicePolicyManager"

    const-string v7, "Failed talking to the package manager"

    invoke-static {v6, v7, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4f
    .catchall {:try_start_48 .. :try_end_4f} :catchall_75

    .line 10002
    nop

    .end local v0  # "re":Landroid/os/RemoteException;
    :try_start_50
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    goto :goto_3a

    .line 10004
    .end local v4  # "id":J
    :goto_56
    monitor-exit v15
    :try_end_57
    .catchall {:try_start_50 .. :try_end_57} :catchall_7c

    .line 10005
    if-nez v2, :cond_5b

    const/4 v0, 0x1

    goto :goto_5c

    :cond_5b
    const/4 v0, 0x0

    .line 10006
    .local v0, "isDelegate":Z
    :goto_5c
    const/16 v4, 0x44

    .line 10007
    invoke-static {v4}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 10008
    invoke-virtual {v4, v3}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 10009
    invoke-virtual {v4, v0}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 10010
    invoke-virtual {v4, v12}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 10011
    invoke-virtual {v4}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10012
    if-eqz v14, :cond_74

    .line 10013
    return-object v14

    .line 10015
    :cond_74
    return-object v12

    .line 10002
    .end local v0  # "isDelegate":Z
    .restart local v4  # "id":J
    :catchall_75
    move-exception v0

    :goto_76
    :try_start_76
    iget-object v6, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v13  # "callingUserId":I
    .end local v14  # "result":[Ljava/lang/String;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageNames":[Ljava/lang/String;
    .end local p4  # "suspended":Z
    throw v0

    .line 10004
    .end local v4  # "id":J
    .restart local v13  # "callingUserId":I
    .restart local v14  # "result":[Ljava/lang/String;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageNames":[Ljava/lang/String;
    .restart local p4  # "suspended":Z
    :catchall_7c
    move-exception v0

    monitor-exit v15
    :try_end_7e
    .catchall {:try_start_76 .. :try_end_7e} :catchall_7c

    throw v0
.end method

.method public setPasswordExpirationTimeout(Landroid/content/ComponentName;JZ)V
    .registers 15
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "timeout"  # J
    .param p4, "parent"  # Z

    .line 4349
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-eqz v0, :cond_a1

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_e

    goto/16 :goto_a1

    .line 4352
    :cond_e
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4353
    const-string v0, "Timeout must be >= 0 ms"

    invoke-static {p2, p3, v0}, Lcom/android/internal/util/Preconditions;->checkArgumentNonnegative(JLjava/lang/String;)J

    .line 4354
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4355
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 4356
    const/4 v2, 0x6

    :try_start_24
    invoke-virtual {p0, p1, v2, p4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4359
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    const-wide/16 v3, 0x0

    cmp-long v5, p2, v3

    if-lez v5, :cond_34

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v5

    add-long/2addr v5, p2

    goto :goto_35

    :cond_34
    move-wide v5, v3

    .line 4360
    .local v5, "expiration":J
    :goto_35
    iput-wide v5, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationDate:J

    .line 4361
    iput-wide p2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordExpirationTimeout:J

    .line 4362
    cmp-long v3, p2, v3

    const/4 v4, 0x2

    if-lez v3, :cond_62

    .line 4363
    const-string v3, "DevicePolicyManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "setPasswordExpiration(): password will expire on "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4364
    invoke-static {v4, v4}, Ljava/text/DateFormat;->getDateTimeInstance(II)Ljava/text/DateFormat;

    move-result-object v8

    new-instance v9, Ljava/util/Date;

    invoke-direct {v9, v5, v6}, Ljava/util/Date;-><init>(J)V

    .line 4365
    invoke-virtual {v8, v9}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .line 4363
    invoke-static {v3, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4367
    :cond_62
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4370
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-direct {p0, v3, v0, p4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setExpirationAlarmCheckLocked(Landroid/content/Context;IZ)V

    .line 4371
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v5  # "expiration":J
    monitor-exit v1
    :try_end_6b
    .catchall {:try_start_24 .. :try_end_6b} :catchall_9e

    .line 4372
    invoke-static {}, Landroid/app/admin/SecurityLog;->isLoggingEnabled()Z

    move-result v1

    if-eqz v1, :cond_9d

    .line 4373
    if-eqz p4, :cond_78

    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v1

    goto :goto_79

    :cond_78
    move v1, v0

    .line 4374
    .local v1, "affectedUserId":I
    :goto_79
    const v2, 0x33460

    const/4 v3, 0x4

    new-array v3, v3, [Ljava/lang/Object;

    const/4 v5, 0x0

    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    aput-object v6, v3, v5

    const/4 v5, 0x1

    .line 4375
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v3, v5

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v3, v4

    const/4 v4, 0x3

    invoke-static {p2, p3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v5

    aput-object v5, v3, v4

    .line 4374
    invoke-static {v2, v3}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4377
    .end local v1  # "affectedUserId":I
    :cond_9d
    return-void

    .line 4371
    :catchall_9e
    move-exception v2

    :try_start_9f
    monitor-exit v1
    :try_end_a0
    .catchall {:try_start_9f .. :try_end_a0} :catchall_9e

    throw v2

    .line 4350
    .end local v0  # "userHandle":I
    :cond_a1
    :goto_a1
    return-void
.end method

.method public setPasswordHistoryLength(Landroid/content/ComponentName;IZ)V
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "length"  # I
    .param p3, "parent"  # Z

    .line 4317
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-eqz v0, :cond_65

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_d

    goto :goto_65

    .line 4320
    :cond_d
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4321
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4322
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 4323
    const/4 v2, 0x0

    :try_start_1e
    invoke-virtual {p0, p1, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 4325
    .local v3, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordHistoryLength:I

    if-eq v4, p2, :cond_2e

    .line 4326
    iput p2, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->passwordHistoryLength:I

    .line 4327
    invoke-direct {p0, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordValidityCheckpointLocked(IZ)V

    .line 4328
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4330
    .end local v3  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_2e
    monitor-exit v1
    :try_end_2f
    .catchall {:try_start_1e .. :try_end_2f} :catchall_62

    .line 4331
    invoke-static {}, Landroid/app/admin/SecurityLog;->isLoggingEnabled()Z

    move-result v1

    if-eqz v1, :cond_61

    .line 4332
    if-eqz p3, :cond_3c

    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileParentId(I)I

    move-result v1

    goto :goto_3d

    :cond_3c
    move v1, v0

    .line 4333
    .local v1, "affectedUserId":I
    :goto_3d
    const v3, 0x33462

    const/4 v4, 0x4

    new-array v4, v4, [Ljava/lang/Object;

    .line 4334
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    aput-object v5, v4, v2

    const/4 v2, 0x1

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v4, v2

    const/4 v2, 0x2

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v4, v2

    const/4 v2, 0x3

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v4, v2

    .line 4333
    invoke-static {v3, v4}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4336
    .end local v1  # "affectedUserId":I
    :cond_61
    return-void

    .line 4330
    :catchall_62
    move-exception v2

    :try_start_63
    monitor-exit v1
    :try_end_64
    .catchall {:try_start_63 .. :try_end_64} :catchall_62

    throw v2

    .line 4318
    .end local v0  # "userId":I
    :cond_65
    :goto_65
    return-void
.end method

.method public setPasswordMinimumLength(Landroid/content/ComponentName;IZ)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "length"  # I
    .param p3, "parent"  # Z

    .line 4286
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 4287
    return-void

    .line 4289
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4290
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4291
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 4292
    const/4 v2, 0x0

    :try_start_16
    invoke-virtual {p0, p1, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4294
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    .line 4295
    .local v3, "metrics":Landroid/app/admin/PasswordMetrics;
    iget v4, v3, Landroid/app/admin/PasswordMetrics;->length:I

    if-eq v4, p2, :cond_28

    .line 4296
    iput p2, v3, Landroid/app/admin/PasswordMetrics;->length:I

    .line 4297
    invoke-direct {p0, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordValidityCheckpointLocked(IZ)V

    .line 4298
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4300
    :cond_28
    invoke-direct {p0, p1, v0, p3, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeLogPasswordComplexitySet(Landroid/content/ComponentName;IZLandroid/app/admin/PasswordMetrics;)V

    .line 4301
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "metrics":Landroid/app/admin/PasswordMetrics;
    monitor-exit v1
    :try_end_2c
    .catchall {:try_start_16 .. :try_end_2c} :catchall_3d

    .line 4302
    const/4 v1, 0x2

    .line 4303
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4304
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4305
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4306
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 4307
    return-void

    .line 4301
    :catchall_3d
    move-exception v2

    :try_start_3e
    monitor-exit v1
    :try_end_3f
    .catchall {:try_start_3e .. :try_end_3f} :catchall_3d

    throw v2
.end method

.method public setPasswordMinimumLetters(Landroid/content/ComponentName;IZ)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "length"  # I
    .param p3, "parent"  # Z

    .line 4590
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 4591
    return-void

    .line 4593
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4594
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4595
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 4596
    const/4 v2, 0x0

    :try_start_16
    invoke-virtual {p0, p1, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4598
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    .line 4599
    .local v3, "metrics":Landroid/app/admin/PasswordMetrics;
    iget v4, v3, Landroid/app/admin/PasswordMetrics;->letters:I

    if-eq v4, p2, :cond_28

    .line 4600
    iput p2, v3, Landroid/app/admin/PasswordMetrics;->letters:I

    .line 4601
    invoke-direct {p0, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordValidityCheckpointLocked(IZ)V

    .line 4602
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4604
    :cond_28
    invoke-direct {p0, p1, v0, p3, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeLogPasswordComplexitySet(Landroid/content/ComponentName;IZLandroid/app/admin/PasswordMetrics;)V

    .line 4605
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "metrics":Landroid/app/admin/PasswordMetrics;
    monitor-exit v1
    :try_end_2c
    .catchall {:try_start_16 .. :try_end_2c} :catchall_3d

    .line 4606
    const/4 v1, 0x5

    .line 4607
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4608
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4609
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4610
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 4611
    return-void

    .line 4605
    :catchall_3d
    move-exception v2

    :try_start_3e
    monitor-exit v1
    :try_end_3f
    .catchall {:try_start_3e .. :try_end_3f} :catchall_3d

    throw v2
.end method

.method public setPasswordMinimumLowerCase(Landroid/content/ComponentName;IZ)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "length"  # I
    .param p3, "parent"  # Z

    .line 4562
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4563
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4564
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 4565
    const/4 v2, 0x0

    :try_start_11
    invoke-virtual {p0, p1, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4567
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    .line 4568
    .local v3, "metrics":Landroid/app/admin/PasswordMetrics;
    iget v4, v3, Landroid/app/admin/PasswordMetrics;->lowerCase:I

    if-eq v4, p2, :cond_23

    .line 4569
    iput p2, v3, Landroid/app/admin/PasswordMetrics;->lowerCase:I

    .line 4570
    invoke-direct {p0, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordValidityCheckpointLocked(IZ)V

    .line 4571
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4573
    :cond_23
    invoke-direct {p0, p1, v0, p3, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeLogPasswordComplexitySet(Landroid/content/ComponentName;IZLandroid/app/admin/PasswordMetrics;)V

    .line 4574
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "metrics":Landroid/app/admin/PasswordMetrics;
    monitor-exit v1
    :try_end_27
    .catchall {:try_start_11 .. :try_end_27} :catchall_38

    .line 4575
    const/4 v1, 0x6

    .line 4576
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4577
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4578
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4579
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 4580
    return-void

    .line 4574
    :catchall_38
    move-exception v2

    :try_start_39
    monitor-exit v1
    :try_end_3a
    .catchall {:try_start_39 .. :try_end_3a} :catchall_38

    throw v2
.end method

.method public setPasswordMinimumNonLetter(Landroid/content/ComponentName;IZ)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "length"  # I
    .param p3, "parent"  # Z

    .line 4683
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 4684
    return-void

    .line 4686
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4687
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4688
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 4689
    const/4 v2, 0x0

    :try_start_16
    invoke-virtual {p0, p1, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4691
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    .line 4692
    .local v3, "metrics":Landroid/app/admin/PasswordMetrics;
    iget v4, v3, Landroid/app/admin/PasswordMetrics;->nonLetter:I

    if-eq v4, p2, :cond_2a

    .line 4693
    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iput p2, v4, Landroid/app/admin/PasswordMetrics;->nonLetter:I

    .line 4694
    invoke-direct {p0, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordValidityCheckpointLocked(IZ)V

    .line 4695
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4697
    :cond_2a
    invoke-direct {p0, p1, v0, p3, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeLogPasswordComplexitySet(Landroid/content/ComponentName;IZLandroid/app/admin/PasswordMetrics;)V

    .line 4698
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "metrics":Landroid/app/admin/PasswordMetrics;
    monitor-exit v1
    :try_end_2e
    .catchall {:try_start_16 .. :try_end_2e} :catchall_3f

    .line 4699
    const/4 v1, 0x4

    .line 4700
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4701
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4702
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4703
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 4704
    return-void

    .line 4698
    :catchall_3f
    move-exception v2

    :try_start_40
    monitor-exit v1
    :try_end_41
    .catchall {:try_start_40 .. :try_end_41} :catchall_3f

    throw v2
.end method

.method public setPasswordMinimumNumeric(Landroid/content/ComponentName;IZ)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "length"  # I
    .param p3, "parent"  # Z

    .line 4621
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 4622
    return-void

    .line 4624
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4625
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4626
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 4627
    const/4 v2, 0x0

    :try_start_16
    invoke-virtual {p0, p1, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4629
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    .line 4630
    .local v3, "metrics":Landroid/app/admin/PasswordMetrics;
    iget v4, v3, Landroid/app/admin/PasswordMetrics;->numeric:I

    if-eq v4, p2, :cond_28

    .line 4631
    iput p2, v3, Landroid/app/admin/PasswordMetrics;->numeric:I

    .line 4632
    invoke-direct {p0, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordValidityCheckpointLocked(IZ)V

    .line 4633
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4635
    :cond_28
    invoke-direct {p0, p1, v0, p3, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeLogPasswordComplexitySet(Landroid/content/ComponentName;IZLandroid/app/admin/PasswordMetrics;)V

    .line 4636
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "metrics":Landroid/app/admin/PasswordMetrics;
    monitor-exit v1
    :try_end_2c
    .catchall {:try_start_16 .. :try_end_2c} :catchall_3d

    .line 4637
    const/4 v1, 0x3

    .line 4638
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4639
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4640
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4641
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 4642
    return-void

    .line 4636
    :catchall_3d
    move-exception v2

    :try_start_3e
    monitor-exit v1
    :try_end_3f
    .catchall {:try_start_3e .. :try_end_3f} :catchall_3d

    throw v2
.end method

.method public setPasswordMinimumSymbols(Landroid/content/ComponentName;IZ)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "length"  # I
    .param p3, "parent"  # Z

    .line 4652
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 4653
    return-void

    .line 4655
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4656
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4657
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 4658
    const/4 v2, 0x0

    :try_start_16
    invoke-virtual {p0, p1, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4660
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    .line 4661
    .local v3, "metrics":Landroid/app/admin/PasswordMetrics;
    iget v4, v3, Landroid/app/admin/PasswordMetrics;->symbols:I

    if-eq v4, p2, :cond_2a

    .line 4662
    iget-object v4, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    iput p2, v4, Landroid/app/admin/PasswordMetrics;->symbols:I

    .line 4663
    invoke-direct {p0, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordValidityCheckpointLocked(IZ)V

    .line 4664
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4666
    :cond_2a
    invoke-direct {p0, p1, v0, p3, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeLogPasswordComplexitySet(Landroid/content/ComponentName;IZLandroid/app/admin/PasswordMetrics;)V

    .line 4667
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "metrics":Landroid/app/admin/PasswordMetrics;
    monitor-exit v1
    :try_end_2e
    .catchall {:try_start_16 .. :try_end_2e} :catchall_40

    .line 4668
    const/16 v1, 0x8

    .line 4669
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4670
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4671
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4672
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 4673
    return-void

    .line 4667
    :catchall_40
    move-exception v2

    :try_start_41
    monitor-exit v1
    :try_end_42
    .catchall {:try_start_41 .. :try_end_42} :catchall_40

    throw v2
.end method

.method public setPasswordMinimumUpperCase(Landroid/content/ComponentName;IZ)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "length"  # I
    .param p3, "parent"  # Z

    .line 4531
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 4532
    return-void

    .line 4534
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4535
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4536
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 4537
    const/4 v2, 0x0

    :try_start_16
    invoke-virtual {p0, p1, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4539
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    .line 4540
    .local v3, "metrics":Landroid/app/admin/PasswordMetrics;
    iget v4, v3, Landroid/app/admin/PasswordMetrics;->upperCase:I

    if-eq v4, p2, :cond_28

    .line 4541
    iput p2, v3, Landroid/app/admin/PasswordMetrics;->upperCase:I

    .line 4542
    invoke-direct {p0, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordValidityCheckpointLocked(IZ)V

    .line 4543
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4545
    :cond_28
    invoke-direct {p0, p1, v0, p3, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeLogPasswordComplexitySet(Landroid/content/ComponentName;IZLandroid/app/admin/PasswordMetrics;)V

    .line 4546
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "metrics":Landroid/app/admin/PasswordMetrics;
    monitor-exit v1
    :try_end_2c
    .catchall {:try_start_16 .. :try_end_2c} :catchall_3d

    .line 4547
    const/4 v1, 0x7

    .line 4548
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4549
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4550
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4551
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 4552
    return-void

    .line 4546
    :catchall_3d
    move-exception v2

    :try_start_3e
    monitor-exit v1
    :try_end_3f
    .catchall {:try_start_3e .. :try_end_3f} :catchall_3d

    throw v2
.end method

.method public setPasswordQuality(Landroid/content/ComponentName;IZ)V
    .registers 11
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "quality"  # I
    .param p3, "parent"  # Z

    .line 4133
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 4134
    return-void

    .line 4136
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4137
    invoke-static {p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->validateQualityConstant(I)V

    .line 4139
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 4140
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 4141
    const/4 v2, 0x0

    :try_start_19
    invoke-virtual {p0, p1, v2, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 4143
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v3
    :try_end_23
    .catchall {:try_start_19 .. :try_end_23} :catchall_5a

    .line 4145
    .local v3, "ident":J
    :try_start_23
    iget-object v5, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->minimumPasswordMetrics:Landroid/app/admin/PasswordMetrics;

    .line 4146
    .local v5, "metrics":Landroid/app/admin/PasswordMetrics;
    iget v6, v5, Landroid/app/admin/PasswordMetrics;->quality:I

    if-eq v6, p2, :cond_34

    .line 4147
    iput p2, v5, Landroid/app/admin/PasswordMetrics;->quality:I

    .line 4148
    invoke-direct {p0, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordValidityCheckpointLocked(IZ)V

    .line 4149
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updatePasswordQualityCacheForUserGroup(I)V

    .line 4150
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 4152
    :cond_34
    invoke-direct {p0, p1, v0, p3, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeLogPasswordComplexitySet(Landroid/content/ComponentName;IZLandroid/app/admin/PasswordMetrics;)V
    :try_end_37
    .catchall {:try_start_23 .. :try_end_37} :catchall_53

    .line 4154
    .end local v5  # "metrics":Landroid/app/admin/PasswordMetrics;
    :try_start_37
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 4155
    nop

    .line 4156
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "ident":J
    monitor-exit v1
    :try_end_3e
    .catchall {:try_start_37 .. :try_end_3e} :catchall_5a

    .line 4157
    const/4 v1, 0x1

    .line 4158
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4159
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4160
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4161
    invoke-virtual {v1, p3}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 4162
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 4163
    return-void

    .line 4154
    .restart local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v3  # "ident":J
    :catchall_53
    move-exception v5

    :try_start_54
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "userId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "quality":I
    .end local p3  # "parent":Z
    throw v5

    .line 4156
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "ident":J
    .restart local v0  # "userId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "quality":I
    .restart local p3  # "parent":Z
    :catchall_5a
    move-exception v2

    monitor-exit v1
    :try_end_5c
    .catchall {:try_start_54 .. :try_end_5c} :catchall_5a

    throw v2
.end method

.method public setPermissionGrantState(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILandroid/os/RemoteCallback;)V
    .registers 26
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "packageName"  # Ljava/lang/String;
    .param p4, "permission"  # Ljava/lang/String;
    .param p5, "grantState"  # I
    .param p6, "callback"  # Landroid/os/RemoteCallback;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 11744
    move-object/from16 v1, p0

    move-object/from16 v9, p2

    move-object/from16 v10, p4

    move/from16 v11, p5

    move-object/from16 v12, p6

    invoke-static/range {p6 .. p6}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 11746
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v13

    .line 11747
    .local v13, "user":Landroid/os/UserHandle;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v14

    monitor-enter v14

    .line 11749
    const/4 v0, -0x1

    :try_start_19
    const-string v2, "delegation-permission-grant"
    :try_end_1b
    .catchall {:try_start_19 .. :try_end_1b} :catchall_126

    move-object/from16 v15, p1

    :try_start_1d
    invoke-direct {v1, v15, v9, v0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 11751
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2
    :try_end_26
    .catchall {:try_start_1d .. :try_end_26} :catchall_124

    move-wide v7, v2

    .line 11753
    .local v7, "ident":J
    const/4 v6, 0x0

    :try_start_28
    invoke-virtual {v13}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v0

    invoke-direct {v1, v9, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTargetSdk(Ljava/lang/String;I)I

    move-result v0
    :try_end_30
    .catch Ljava/lang/SecurityException; {:try_start_28 .. :try_end_30} :catch_108
    .catchall {:try_start_28 .. :try_end_30} :catchall_105

    const/16 v2, 0x1d

    const/4 v3, 0x0

    const/4 v4, 0x1

    if-lt v0, v2, :cond_38

    move v0, v4

    goto :goto_39

    :cond_38
    move v0, v3

    :goto_39
    move/from16 v16, v0

    .line 11755
    .local v16, "isPostQAdmin":Z
    if-nez v16, :cond_5f

    .line 11757
    :try_start_3d
    invoke-virtual {v13}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v0
    :try_end_41
    .catch Ljava/lang/SecurityException; {:try_start_3d .. :try_end_41} :catch_5a
    .catchall {:try_start_3d .. :try_end_41} :catchall_55

    move-object/from16 v5, p3

    :try_start_43
    invoke-direct {v1, v5, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTargetSdk(Ljava/lang/String;I)I

    move-result v0

    const/16 v2, 0x17

    if-ge v0, v2, :cond_61

    .line 11759
    invoke-virtual {v12, v6}, Landroid/os/RemoteCallback;->sendResult(Landroid/os/Bundle;)V
    :try_end_4e
    .catch Ljava/lang/SecurityException; {:try_start_43 .. :try_end_4e} :catch_108
    .catchall {:try_start_43 .. :try_end_4e} :catchall_105

    .line 11804
    :try_start_4e
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v14
    :try_end_54
    .catchall {:try_start_4e .. :try_end_54} :catchall_124

    .line 11760
    return-void

    .line 11804
    .end local v16  # "isPostQAdmin":Z
    :catchall_55
    move-exception v0

    move-object/from16 v5, p3

    goto/16 :goto_106

    .line 11799
    :catch_5a
    move-exception v0

    move-object/from16 v5, p3

    goto/16 :goto_109

    .line 11755
    .restart local v16  # "isPostQAdmin":Z
    :cond_5f
    move-object/from16 v5, p3

    .line 11764
    :cond_61
    :try_start_61
    invoke-virtual {v1, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isRuntimePermission(Ljava/lang/String;)Z

    move-result v0
    :try_end_65
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_61 .. :try_end_65} :catch_d7
    .catch Ljava/lang/SecurityException; {:try_start_61 .. :try_end_65} :catch_d3
    .catchall {:try_start_61 .. :try_end_65} :catchall_cf

    if-nez v0, :cond_75

    .line 11765
    :try_start_67
    invoke-virtual {v12, v6}, Landroid/os/RemoteCallback;->sendResult(Landroid/os/Bundle;)V
    :try_end_6a
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_67 .. :try_end_6a} :catch_71
    .catch Ljava/lang/SecurityException; {:try_start_67 .. :try_end_6a} :catch_108
    .catchall {:try_start_67 .. :try_end_6a} :catchall_105

    .line 11804
    :try_start_6a
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v14
    :try_end_70
    .catchall {:try_start_6a .. :try_end_70} :catchall_124

    .line 11766
    return-void

    .line 11768
    :catch_71
    move-exception v0

    move-wide v9, v7

    goto/16 :goto_d9

    .line 11772
    :cond_75
    nop

    .line 11774
    if-eq v11, v4, :cond_80

    const/4 v0, 0x2

    if-eq v11, v0, :cond_80

    if-nez v11, :cond_7e

    goto :goto_80

    :cond_7e
    move-wide v9, v7

    goto :goto_b1

    .line 11777
    :cond_80
    :goto_80
    :try_start_80
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v13}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getPermissionControllerManager(Landroid/os/UserHandle;)Landroid/permission/PermissionControllerManager;

    move-result-object v0

    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 11779
    invoke-virtual {v2}, Landroid/content/Context;->getMainExecutor()Ljava/util/concurrent/Executor;

    move-result-object v17
    :try_end_8c
    .catch Ljava/lang/SecurityException; {:try_start_80 .. :try_end_8c} :catch_d3
    .catchall {:try_start_80 .. :try_end_8c} :catchall_cf

    :try_start_8c
    new-instance v18, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$kFKlG-1V9Atta-0tqqg2BxiKi4I;
    :try_end_8e
    .catch Ljava/lang/SecurityException; {:try_start_8c .. :try_end_8e} :catch_c9
    .catchall {:try_start_8c .. :try_end_8e} :catchall_c3

    move-object/from16 v2, v18

    move/from16 v3, v16

    move-object/from16 v4, p6

    move-object/from16 v5, p1

    move-object v9, v6

    move-object/from16 v6, p2

    move-wide v9, v7

    .end local v7  # "ident":J
    .local v9, "ident":J
    move-object/from16 v7, p4

    move/from16 v8, p5

    :try_start_9e
    invoke-direct/range {v2 .. v8}, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$kFKlG-1V9Atta-0tqqg2BxiKi4I;-><init>(ZLandroid/os/RemoteCallback;Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;I)V

    .line 11778
    move-object v2, v0

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, v17

    move-object/from16 v8, v18

    invoke-virtual/range {v2 .. v8}, Landroid/permission/PermissionControllerManager;->setRuntimePermissionGrantStateByDeviceAdmin(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/util/concurrent/Executor;Ljava/util/function/Consumer;)V
    :try_end_b1
    .catch Ljava/lang/SecurityException; {:try_start_9e .. :try_end_b1} :catch_c1
    .catchall {:try_start_9e .. :try_end_b1} :catchall_bf

    .line 11804
    .end local v16  # "isPostQAdmin":Z
    :goto_b1
    :try_start_b1
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v9, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V
    :try_end_b6
    .catchall {:try_start_b1 .. :try_end_b6} :catchall_ba

    .line 11805
    move-object/from16 v6, p4

    goto/16 :goto_11b

    .line 11806
    .end local v9  # "ident":J
    :catchall_ba
    move-exception v0

    move-object/from16 v6, p4

    goto/16 :goto_12a

    .line 11804
    .restart local v9  # "ident":J
    :catchall_bf
    move-exception v0

    goto :goto_c5

    .line 11799
    :catch_c1
    move-exception v0

    goto :goto_cb

    .line 11804
    .end local v9  # "ident":J
    .restart local v7  # "ident":J
    :catchall_c3
    move-exception v0

    move-wide v9, v7

    .end local v7  # "ident":J
    .restart local v9  # "ident":J
    :goto_c5
    move-object/from16 v6, p4

    move-wide v7, v9

    goto :goto_11e

    .line 11799
    .end local v9  # "ident":J
    .restart local v7  # "ident":J
    :catch_c9
    move-exception v0

    move-wide v9, v7

    .end local v7  # "ident":J
    .restart local v9  # "ident":J
    :goto_cb
    move-object/from16 v6, p4

    move-wide v7, v9

    goto :goto_10a

    .line 11804
    .end local v9  # "ident":J
    .restart local v7  # "ident":J
    :catchall_cf
    move-exception v0

    move-object/from16 v6, p4

    .end local v7  # "ident":J
    .restart local v9  # "ident":J
    goto :goto_11e

    .line 11799
    .end local v9  # "ident":J
    .restart local v7  # "ident":J
    :catch_d3
    move-exception v0

    move-object/from16 v6, p4

    .end local v7  # "ident":J
    .restart local v9  # "ident":J
    goto :goto_10a

    .line 11768
    .end local v9  # "ident":J
    .restart local v7  # "ident":J
    .restart local v16  # "isPostQAdmin":Z
    :catch_d7
    move-exception v0

    move-wide v9, v7

    .line 11769
    .end local v7  # "ident":J
    .local v0, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    .restart local v9  # "ident":J
    :goto_d9
    :try_start_d9
    new-instance v2, Landroid/os/RemoteException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Cannot check if "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_e5
    .catch Ljava/lang/SecurityException; {:try_start_d9 .. :try_end_e5} :catch_100
    .catchall {:try_start_d9 .. :try_end_e5} :catchall_fb

    move-object/from16 v6, p4

    move-wide v7, v9

    .end local v9  # "ident":J
    .restart local v7  # "ident":J
    :try_start_e8
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string/jumbo v9, "is a runtime permission"

    invoke-virtual {v5, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v2, v5, v0, v3, v4}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V

    .end local v7  # "ident":J
    .end local v13  # "user":Landroid/os/UserHandle;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageName":Ljava/lang/String;
    .end local p4  # "permission":Ljava/lang/String;
    .end local p5  # "grantState":I
    .end local p6  # "callback":Landroid/os/RemoteCallback;
    throw v2
    :try_end_f9
    .catch Ljava/lang/SecurityException; {:try_start_e8 .. :try_end_f9} :catch_f9
    .catchall {:try_start_e8 .. :try_end_f9} :catchall_11d

    .line 11799
    .end local v0  # "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    .end local v16  # "isPostQAdmin":Z
    .restart local v7  # "ident":J
    .restart local v13  # "user":Landroid/os/UserHandle;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageName":Ljava/lang/String;
    .restart local p4  # "permission":Ljava/lang/String;
    .restart local p5  # "grantState":I
    .restart local p6  # "callback":Landroid/os/RemoteCallback;
    :catch_f9
    move-exception v0

    goto :goto_10a

    .line 11804
    .end local v7  # "ident":J
    .restart local v9  # "ident":J
    :catchall_fb
    move-exception v0

    move-object/from16 v6, p4

    move-wide v7, v9

    .end local v9  # "ident":J
    .restart local v7  # "ident":J
    goto :goto_11e

    .line 11799
    .end local v7  # "ident":J
    .restart local v9  # "ident":J
    :catch_100
    move-exception v0

    move-object/from16 v6, p4

    move-wide v7, v9

    .end local v9  # "ident":J
    .restart local v7  # "ident":J
    goto :goto_10a

    .line 11804
    :catchall_105
    move-exception v0

    :goto_106
    move-object v6, v10

    goto :goto_11e

    .line 11799
    :catch_108
    move-exception v0

    :goto_109
    move-object v6, v10

    .line 11800
    .local v0, "e":Ljava/lang/SecurityException;
    :goto_10a
    :try_start_10a
    const-string v2, "DevicePolicyManager"

    const-string v3, "Could not set permission grant state"

    invoke-static {v2, v3, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 11802
    const/4 v2, 0x0

    invoke-virtual {v12, v2}, Landroid/os/RemoteCallback;->sendResult(Landroid/os/Bundle;)V
    :try_end_115
    .catchall {:try_start_10a .. :try_end_115} :catchall_11d

    .line 11804
    .end local v0  # "e":Ljava/lang/SecurityException;
    :try_start_115
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 11805
    nop

    .line 11806
    .end local v7  # "ident":J
    :goto_11b
    monitor-exit v14

    .line 11807
    return-void

    .line 11804
    .restart local v7  # "ident":J
    :catchall_11d
    move-exception v0

    :goto_11e
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v13  # "user":Landroid/os/UserHandle;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageName":Ljava/lang/String;
    .end local p4  # "permission":Ljava/lang/String;
    .end local p5  # "grantState":I
    .end local p6  # "callback":Landroid/os/RemoteCallback;
    throw v0

    .line 11806
    .end local v7  # "ident":J
    .restart local v13  # "user":Landroid/os/UserHandle;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageName":Ljava/lang/String;
    .restart local p4  # "permission":Ljava/lang/String;
    .restart local p5  # "grantState":I
    .restart local p6  # "callback":Landroid/os/RemoteCallback;
    :catchall_124
    move-exception v0

    goto :goto_129

    :catchall_126
    move-exception v0

    move-object/from16 v15, p1

    :goto_129
    move-object v6, v10

    :goto_12a
    monitor-exit v14
    :try_end_12b
    .catchall {:try_start_115 .. :try_end_12b} :catchall_12c

    throw v0

    :catchall_12c
    move-exception v0

    goto :goto_12a
.end method

.method public setPermissionPolicy(Landroid/content/ComponentName;Ljava/lang/String;I)V
    .registers 8
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "policy"  # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .line 11711
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 11712
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 11714
    const/4 v2, -0x1

    :try_start_a
    const-string v3, "delegation-permission-grant"

    invoke-direct {p0, p1, p2, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 11716
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 11717
    .local v2, "userPolicy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPermissionPolicy:I

    if-eq v3, p3, :cond_1c

    .line 11718
    iput p3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPermissionPolicy:I

    .line 11719
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 11721
    .end local v2  # "userPolicy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :cond_1c
    monitor-exit v1
    :try_end_1d
    .catchall {:try_start_a .. :try_end_1d} :catchall_38

    .line 11722
    if-nez p1, :cond_21

    const/4 v1, 0x1

    goto :goto_22

    :cond_21
    const/4 v1, 0x0

    .line 11723
    .local v1, "isDelegate":Z
    :goto_22
    const/16 v2, 0x12

    .line 11724
    invoke-static {v2}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 11725
    invoke-virtual {v2, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 11726
    invoke-virtual {v2, p3}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 11727
    invoke-virtual {v2, v1}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 11728
    invoke-virtual {v2}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 11729
    return-void

    .line 11721
    .end local v1  # "isDelegate":Z
    :catchall_38
    move-exception v2

    :try_start_39
    monitor-exit v1
    :try_end_3a
    .catchall {:try_start_39 .. :try_end_3a} :catchall_38

    throw v2
.end method

.method public setPermittedAccessibilityServices(Landroid/content/ComponentName;Ljava/util/List;)Z
    .registers 13
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "packageList"  # Ljava/util/List;

    .line 9235
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 9236
    return v1

    .line 9238
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9240
    const/4 v0, -0x1

    if-eqz p2, :cond_6d

    .line 9241
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    .line 9242
    .local v2, "userId":I
    const/4 v3, 0x0

    .line 9243
    .local v3, "enabledServices":Ljava/util/List;, "Ljava/util/List<Landroid/accessibilityservice/AccessibilityServiceInfo;>;"
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v4

    .line 9245
    .local v4, "id":J
    :try_start_19
    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v6

    .line 9246
    .local v6, "user":Landroid/content/pm/UserInfo;
    invoke-virtual {v6}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v7

    if-eqz v7, :cond_26

    .line 9247
    iget v7, v6, Landroid/content/pm/UserInfo;->profileGroupId:I

    move v2, v7

    .line 9249
    :cond_26
    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getAccessibilityManagerForUser(I)Landroid/view/accessibility/AccessibilityManager;

    move-result-object v7

    .line 9250
    .local v7, "accessibilityManager":Landroid/view/accessibility/AccessibilityManager;
    invoke-virtual {v7, v0}, Landroid/view/accessibility/AccessibilityManager;->getEnabledAccessibilityServiceList(I)Ljava/util/List;

    move-result-object v8
    :try_end_2e
    .catchall {:try_start_19 .. :try_end_2e} :catchall_66

    move-object v3, v8

    .line 9253
    .end local v6  # "user":Landroid/content/pm/UserInfo;
    .end local v7  # "accessibilityManager":Landroid/view/accessibility/AccessibilityManager;
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9254
    nop

    .line 9256
    if-eqz v3, :cond_6d

    .line 9257
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    .line 9258
    .local v6, "enabledPackages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-interface {v3}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v7

    :goto_40
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    move-result v8

    if-eqz v8, :cond_58

    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/accessibilityservice/AccessibilityServiceInfo;

    .line 9259
    .local v8, "service":Landroid/accessibilityservice/AccessibilityServiceInfo;
    invoke-virtual {v8}, Landroid/accessibilityservice/AccessibilityServiceInfo;->getResolveInfo()Landroid/content/pm/ResolveInfo;

    move-result-object v9

    iget-object v9, v9, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;

    iget-object v9, v9, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    invoke-interface {v6, v9}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 9260
    .end local v8  # "service":Landroid/accessibilityservice/AccessibilityServiceInfo;
    goto :goto_40

    .line 9261
    :cond_58
    invoke-direct {p0, v6, p2, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkPackagesInPermittedListOrSystem(Ljava/util/List;Ljava/util/List;I)Z

    move-result v7

    if-nez v7, :cond_6d

    .line 9263
    const-string v0, "DevicePolicyManager"

    const-string v7, "Cannot set permitted accessibility services, because it contains already enabled accesibility services."

    invoke-static {v0, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9265
    return v1

    .line 9253
    .end local v6  # "enabledPackages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :catchall_66
    move-exception v0

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0

    .line 9270
    .end local v2  # "userId":I
    .end local v3  # "enabledServices":Ljava/util/List;, "Ljava/util/List<Landroid/accessibilityservice/AccessibilityServiceInfo;>;"
    .end local v4  # "id":J
    :cond_6d
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 9271
    :try_start_72
    invoke-virtual {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v0

    .line 9273
    .local v0, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iput-object p2, v0, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedAccessiblityServices:Ljava/util/List;

    .line 9274
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v3

    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 9275
    .end local v0  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v2
    :try_end_80
    .catchall {:try_start_72 .. :try_end_80} :catchall_9f

    .line 9277
    if-eqz p2, :cond_8b

    new-array v0, v1, [Ljava/lang/String;

    invoke-interface {p2, v0}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    goto :goto_8c

    :cond_8b
    const/4 v0, 0x0

    .line 9278
    .local v0, "packageArray":[Ljava/lang/String;
    :goto_8c
    const/16 v1, 0x1c

    .line 9279
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 9280
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 9281
    invoke-virtual {v1, v0}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 9282
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 9283
    const/4 v1, 0x1

    return v1

    .line 9275
    .end local v0  # "packageArray":[Ljava/lang/String;
    :catchall_9f
    move-exception v0

    :try_start_a0
    monitor-exit v2
    :try_end_a1
    .catchall {:try_start_a0 .. :try_end_a1} :catchall_9f

    throw v0
.end method

.method public setPermittedCrossProfileNotificationListeners(Landroid/content/ComponentName;Ljava/util/List;)Z
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;)Z"
        }
    .end annotation

    .line 9552
    .local p2, "packageList":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 9553
    return v1

    .line 9555
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9557
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 9558
    .local v0, "callingUserId":I
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v2

    if-nez v2, :cond_18

    .line 9559
    return v1

    .line 9562
    :cond_18
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 9563
    const/4 v2, -0x1

    :try_start_1e
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 9565
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iput-object p2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedNotificationListeners:Ljava/util/List;

    .line 9566
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 9567
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v1

    .line 9568
    const/4 v1, 0x1

    return v1

    .line 9567
    :catchall_2a
    move-exception v2

    monitor-exit v1
    :try_end_2c
    .catchall {:try_start_1e .. :try_end_2c} :catchall_2a

    throw v2
.end method

.method public setPermittedInputMethods(Landroid/content/ComponentName;Ljava/util/List;)Z
    .registers 10
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "packageList"  # Ljava/util/List;

    .line 9417
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 9418
    return v1

    .line 9420
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9423
    sget-boolean v0, Landroid/view/inputmethod/InputMethodSystemProperty;->PER_PROFILE_IME_ENABLED:Z

    if-nez v0, :cond_16

    .line 9424
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkCallerIsCurrentUserOrProfile()Z

    move-result v0

    if-nez v0, :cond_16

    .line 9425
    return v1

    .line 9427
    :cond_16
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 9428
    .local v0, "callingUserId":I
    if-eqz p2, :cond_53

    .line 9429
    invoke-static {}, Lcom/android/server/inputmethod/InputMethodManagerInternal;->get()Lcom/android/server/inputmethod/InputMethodManagerInternal;

    move-result-object v2

    .line 9430
    invoke-virtual {v2, v0}, Lcom/android/server/inputmethod/InputMethodManagerInternal;->getEnabledInputMethodListAsUser(I)Ljava/util/List;

    move-result-object v2

    .line 9431
    .local v2, "enabledImes":Ljava/util/List;, "Ljava/util/List<Landroid/view/inputmethod/InputMethodInfo;>;"
    if-eqz v2, :cond_53

    .line 9432
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    .line 9433
    .local v3, "enabledPackages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-interface {v2}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_31
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_45

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/view/inputmethod/InputMethodInfo;

    .line 9434
    .local v5, "ime":Landroid/view/inputmethod/InputMethodInfo;
    invoke-virtual {v5}, Landroid/view/inputmethod/InputMethodInfo;->getPackageName()Ljava/lang/String;

    move-result-object v6

    invoke-interface {v3, v6}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 9435
    .end local v5  # "ime":Landroid/view/inputmethod/InputMethodInfo;
    goto :goto_31

    .line 9436
    :cond_45
    invoke-direct {p0, v3, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkPackagesInPermittedListOrSystem(Ljava/util/List;Ljava/util/List;I)Z

    move-result v4

    if-nez v4, :cond_53

    .line 9438
    const-string v4, "DevicePolicyManager"

    const-string v5, "Cannot set permitted input methods, because it contains already enabled input method."

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9440
    return v1

    .line 9445
    .end local v2  # "enabledImes":Ljava/util/List;, "Ljava/util/List<Landroid/view/inputmethod/InputMethodInfo;>;"
    .end local v3  # "enabledPackages":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :cond_53
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 9446
    const/4 v3, -0x1

    :try_start_59
    invoke-virtual {p0, p1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 9448
    .local v3, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iput-object p2, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->permittedInputMethods:Ljava/util/List;

    .line 9449
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 9450
    .end local v3  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v2
    :try_end_63
    .catchall {:try_start_59 .. :try_end_63} :catchall_82

    .line 9452
    if-eqz p2, :cond_6e

    new-array v1, v1, [Ljava/lang/String;

    invoke-interface {p2, v1}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [Ljava/lang/String;

    goto :goto_6f

    :cond_6e
    const/4 v1, 0x0

    .line 9453
    .local v1, "packageArray":[Ljava/lang/String;
    :goto_6f
    const/16 v2, 0x1b

    .line 9454
    invoke-static {v2}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 9455
    invoke-virtual {v2, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 9456
    invoke-virtual {v2, v1}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 9457
    invoke-virtual {v2}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 9458
    const/4 v2, 0x1

    return v2

    .line 9450
    .end local v1  # "packageArray":[Ljava/lang/String;
    :catchall_82
    move-exception v1

    :try_start_83
    monitor-exit v2
    :try_end_84
    .catchall {:try_start_83 .. :try_end_84} :catchall_82

    throw v1
.end method

.method public setProfileEnabled(Landroid/content/ComponentName;)V
    .registers 12
    .param p1, "who"  # Landroid/content/ComponentName;

    .line 8357
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 8358
    return-void

    .line 8360
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 8361
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 8363
    const/4 v1, -0x1

    :try_start_10
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 8364
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    .line 8365
    .local v1, "userId":I
    const-string v2, "enable the profile"

    invoke-direct {p0, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceManagedProfile(ILjava/lang/String;)V

    .line 8367
    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v2

    .line 8368
    .local v2, "managedProfile":Landroid/content/pm/UserInfo;
    invoke-virtual {v2}, Landroid/content/pm/UserInfo;->isEnabled()Z

    move-result v3

    if-eqz v3, :cond_30

    .line 8369
    const-string v3, "DevicePolicyManager"

    const-string/jumbo v4, "setProfileEnabled is called when the profile is already enabled"

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 8371
    monitor-exit v0

    return-void

    .line 8373
    :cond_30
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v3
    :try_end_36
    .catchall {:try_start_10 .. :try_end_36} :catchall_72

    .line 8375
    .local v3, "id":J
    :try_start_36
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v5, v1}, Landroid/os/UserManager;->setUserEnabled(I)V

    .line 8376
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v5, v1}, Landroid/os/UserManager;->getProfileParent(I)Landroid/content/pm/UserInfo;

    move-result-object v5

    .line 8377
    .local v5, "parent":Landroid/content/pm/UserInfo;
    new-instance v6, Landroid/content/Intent;

    const-string v7, "android.intent.action.MANAGED_PROFILE_ADDED"

    invoke-direct {v6, v7}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 8378
    .local v6, "intent":Landroid/content/Intent;
    const-string v7, "android.intent.extra.USER"

    new-instance v8, Landroid/os/UserHandle;

    invoke-direct {v8, v1}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {v6, v7, v8}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    .line 8379
    const/high16 v7, 0x50000000

    invoke-virtual {v6, v7}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 8381
    iget-object v7, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    new-instance v8, Landroid/os/UserHandle;

    iget v9, v5, Landroid/content/pm/UserInfo;->id:I

    invoke-direct {v8, v9}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {v7, v6, v8}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_63
    .catchall {:try_start_36 .. :try_end_63} :catchall_6b

    .line 8383
    .end local v5  # "parent":Landroid/content/pm/UserInfo;
    .end local v6  # "intent":Landroid/content/Intent;
    :try_start_63
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8384
    nop

    .line 8385
    .end local v1  # "userId":I
    .end local v2  # "managedProfile":Landroid/content/pm/UserInfo;
    .end local v3  # "id":J
    monitor-exit v0

    .line 8386
    return-void

    .line 8383
    .restart local v1  # "userId":I
    .restart local v2  # "managedProfile":Landroid/content/pm/UserInfo;
    .restart local v3  # "id":J
    :catchall_6b
    move-exception v5

    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    throw v5

    .line 8385
    .end local v1  # "userId":I
    .end local v2  # "managedProfile":Landroid/content/pm/UserInfo;
    .end local v3  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    :catchall_72
    move-exception v1

    monitor-exit v0
    :try_end_74
    .catchall {:try_start_63 .. :try_end_74} :catchall_72

    throw v1
.end method

.method public setProfileName(Landroid/content/ComponentName;Ljava/lang/String;)V
    .registers 8
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "profileName"  # Ljava/lang/String;

    .line 8390
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 8391
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 8393
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 8394
    .local v0, "userId":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 8396
    .local v1, "id":J
    :try_start_12
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v3, v0, p2}, Landroid/os/UserManager;->setUserName(ILjava/lang/String;)V

    .line 8397
    const/16 v3, 0x28

    .line 8398
    invoke-static {v3}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 8399
    invoke-virtual {v3, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v3

    .line 8400
    invoke-virtual {v3}, Landroid/app/admin/DevicePolicyEventLogger;->write()V
    :try_end_24
    .catchall {:try_start_12 .. :try_end_24} :catchall_2b

    .line 8402
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8403
    nop

    .line 8404
    return-void

    .line 8402
    :catchall_2b
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method public setProfileOwner(Landroid/content/ComponentName;Ljava/lang/String;I)Z
    .registers 13
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "ownerName"  # Ljava/lang/String;
    .param p3, "userHandle"  # I

    .line 8074
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 8075
    return v1

    .line 8077
    :cond_6
    if-eqz p1, :cond_d8

    .line 8078
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isPackageInstalledForUser(Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_d8

    .line 8083
    nop

    .line 8084
    invoke-direct {p0, p3, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->hasIncompatibleAccountsOrNonAdbNoLock(ILandroid/content/ComponentName;)Z

    move-result v0

    .line 8085
    .local v0, "hasIncompatibleAccountsOrNonAdb":Z
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 8086
    :try_start_1c
    invoke-direct {p0, p1, p3, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanSetProfileOwnerLocked(Landroid/content/ComponentName;IZ)V

    .line 8088
    invoke-virtual {p0, p1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 8089
    .local v3, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    if-eqz v3, :cond_be

    invoke-virtual {p0, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    iget-object v4, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRemovingAdmins:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_be

    .line 8093
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdb()Z

    move-result v4

    if-eqz v4, :cond_59

    .line 8095
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/16 v5, 0x269

    const-string/jumbo v6, "profile-owner"

    invoke-static {v4, v5, v6}, Lcom/android/internal/logging/MetricsLogger;->action(Landroid/content/Context;ILjava/lang/String;)V

    .line 8096
    const/16 v4, 0x52

    .line 8097
    invoke-static {v4}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 8098
    invoke-virtual {v4, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    const-string/jumbo v5, "profile-owner"

    filled-new-array {v5}, [Ljava/lang/String;

    move-result-object v5

    .line 8099
    invoke-virtual {v4, v5}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 8100
    invoke-virtual {v4}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 8104
    :cond_59
    invoke-direct {p0, p3, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->toggleBackupServiceActive(IZ)V

    .line 8106
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p1, p2, p3}, Lcom/android/server/devicepolicy/Owners;->setProfileOwner(Landroid/content/ComponentName;Ljava/lang/String;I)V

    .line 8107
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v1, p3}, Lcom/android/server/devicepolicy/Owners;->writeProfileOwner(I)V

    .line 8108
    const-string v1, "DevicePolicyManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Profile owner set: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v5, " on user "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8110
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v4
    :try_end_8a
    .catchall {:try_start_1c .. :try_end_8a} :catchall_d5

    .line 8112
    .local v4, "id":J
    :try_start_8a
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v1, p3}, Landroid/os/UserManager;->isManagedProfile(I)Z

    move-result v1

    const/4 v6, 0x1

    if-eqz v1, :cond_9e

    .line 8113
    nop

    .line 8114
    invoke-static {}, Lcom/android/server/pm/UserRestrictionsUtils;->getDefaultEnabledForManagedProfiles()Ljava/util/Set;

    move-result-object v1

    .line 8113
    invoke-direct {p0, p3, v3, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeSetDefaultRestrictionsForAdminLocked(ILcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Ljava/util/Set;)V

    .line 8115
    invoke-direct {p0, p3, v3, v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureUnknownSourcesRestrictionForProfileOwnerLocked(ILcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;Z)V

    .line 8118
    :cond_9e
    const-string v1, "android.app.action.PROFILE_OWNER_CHANGED"

    invoke-direct {p0, v1, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendOwnerChangedBroadcast(Ljava/lang/String;I)V
    :try_end_a3
    .catchall {:try_start_8a .. :try_end_a3} :catchall_b7

    .line 8121
    :try_start_a3
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 8122
    nop

    .line 8123
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mDeviceAdminServiceController:Lcom/android/server/devicepolicy/DeviceAdminServiceController;

    .line 8124
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v7

    const-string/jumbo v8, "set-profile-owner"

    .line 8123
    invoke-virtual {v1, v7, p3, v8}, Lcom/android/server/devicepolicy/DeviceAdminServiceController;->startServiceForOwner(Ljava/lang/String;ILjava/lang/String;)V

    .line 8125
    monitor-exit v2

    return v6

    .line 8121
    :catchall_b7
    move-exception v1

    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "hasIncompatibleAccountsOrNonAdb":Z
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "ownerName":Ljava/lang/String;
    .end local p3  # "userHandle":I
    throw v1

    .line 8090
    .end local v4  # "id":J
    .restart local v0  # "hasIncompatibleAccountsOrNonAdb":Z
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "ownerName":Ljava/lang/String;
    .restart local p3  # "userHandle":I
    :cond_be
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Not active admin: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .end local v0  # "hasIncompatibleAccountsOrNonAdb":Z
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "ownerName":Ljava/lang/String;
    .end local p3  # "userHandle":I
    throw v1

    .line 8126
    .end local v3  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v0  # "hasIncompatibleAccountsOrNonAdb":Z
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "ownerName":Ljava/lang/String;
    .restart local p3  # "userHandle":I
    :catchall_d5
    move-exception v1

    monitor-exit v2
    :try_end_d7
    .catchall {:try_start_a3 .. :try_end_d7} :catchall_d5

    throw v1

    .line 8079
    .end local v0  # "hasIncompatibleAccountsOrNonAdb":Z
    :cond_d8
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Component "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " not installed for userId:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setRecommendedGlobalProxy(Landroid/content/ComponentName;Landroid/net/ProxyInfo;)V
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "proxyInfo"  # Landroid/net/ProxyInfo;

    .line 6958
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 6959
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v0

    .line 6961
    .local v0, "token":J
    :try_start_9
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getConnectivityManager()Landroid/net/ConnectivityManager;

    move-result-object v2

    invoke-virtual {v2, p2}, Landroid/net/ConnectivityManager;->setGlobalProxy(Landroid/net/ProxyInfo;)V
    :try_end_12
    .catchall {:try_start_9 .. :try_end_12} :catchall_19

    .line 6963
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 6964
    nop

    .line 6965
    return-void

    .line 6963
    :catchall_19
    move-exception v2

    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v2
.end method

.method public setRequiredStrongAuthTimeout(Landroid/content/ComponentName;JZ)V
    .registers 13
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "timeoutMs"  # J
    .param p4, "parent"  # Z

    .line 5370
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-eqz v0, :cond_5a

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_d

    goto :goto_5a

    .line 5373
    :cond_d
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5374
    const-wide/16 v0, 0x0

    cmp-long v2, p2, v0

    if-ltz v2, :cond_1a

    const/4 v2, 0x1

    goto :goto_1b

    :cond_1a
    const/4 v2, 0x0

    :goto_1b
    const-string v3, "Timeout must not be a negative number."

    invoke-static {v2, v3}, Lcom/android/internal/util/Preconditions;->checkArgument(ZLjava/lang/Object;)V

    .line 5377
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getMinimumStrongAuthTimeoutMs()J

    move-result-wide v2

    .line 5378
    .local v2, "minimumStrongAuthTimeout":J
    cmp-long v0, p2, v0

    if-eqz v0, :cond_2d

    cmp-long v0, p2, v2

    if-gez v0, :cond_2d

    .line 5379
    move-wide p2, v2

    .line 5381
    :cond_2d
    const-wide/32 v0, 0xf731400

    cmp-long v0, p2, v0

    if-lez v0, :cond_39

    .line 5382
    const-wide/32 p2, 0xf731400

    move-wide v0, p2

    goto :goto_3a

    .line 5381
    :cond_39
    move-wide v0, p2

    .line 5385
    .end local p2  # "timeoutMs":J
    .local v0, "timeoutMs":J
    :goto_3a
    iget-object p2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v4

    .line 5386
    .local v4, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v5

    monitor-enter v5

    .line 5387
    const/4 p2, -0x1

    :try_start_46
    invoke-virtual {p0, p1, p2, p4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object p2

    .line 5389
    .local p2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-wide v6, p2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->strongAuthUnlockTimeout:J

    cmp-long p3, v6, v0

    if-eqz p3, :cond_55

    .line 5390
    iput-wide v0, p2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->strongAuthUnlockTimeout:J

    .line 5391
    invoke-direct {p0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 5393
    .end local p2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_55
    monitor-exit v5

    .line 5394
    return-void

    .line 5393
    :catchall_57
    move-exception p2

    monitor-exit v5
    :try_end_59
    .catchall {:try_start_46 .. :try_end_59} :catchall_57

    throw p2

    .line 5371
    .end local v0  # "timeoutMs":J
    .end local v2  # "minimumStrongAuthTimeout":J
    .end local v4  # "userHandle":I
    .local p2, "timeoutMs":J
    :cond_5a
    :goto_5a
    return-void
.end method

.method public setResetPasswordToken(Landroid/content/ComponentName;[B)Z
    .registers 15
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "token"  # [B

    .line 13483
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_6a

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_e

    goto :goto_6a

    .line 13486
    :cond_e
    if-eqz p2, :cond_61

    array-length v0, p2

    const/16 v2, 0x20

    if-lt v0, v2, :cond_61

    .line 13489
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 13490
    :try_start_1a
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v2

    .line 13491
    .local v2, "userHandle":I
    const/4 v3, -0x1

    invoke-virtual {p0, p1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 13493
    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v3

    .line 13494
    .local v3, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v4
    :try_end_2e
    .catchall {:try_start_1a .. :try_end_2e} :catchall_5e

    .line 13496
    .local v4, "ident":J
    :try_start_2e
    iget-wide v6, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    const-wide/16 v8, 0x0

    cmp-long v6, v6, v8

    if-eqz v6, :cond_3d

    .line 13497
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    iget-wide v10, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    invoke-virtual {v6, v10, v11, v2}, Lcom/android/internal/widget/LockPatternUtils;->removeEscrowToken(JI)Z

    .line 13499
    :cond_3d
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    const/4 v7, 0x0

    invoke-virtual {v6, p2, v2, v7}, Lcom/android/internal/widget/LockPatternUtils;->addEscrowToken([BILcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback;)J

    move-result-wide v6

    iput-wide v6, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J

    .line 13501
    invoke-direct {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 13502
    iget-wide v6, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordTokenHandle:J
    :try_end_4b
    .catchall {:try_start_2e .. :try_end_4b} :catchall_57

    cmp-long v6, v6, v8

    if-eqz v6, :cond_50

    const/4 v1, 0x1

    .line 13504
    :cond_50
    :try_start_50
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v0

    .line 13502
    return v1

    .line 13504
    :catchall_57
    move-exception v1

    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "token":[B
    throw v1

    .line 13506
    .end local v2  # "userHandle":I
    .end local v3  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v4  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "token":[B
    :catchall_5e
    move-exception v1

    monitor-exit v0
    :try_end_60
    .catchall {:try_start_50 .. :try_end_60} :catchall_5e

    throw v1

    .line 13487
    :cond_61
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "token must be at least 32-byte long"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 13484
    :cond_6a
    :goto_6a
    return v1
.end method

.method public setRestrictionsProvider(Landroid/content/ComponentName;Landroid/content/ComponentName;)V
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "permissionProvider"  # Landroid/content/ComponentName;

    .line 9088
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9089
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 9090
    const/4 v1, -0x1

    :try_start_b
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 9092
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    .line 9093
    .local v1, "userHandle":I
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 9094
    .local v2, "userData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iput-object p2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mRestrictionsProvider:Landroid/content/ComponentName;

    .line 9095
    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 9096
    .end local v1  # "userHandle":I
    .end local v2  # "userData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    monitor-exit v0

    .line 9097
    return-void

    .line 9096
    :catchall_1d
    move-exception v1

    monitor-exit v0
    :try_end_1f
    .catchall {:try_start_b .. :try_end_1f} :catchall_1d

    throw v1
.end method

.method public setScreenCaptureAndRecordDisabled(IZ)V
    .registers 3
    .param p1, "userHandle"  # I
    .param p2, "disabled"  # Z

    .line 14457
    invoke-direct {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateScreenCaptureDisabled(IZ)V

    .line 14458
    return-void
.end method

.method public setScreenCaptureDisabled(Landroid/content/ComponentName;Z)V
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "disabled"  # Z

    .line 7172
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 7173
    return-void

    .line 7175
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7176
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 7177
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 7178
    const/4 v2, -0x1

    :try_start_14
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 7180
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-boolean v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableScreenCapture:Z

    if-eq v3, p2, :cond_24

    .line 7181
    iput-boolean p2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->disableScreenCapture:Z

    .line 7182
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 7183
    invoke-direct {p0, v0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateScreenCaptureDisabled(IZ)V

    .line 7185
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_24
    monitor-exit v1
    :try_end_25
    .catchall {:try_start_14 .. :try_end_25} :catchall_37

    .line 7186
    const/16 v1, 0x1d

    .line 7187
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7188
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7189
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 7190
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 7191
    return-void

    .line 7185
    :catchall_37
    move-exception v2

    :try_start_38
    monitor-exit v1
    :try_end_39
    .catchall {:try_start_38 .. :try_end_39} :catchall_37

    throw v2
.end method

.method public setSecureSetting(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V
    .registers 14
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "setting"  # Ljava/lang/String;
    .param p3, "value"  # Ljava/lang/String;

    .line 10881
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10882
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 10884
    .local v0, "callingUserId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 10885
    const/4 v2, -0x1

    :try_start_11
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 10887
    invoke-virtual {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v2

    const/4 v3, 0x0

    const/4 v4, 0x1

    if-eqz v2, :cond_3b

    .line 10888
    sget-object v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SECURE_SETTINGS_DEVICEOWNER_WHITELIST:Ljava/util/Set;

    invoke-interface {v2, p2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_5a

    .line 10889
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCurrentUserDemo()Z

    move-result v2

    if-eqz v2, :cond_2b

    goto :goto_5a

    .line 10890
    :cond_2b
    new-instance v2, Ljava/lang/SecurityException;

    const-string v5, "Permission denial: Device owners cannot update %1$s"

    new-array v4, v4, [Ljava/lang/Object;

    aput-object p2, v4, v3

    invoke-static {v5, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUserId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "setting":Ljava/lang/String;
    .end local p3  # "value":Ljava/lang/String;
    throw v2

    .line 10893
    .restart local v0  # "callingUserId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "setting":Ljava/lang/String;
    .restart local p3  # "value":Ljava/lang/String;
    :cond_3b
    sget-object v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SECURE_SETTINGS_WHITELIST:Ljava/util/Set;

    invoke-interface {v2, p2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_5a

    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCurrentUserDemo()Z

    move-result v2

    if-eqz v2, :cond_4a

    goto :goto_5a

    .line 10894
    :cond_4a
    new-instance v2, Ljava/lang/SecurityException;

    const-string v5, "Permission denial: Profile owners cannot update %1$s"

    new-array v4, v4, [Ljava/lang/Object;

    aput-object p2, v4, v3

    invoke-static {v5, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUserId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "setting":Ljava/lang/String;
    .end local p3  # "value":Ljava/lang/String;
    throw v2

    .line 10897
    .restart local v0  # "callingUserId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "setting":Ljava/lang/String;
    .restart local p3  # "value":Ljava/lang/String;
    :cond_5a
    :goto_5a
    const-string/jumbo v2, "install_non_market_apps"

    invoke-virtual {p2, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    const/4 v5, 0x2

    const/16 v6, 0xe

    if-eqz v2, :cond_fc

    .line 10898
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    invoke-direct {p0, v2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTargetSdk(Ljava/lang/String;I)I

    move-result v2

    const/16 v7, 0x1a

    if-ge v2, v7, :cond_f3

    .line 10904
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    invoke-virtual {v2, v0}, Landroid/os/UserManager;->isManagedProfile(I)Z

    move-result v2

    if-nez v2, :cond_ac

    .line 10905
    const-string v2, "DevicePolicyManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Ignoring setSecureSetting request for "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, ". User restriction "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string/jumbo v4, "no_install_unknown_sources"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " or "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string/jumbo v4, "no_install_unknown_sources_globally"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " should be used instead."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_ab
    .catchall {:try_start_11 .. :try_end_ab} :catchall_150

    goto :goto_f1

    .line 10912
    :cond_ac
    :try_start_ac
    const-string/jumbo v2, "no_install_unknown_sources"

    .line 10913
    invoke-static {p3}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v7

    if-nez v7, :cond_b7

    move v7, v4

    goto :goto_b8

    :cond_b7
    move v7, v3

    .line 10912
    :goto_b8
    invoke-virtual {p0, p1, v2, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setUserRestriction(Landroid/content/ComponentName;Ljava/lang/String;Z)V

    .line 10914
    nop

    .line 10915
    invoke-static {v6}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 10916
    invoke-virtual {v2, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    new-array v5, v5, [Ljava/lang/String;

    aput-object p2, v5, v3

    aput-object p3, v5, v4

    .line 10917
    invoke-virtual {v2, v5}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 10918
    invoke-virtual {v2}, Landroid/app/admin/DevicePolicyEventLogger;->write()V
    :try_end_d1
    .catch Ljava/lang/NumberFormatException; {:try_start_ac .. :try_end_d1} :catch_d2
    .catchall {:try_start_ac .. :try_end_d1} :catchall_150

    .line 10921
    goto :goto_f1

    .line 10919
    :catch_d2
    move-exception v2

    .line 10920
    .local v2, "exc":Ljava/lang/NumberFormatException;
    :try_start_d3
    const-string v3, "DevicePolicyManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Invalid value: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " for setting "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10923
    .end local v2  # "exc":Ljava/lang/NumberFormatException;
    :goto_f1
    monitor-exit v1

    return-void

    .line 10899
    :cond_f3
    new-instance v2, Ljava/lang/UnsupportedOperationException;

    const-string/jumbo v3, "install_non_market_apps is deprecated. Please use one of the user restrictions no_install_unknown_sources or no_install_unknown_sources_globally instead."

    invoke-direct {v2, v3}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    .end local v0  # "callingUserId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "setting":Ljava/lang/String;
    .end local p3  # "value":Ljava/lang/String;
    throw v2

    .line 10925
    .restart local v0  # "callingUserId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "setting":Ljava/lang/String;
    .restart local p3  # "value":Ljava/lang/String;
    :cond_fc
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v7
    :try_end_102
    .catchall {:try_start_d3 .. :try_end_102} :catchall_150

    .line 10927
    .local v7, "id":J
    :try_start_102
    const-string v2, "default_input_method"

    invoke-virtual {v2, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_126

    .line 10928
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string v9, "default_input_method"

    invoke-virtual {v2, v9, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsSecureGetStringForUser(Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v2

    .line 10930
    .local v2, "currentValue":Ljava/lang/String;
    invoke-static {v2, p3}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v9

    if-nez v9, :cond_11d

    .line 10936
    iget-object v9, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSetupContentObserver:Lcom/android/server/devicepolicy/DevicePolicyManagerService$SetupContentObserver;

    invoke-static {v9, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$SetupContentObserver;->access$2300(Lcom/android/server/devicepolicy/DevicePolicyManagerService$SetupContentObserver;I)V

    .line 10938
    :cond_11d
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v9

    iput-boolean v4, v9, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mCurrentInputMethodSet:Z

    .line 10939
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 10941
    .end local v2  # "currentValue":Ljava/lang/String;
    :cond_126
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, p2, p3, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V
    :try_end_12b
    .catchall {:try_start_102 .. :try_end_12b} :catchall_149

    .line 10943
    :try_start_12b
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 10944
    nop

    .line 10945
    .end local v7  # "id":J
    monitor-exit v1
    :try_end_132
    .catchall {:try_start_12b .. :try_end_132} :catchall_150

    .line 10946
    nop

    .line 10947
    invoke-static {v6}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 10948
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    new-array v2, v5, [Ljava/lang/String;

    aput-object p2, v2, v3

    aput-object p3, v2, v4

    .line 10949
    invoke-virtual {v1, v2}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 10950
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10951
    return-void

    .line 10943
    .restart local v7  # "id":J
    :catchall_149
    move-exception v2

    :try_start_14a
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v7, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "callingUserId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "setting":Ljava/lang/String;
    .end local p3  # "value":Ljava/lang/String;
    throw v2

    .line 10945
    .end local v7  # "id":J
    .restart local v0  # "callingUserId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "setting":Ljava/lang/String;
    .restart local p3  # "value":Ljava/lang/String;
    :catchall_150
    move-exception v2

    monitor-exit v1
    :try_end_152
    .catchall {:try_start_14a .. :try_end_152} :catchall_150

    throw v2
.end method

.method public setSecurityLoggingEnabled(Landroid/content/ComponentName;Z)V
    .registers 5
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "enabled"  # Z

    .line 12655
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 12656
    return-void

    .line 12658
    :cond_5
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12660
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 12661
    const/4 v1, -0x2

    :try_start_e
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 12662
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogGetLoggingEnabledProperty()Z

    move-result v1

    if-ne p2, v1, :cond_1b

    .line 12663
    monitor-exit v0

    return-void

    .line 12665
    :cond_1b
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->securityLogSetLoggingEnabledProperty(Z)V

    .line 12666
    if-eqz p2, :cond_2b

    .line 12667
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSecurityLogMonitor:Lcom/android/server/devicepolicy/SecurityLogMonitor;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/SecurityLogMonitor;->start()V

    .line 12668
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybePauseDeviceWideLoggingLocked()V

    goto :goto_30

    .line 12670
    :cond_2b
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mSecurityLogMonitor:Lcom/android/server/devicepolicy/SecurityLogMonitor;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/SecurityLogMonitor;->stop()V

    .line 12672
    :goto_30
    monitor-exit v0
    :try_end_31
    .catchall {:try_start_e .. :try_end_31} :catchall_43

    .line 12673
    const/16 v0, 0xf

    .line 12674
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 12675
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 12676
    invoke-virtual {v0, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 12677
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 12678
    return-void

    .line 12672
    :catchall_43
    move-exception v1

    :try_start_44
    monitor-exit v0
    :try_end_45
    .catchall {:try_start_44 .. :try_end_45} :catchall_43

    throw v1
.end method

.method public setShortSupportMessage(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "message"  # Ljava/lang/CharSequence;

    .line 12167
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 12168
    return-void

    .line 12170
    :cond_5
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12171
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 12172
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 12173
    :try_start_15
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    .line 12174
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v2

    .line 12173
    invoke-direct {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForUidLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 12175
    .local v2, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->shortSupportMessage:Ljava/lang/CharSequence;

    invoke-static {v3, p2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v3

    if-nez v3, :cond_2c

    .line 12176
    iput-object p2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->shortSupportMessage:Ljava/lang/CharSequence;

    .line 12177
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 12179
    .end local v2  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :cond_2c
    monitor-exit v1
    :try_end_2d
    .catchall {:try_start_15 .. :try_end_2d} :catchall_3b

    .line 12180
    const/16 v1, 0x2b

    .line 12181
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 12182
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 12183
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 12184
    return-void

    .line 12179
    :catchall_3b
    move-exception v2

    :try_start_3c
    monitor-exit v1
    :try_end_3d
    .catchall {:try_start_3c .. :try_end_3d} :catchall_3b

    throw v2
.end method

.method public setStartUserSessionMessage(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V
    .registers 7
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "startUserSessionMessage"  # Ljava/lang/CharSequence;

    .line 13807
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 13808
    return-void

    .line 13810
    :cond_5
    invoke-static {p1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13813
    if-eqz p2, :cond_f

    invoke-interface {p2}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    move-result-object v0

    goto :goto_10

    :cond_f
    const/4 v0, 0x0

    .line 13815
    .local v0, "startUserSessionMessageString":Ljava/lang/String;
    :goto_10
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 13816
    const/4 v2, -0x2

    .line 13817
    :try_start_16
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 13819
    .local v2, "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->startUserSessionMessage:Ljava/lang/String;

    invoke-static {v3, p2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v3

    if-eqz v3, :cond_24

    .line 13820
    monitor-exit v1

    return-void

    .line 13822
    :cond_24
    iput-object v0, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->startUserSessionMessage:Ljava/lang/String;

    .line 13823
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v3

    invoke-direct {p0, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 13824
    .end local v2  # "deviceOwner":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v1
    :try_end_30
    .catchall {:try_start_16 .. :try_end_30} :catchall_3a

    .line 13826
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getActivityManagerInternal()Landroid/app/ActivityManagerInternal;

    move-result-object v1

    .line 13827
    invoke-virtual {v1, v0}, Landroid/app/ActivityManagerInternal;->setSwitchingFromSystemUserMessage(Ljava/lang/String;)V

    .line 13828
    return-void

    .line 13824
    :catchall_3a
    move-exception v2

    :try_start_3b
    monitor-exit v1
    :try_end_3c
    .catchall {:try_start_3b .. :try_end_3c} :catchall_3a

    throw v2
.end method

.method public setStatusBarDisabled(Landroid/content/ComponentName;Z)Z
    .registers 12
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "disabled"  # Z

    .line 11041
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 11042
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 11043
    const/4 v2, -0x1

    :try_start_a
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 11044
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isUserAffiliatedWithDeviceLocked(I)Z

    move-result v2

    if-eqz v2, :cond_67

    .line 11048
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v2

    if-nez v2, :cond_5f

    .line 11051
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 11052
    .local v2, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-boolean v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mStatusBarDisabled:Z
    :try_end_1f
    .catchall {:try_start_a .. :try_end_1f} :catchall_83

    const/4 v4, 0x1

    if-eq v3, p2, :cond_4c

    .line 11053
    const/4 v3, 0x0

    .line 11055
    .local v3, "isLockTaskMode":Z
    const/4 v5, 0x0

    :try_start_24
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityTaskManager()Landroid/app/IActivityTaskManager;

    move-result-object v6

    invoke-interface {v6}, Landroid/app/IActivityTaskManager;->getLockTaskModeState()I

    move-result v6
    :try_end_2e
    .catch Landroid/os/RemoteException; {:try_start_24 .. :try_end_2e} :catch_35
    .catchall {:try_start_24 .. :try_end_2e} :catchall_83

    if-eqz v6, :cond_32

    move v6, v4

    goto :goto_33

    :cond_32
    move v6, v5

    :goto_33
    move v3, v6

    .line 11059
    goto :goto_3d

    .line 11057
    :catch_35
    move-exception v6

    .line 11058
    .local v6, "e":Landroid/os/RemoteException;
    :try_start_36
    const-string v7, "DevicePolicyManager"

    const-string v8, "Failed to get LockTask mode"

    invoke-static {v7, v8}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11060
    .end local v6  # "e":Landroid/os/RemoteException;
    :goto_3d
    if-nez v3, :cond_47

    .line 11061
    invoke-direct {p0, p2, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setStatusBarDisabledInternal(ZI)Z

    move-result v6

    if-nez v6, :cond_47

    .line 11062
    monitor-exit v1

    return v5

    .line 11065
    :cond_47
    iput-boolean p2, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mStatusBarDisabled:Z

    .line 11066
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 11068
    .end local v2  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v3  # "isLockTaskMode":Z
    :cond_4c
    monitor-exit v1
    :try_end_4d
    .catchall {:try_start_36 .. :try_end_4d} :catchall_83

    .line 11069
    const/16 v1, 0x26

    .line 11070
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 11071
    invoke-virtual {v1, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 11072
    invoke-virtual {v1, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 11073
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 11074
    return v4

    .line 11049
    :cond_5f
    :try_start_5f
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Managed profile cannot disable status bar"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "userId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "disabled":Z
    throw v2

    .line 11045
    .restart local v0  # "userId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "disabled":Z
    :cond_67
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Admin "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " is neither the device owner or affiliated user\'s profile owner."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "userId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "disabled":Z
    throw v2

    .line 11068
    .restart local v0  # "userId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "disabled":Z
    :catchall_83
    move-exception v2

    monitor-exit v1
    :try_end_85
    .catchall {:try_start_5f .. :try_end_85} :catchall_83

    throw v2
.end method

.method public setStorageEncryption(Landroid/content/ComponentName;Z)I
    .registers 11
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "encrypt"  # Z

    .line 7018
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    .line 7019
    return v1

    .line 7021
    :cond_6
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7022
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 7023
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v2

    monitor-enter v2

    .line 7026
    if-eqz v0, :cond_37

    .line 7027
    :try_start_16
    const-string v3, "DevicePolicyManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Only owner/system user is allowed to set storage encryption. User "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7028
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " is not permitted."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 7027
    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7029
    monitor-exit v2

    return v1

    .line 7032
    :cond_37
    const/4 v3, 0x7

    invoke-virtual {p0, p1, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v3

    .line 7036
    .local v3, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isEncryptionSupported()Z

    move-result v4

    if-nez v4, :cond_44

    .line 7037
    monitor-exit v2

    return v1

    .line 7041
    :cond_44
    iget-boolean v4, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->encryptionRequested:Z

    if-eq v4, p2, :cond_4d

    .line 7042
    iput-boolean p2, v3, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->encryptionRequested:Z

    .line 7043
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 7046
    :cond_4d
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v1

    .line 7048
    .local v1, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    const/4 v4, 0x0

    .line 7049
    .local v4, "newRequested":Z
    iget-object v5, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    .line 7050
    .local v5, "N":I
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_59
    if-ge v6, v5, :cond_69

    .line 7051
    iget-object v7, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    iget-boolean v7, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->encryptionRequested:Z

    or-int/2addr v4, v7

    .line 7050
    add-int/lit8 v6, v6, 0x1

    goto :goto_59

    .line 7055
    .end local v6  # "i":I
    :cond_69
    invoke-direct {p0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->setEncryptionRequested(Z)V

    .line 7058
    if-eqz v4, :cond_70

    .line 7059
    const/4 v6, 0x3

    goto :goto_71

    .line 7060
    :cond_70
    const/4 v6, 0x1

    :goto_71
    monitor-exit v2

    .line 7058
    return v6

    .line 7061
    .end local v1  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v3  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v4  # "newRequested":Z
    .end local v5  # "N":I
    :catchall_73
    move-exception v1

    monitor-exit v2
    :try_end_75
    .catchall {:try_start_16 .. :try_end_75} :catchall_73

    throw v1
.end method

.method public setSystemSetting(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "setting"  # Ljava/lang/String;
    .param p3, "value"  # Ljava/lang/String;

    .line 10836
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10837
    const-string v0, "String setting is null or empty"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkStringNotEmpty(Ljava/lang/CharSequence;Ljava/lang/Object;)Ljava/lang/CharSequence;

    .line 10839
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10840
    const/4 v1, -0x1

    :try_start_10
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 10842
    sget-object v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->SYSTEM_SETTINGS_WHITELIST:Ljava/util/Set;

    invoke-interface {v1, p2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2d

    .line 10847
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v1

    .line 10849
    .local v1, "callingUserId":I
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    new-instance v3, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$mignzFcOqIvnBFOYi8O3tmqXI68;

    invoke-direct {v3, p0, p2, p3, v1}, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$mignzFcOqIvnBFOYi8O3tmqXI68;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Ljava/lang/String;Ljava/lang/String;I)V

    invoke-virtual {v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderWithCleanCallingIdentity(Lcom/android/internal/util/FunctionalUtils$ThrowingRunnable;)V

    .line 10851
    .end local v1  # "callingUserId":I
    monitor-exit v0

    .line 10852
    return-void

    .line 10843
    :cond_2d
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Permission denial: device owners cannot update %1$s"

    const/4 v3, 0x1

    new-array v3, v3, [Ljava/lang/Object;

    const/4 v4, 0x0

    aput-object p2, v3, v4

    invoke-static {v2, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "setting":Ljava/lang/String;
    .end local p3  # "value":Ljava/lang/String;
    throw v1

    .line 10851
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "setting":Ljava/lang/String;
    .restart local p3  # "value":Ljava/lang/String;
    :catchall_3f
    move-exception v1

    monitor-exit v0
    :try_end_41
    .catchall {:try_start_10 .. :try_end_41} :catchall_3f

    throw v1
.end method

.method public setSystemUpdatePolicy(Landroid/content/ComponentName;Landroid/app/admin/SystemUpdatePolicy;)V
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "policy"  # Landroid/app/admin/SystemUpdatePolicy;

    .line 11494
    if-eqz p2, :cond_1d

    .line 11496
    invoke-virtual {p2}, Landroid/app/admin/SystemUpdatePolicy;->validateType()V

    .line 11498
    invoke-virtual {p2}, Landroid/app/admin/SystemUpdatePolicy;->validateFreezePeriods()V

    .line 11499
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->getSystemUpdateFreezePeriodRecord()Landroid/util/Pair;

    move-result-object v0

    .line 11501
    .local v0, "record":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/time/LocalDate;Ljava/time/LocalDate;>;"
    iget-object v1, v0, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v1, Ljava/time/LocalDate;

    iget-object v2, v0, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v2, Ljava/time/LocalDate;

    .line 11502
    invoke-static {}, Ljava/time/LocalDate;->now()Ljava/time/LocalDate;

    move-result-object v3

    .line 11501
    invoke-virtual {p2, v1, v2, v3}, Landroid/app/admin/SystemUpdatePolicy;->validateAgainstPreviousFreezePeriod(Ljava/time/LocalDate;Ljava/time/LocalDate;Ljava/time/LocalDate;)V

    .line 11504
    .end local v0  # "record":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/time/LocalDate;Ljava/time/LocalDate;>;"
    :cond_1d
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 11505
    const/4 v1, -0x2

    :try_start_23
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 11506
    const/4 v1, 0x0

    if-nez p2, :cond_2f

    .line 11507
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/Owners;->clearSystemUpdatePolicy()V

    goto :goto_37

    .line 11509
    :cond_2f
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v2, p2}, Lcom/android/server/devicepolicy/Owners;->setSystemUpdatePolicy(Landroid/app/admin/SystemUpdatePolicy;)V

    .line 11510
    invoke-direct {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->updateSystemUpdateFreezePeriodsRecord(Z)V

    .line 11512
    :goto_37
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/Owners;->writeDeviceOwner()V

    .line 11513
    monitor-exit v0
    :try_end_3d
    .catchall {:try_start_23 .. :try_end_3d} :catchall_63

    .line 11514
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    new-instance v2, Landroid/content/Intent;

    const-string v3, "android.app.action.SYSTEM_UPDATE_POLICY_CHANGED"

    invoke-direct {v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    sget-object v3, Landroid/os/UserHandle;->SYSTEM:Landroid/os/UserHandle;

    invoke-virtual {v0, v2, v3}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 11517
    const/16 v0, 0x32

    .line 11518
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 11519
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 11520
    if-eqz p2, :cond_5b

    invoke-virtual {p2}, Landroid/app/admin/SystemUpdatePolicy;->getPolicyType()I

    move-result v1

    :cond_5b
    invoke-virtual {v0, v1}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 11521
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 11522
    return-void

    .line 11513
    :catchall_63
    move-exception v1

    :try_start_64
    monitor-exit v0
    :try_end_65
    .catchall {:try_start_64 .. :try_end_65} :catchall_63

    throw v1
.end method

.method public setTime(Landroid/content/ComponentName;J)Z
    .registers 7
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "millis"  # J

    .line 10856
    const-string v0, "ComponentName is null in setTime"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10857
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 10859
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const/4 v1, 0x0

    const-string v2, "auto_time"

    invoke-virtual {v0, v2, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalGetInt(Ljava/lang/String;I)I

    move-result v0

    const/4 v2, 0x1

    if-ne v0, v2, :cond_15

    .line 10860
    return v1

    .line 10862
    :cond_15
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    new-instance v1, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$zqf4q6-7wkQreppEUOBfp0NE94M;

    invoke-direct {v1, p0, p2, p3}, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$zqf4q6-7wkQreppEUOBfp0NE94M;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;J)V

    invoke-virtual {v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderWithCleanCallingIdentity(Lcom/android/internal/util/FunctionalUtils$ThrowingRunnable;)V

    .line 10863
    return v2
.end method

.method public setTimeZone(Landroid/content/ComponentName;Ljava/lang/String;)Z
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "timeZone"  # Ljava/lang/String;

    .line 10868
    const-string v0, "ComponentName is null in setTimeZone"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10869
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 10871
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const/4 v1, 0x0

    const-string v2, "auto_time_zone"

    invoke-virtual {v0, v2, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsGlobalGetInt(Ljava/lang/String;I)I

    move-result v0

    const/4 v2, 0x1

    if-ne v0, v2, :cond_15

    .line 10872
    return v1

    .line 10874
    :cond_15
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    new-instance v1, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$1qc4cD7h8K2CVmZeyPCWra8TVtQ;

    invoke-direct {v1, p0, p2}, Lcom/android/server/devicepolicy/-$$Lambda$DevicePolicyManagerService$1qc4cD7h8K2CVmZeyPCWra8TVtQ;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderWithCleanCallingIdentity(Lcom/android/internal/util/FunctionalUtils$ThrowingRunnable;)V

    .line 10876
    return v2
.end method

.method public setTrustAgentConfiguration(Landroid/content/ComponentName;Landroid/content/ComponentName;Landroid/os/PersistableBundle;Z)V
    .registers 11
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "agent"  # Landroid/content/ComponentName;
    .param p3, "args"  # Landroid/os/PersistableBundle;
    .param p4, "parent"  # Z

    .line 9016
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-eqz v0, :cond_3c

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-virtual {v0}, Lcom/android/internal/widget/LockPatternUtils;->hasSecureLockScreen()Z

    move-result v0

    if-nez v0, :cond_d

    goto :goto_3c

    .line 9019
    :cond_d
    const-string v0, "admin is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9020
    const-string v0, "agent is null"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9021
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 9022
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 9023
    const/16 v2, 0x9

    :try_start_22
    invoke-virtual {p0, p1, v2, p4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;IZ)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 9025
    .local v2, "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    iget-object v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->trustAgentInfos:Landroid/util/ArrayMap;

    invoke-virtual {p2}, Landroid/content/ComponentName;->flattenToString()Ljava/lang/String;

    move-result-object v4

    new-instance v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;

    invoke-direct {v5, p3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo;-><init>(Landroid/os/PersistableBundle;)V

    invoke-virtual {v3, v4, v5}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9026
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 9027
    .end local v2  # "ap":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v1

    .line 9028
    return-void

    .line 9027
    :catchall_39
    move-exception v2

    monitor-exit v1
    :try_end_3b
    .catchall {:try_start_22 .. :try_end_3b} :catchall_39

    throw v2

    .line 9017
    .end local v0  # "userHandle":I
    :cond_3c
    :goto_3c
    return-void
.end method

.method public setUninstallBlocked(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Z)V
    .registers 12
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "packageName"  # Ljava/lang/String;
    .param p4, "uninstallBlocked"  # Z

    .line 10410
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 10411
    .local v0, "userId":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 10413
    const/4 v2, -0x1

    :try_start_a
    const-string v3, "delegation-block-uninstall"

    invoke-direct {p0, p1, p2, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageScope(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;)V

    .line 10416
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2
    :try_end_15
    .catchall {:try_start_a .. :try_end_15} :catchall_56

    .line 10418
    .local v2, "id":J
    :try_start_15
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIPackageManager:Landroid/content/pm/IPackageManager;

    invoke-interface {v4, p3, p4, v0}, Landroid/content/pm/IPackageManager;->setBlockUninstallForUser(Ljava/lang/String;ZI)Z
    :try_end_1a
    .catch Landroid/os/RemoteException; {:try_start_15 .. :try_end_1a} :catch_22
    .catchall {:try_start_15 .. :try_end_1a} :catchall_20

    .line 10423
    :try_start_1a
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    :goto_1c
    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V
    :try_end_1f
    .catchall {:try_start_1a .. :try_end_1f} :catchall_56

    .line 10424
    goto :goto_2e

    .line 10423
    :catchall_20
    move-exception v4

    goto :goto_50

    .line 10419
    :catch_22
    move-exception v4

    .line 10421
    .local v4, "re":Landroid/os/RemoteException;
    :try_start_23
    const-string v5, "DevicePolicyManager"

    const-string v6, "Failed to setBlockUninstallForUser"

    invoke-static {v5, v6, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2a
    .catchall {:try_start_23 .. :try_end_2a} :catchall_20

    .line 10423
    nop

    .end local v4  # "re":Landroid/os/RemoteException;
    :try_start_2b
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    goto :goto_1c

    .line 10425
    .end local v2  # "id":J
    :goto_2e
    monitor-exit v1
    :try_end_2f
    .catchall {:try_start_2b .. :try_end_2f} :catchall_56

    .line 10426
    const/4 v1, 0x1

    const/4 v2, 0x0

    if-nez p1, :cond_35

    move v3, v1

    goto :goto_36

    :cond_35
    move v3, v2

    .line 10427
    .local v3, "isDelegate":Z
    :goto_36
    const/16 v4, 0x43

    .line 10428
    invoke-static {v4}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 10429
    invoke-virtual {v4, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 10430
    invoke-virtual {v4, v3}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    new-array v1, v1, [Ljava/lang/String;

    aput-object p3, v1, v2

    .line 10431
    invoke-virtual {v4, v1}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 10432
    invoke-virtual {v1}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10433
    return-void

    .line 10423
    .end local v3  # "isDelegate":Z
    .restart local v2  # "id":J
    :goto_50
    :try_start_50
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local v0  # "userId":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "callerPackage":Ljava/lang/String;
    .end local p3  # "packageName":Ljava/lang/String;
    .end local p4  # "uninstallBlocked":Z
    throw v4

    .line 10425
    .end local v2  # "id":J
    .restart local v0  # "userId":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "callerPackage":Ljava/lang/String;
    .restart local p3  # "packageName":Ljava/lang/String;
    .restart local p4  # "uninstallBlocked":Z
    :catchall_56
    move-exception v2

    monitor-exit v1
    :try_end_58
    .catchall {:try_start_50 .. :try_end_58} :catchall_56

    throw v2
.end method

.method public setUserIcon(Landroid/content/ComponentName;Landroid/graphics/Bitmap;)V
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "icon"  # Landroid/graphics/Bitmap;

    .line 10981
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 10982
    :try_start_5
    const-string v1, "ComponentName is null"

    invoke-static {p1, v1}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10983
    const/4 v1, -0x1

    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 10985
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    .line 10986
    .local v1, "userId":I
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2
    :try_end_18
    .catchall {:try_start_5 .. :try_end_18} :catchall_39

    .line 10988
    .local v2, "id":J
    :try_start_18
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManagerInternal:Landroid/os/UserManagerInternal;

    invoke-virtual {v4, v1, p2}, Landroid/os/UserManagerInternal;->setUserIcon(ILandroid/graphics/Bitmap;)V
    :try_end_1d
    .catchall {:try_start_18 .. :try_end_1d} :catchall_32

    .line 10990
    :try_start_1d
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 10991
    nop

    .line 10992
    .end local v1  # "userId":I
    .end local v2  # "id":J
    monitor-exit v0
    :try_end_24
    .catchall {:try_start_1d .. :try_end_24} :catchall_39

    .line 10993
    const/16 v0, 0x29

    .line 10994
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10995
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 10996
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10997
    return-void

    .line 10990
    .restart local v1  # "userId":I
    .restart local v2  # "id":J
    :catchall_32
    move-exception v4

    :try_start_33
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "icon":Landroid/graphics/Bitmap;
    throw v4

    .line 10992
    .end local v1  # "userId":I
    .end local v2  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "icon":Landroid/graphics/Bitmap;
    :catchall_39
    move-exception v1

    monitor-exit v0
    :try_end_3b
    .catchall {:try_start_33 .. :try_end_3b} :catchall_39

    throw v1
.end method

.method public setUserProvisioningState(II)V
    .registers 7
    .param p1, "newState"  # I
    .param p2, "userHandle"  # I

    .line 8280
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 8281
    return-void

    .line 8284
    :cond_5
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->getDeviceOwnerUserId()I

    move-result v0

    if-eq p2, v0, :cond_25

    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0, p2}, Lcom/android/server/devicepolicy/Owners;->hasProfileOwner(I)Z

    move-result v0

    if-nez v0, :cond_25

    .line 8285
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getManagedUserId(I)I

    move-result v0

    const/4 v1, -0x1

    if-eq v0, v1, :cond_1d

    goto :goto_25

    .line 8287
    :cond_1d
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Not allowed to change provisioning state unless a device or profile owner is set."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8291
    :cond_25
    :goto_25
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 8292
    const/4 v1, 0x1

    .line 8295
    .local v1, "transitionCheckNeeded":Z
    :try_start_2b
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isAdb()Z

    move-result v2

    if-eqz v2, :cond_44

    .line 8298
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserProvisioningState(I)I

    move-result v2

    if-nez v2, :cond_3c

    const/4 v2, 0x3

    if-ne p1, v2, :cond_3c

    .line 8305
    const/4 v1, 0x0

    goto :goto_47

    .line 8301
    :cond_3c
    new-instance v2, Ljava/lang/IllegalStateException;

    const-string v3, "Not allowed to change provisioning state unless current provisioning state is unmanaged, and new state is finalized."

    invoke-direct {v2, v3}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "newState":I
    .end local p2  # "userHandle":I
    throw v2

    .line 8308
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "newState":I
    .restart local p2  # "userHandle":I
    :cond_44
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageProfileAndDeviceOwners()V

    .line 8311
    :goto_47
    invoke-virtual {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v2

    .line 8312
    .local v2, "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    if-eqz v1, :cond_52

    .line 8314
    iget v3, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserProvisioningState:I

    invoke-direct {p0, v3, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkUserProvisioningStateTransition(II)V

    .line 8316
    :cond_52
    iput p1, v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserProvisioningState:I

    .line 8317
    invoke-direct {p0, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 8318
    .end local v1  # "transitionCheckNeeded":Z
    .end local v2  # "policyData":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    monitor-exit v0

    .line 8319
    return-void

    .line 8318
    :catchall_59
    move-exception v1

    monitor-exit v0
    :try_end_5b
    .catchall {:try_start_2b .. :try_end_5b} :catchall_59

    throw v1
.end method

.method public setUserRestriction(Landroid/content/ComponentName;Ljava/lang/String;Z)V
    .registers 11
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "key"  # Ljava/lang/String;
    .param p3, "enabledFromThisOwner"  # Z

    .line 10041
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10042
    invoke-static {p2}, Lcom/android/server/pm/UserRestrictionsUtils;->isValidRestriction(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_c

    .line 10043
    return-void

    .line 10046
    :cond_c
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 10047
    .local v0, "userHandle":I
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v1

    monitor-enter v1

    .line 10048
    const/4 v2, -0x1

    .line 10049
    :try_start_18
    invoke-virtual {p0, p1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v2

    .line 10051
    .local v2, "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    invoke-virtual {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 10052
    .local v3, "isDeviceOwner":Z
    if-eqz v3, :cond_40

    .line 10053
    invoke-static {p2}, Lcom/android/server/pm/UserRestrictionsUtils;->canDeviceOwnerChange(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_29

    goto :goto_46

    .line 10054
    :cond_29
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Device owner cannot set user restriction "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "userHandle":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "key":Ljava/lang/String;
    .end local p3  # "enabledFromThisOwner":Z
    throw v4

    .line 10057
    .restart local v0  # "userHandle":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "key":Ljava/lang/String;
    .restart local p3  # "enabledFromThisOwner":Z
    :cond_40
    invoke-static {p2, v0}, Lcom/android/server/pm/UserRestrictionsUtils;->canProfileOwnerChange(Ljava/lang/String;I)Z

    move-result v4

    if-eqz v4, :cond_9b

    .line 10063
    :goto_46
    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->ensureUserRestrictions()Landroid/os/Bundle;

    move-result-object v4

    .line 10064
    .local v4, "restrictions":Landroid/os/Bundle;
    const/4 v5, 0x1

    if-eqz p3, :cond_51

    .line 10065
    invoke-virtual {v4, p2, v5}, Landroid/os/Bundle;->putBoolean(Ljava/lang/String;Z)V

    goto :goto_54

    .line 10067
    :cond_51
    invoke-virtual {v4, p2}, Landroid/os/Bundle;->remove(Ljava/lang/String;)V

    .line 10069
    :goto_54
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveUserRestrictionsLocked(I)V

    .line 10070
    .end local v2  # "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "isDeviceOwner":Z
    .end local v4  # "restrictions":Landroid/os/Bundle;
    monitor-exit v1
    :try_end_58
    .catchall {:try_start_18 .. :try_end_58} :catchall_b2

    .line 10071
    if-eqz p3, :cond_5d

    .line 10072
    const/16 v1, 0xc

    goto :goto_5f

    .line 10073
    :cond_5d
    const/16 v1, 0xd

    :goto_5f
    nop

    .line 10074
    .local v1, "eventId":I
    nop

    .line 10075
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 10076
    invoke-virtual {v2, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    new-array v3, v5, [Ljava/lang/String;

    const/4 v4, 0x0

    aput-object p2, v3, v4

    .line 10077
    invoke-virtual {v2, v3}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v2

    .line 10078
    invoke-virtual {v2}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 10079
    invoke-static {}, Landroid/app/admin/SecurityLog;->isLoggingEnabled()Z

    move-result v2

    if-eqz v2, :cond_9a

    .line 10080
    if-eqz p3, :cond_81

    .line 10081
    const v2, 0x3346b

    goto :goto_84

    .line 10082
    :cond_81
    const v2, 0x3346c

    :goto_84
    nop

    .line 10083
    .local v2, "eventTag":I
    const/4 v3, 0x3

    new-array v3, v3, [Ljava/lang/Object;

    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    aput-object v6, v3, v4

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v3, v5

    const/4 v4, 0x2

    aput-object p2, v3, v4

    invoke-static {v2, v3}, Landroid/app/admin/SecurityLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 10085
    .end local v2  # "eventTag":I
    :cond_9a
    return-void

    .line 10058
    .end local v1  # "eventId":I
    .local v2, "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .restart local v3  # "isDeviceOwner":Z
    :cond_9b
    :try_start_9b
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Profile owner cannot set user restriction "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .end local v0  # "userHandle":I
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "key":Ljava/lang/String;
    .end local p3  # "enabledFromThisOwner":Z
    throw v4

    .line 10070
    .end local v2  # "activeAdmin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    .end local v3  # "isDeviceOwner":Z
    .restart local v0  # "userHandle":I
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "key":Ljava/lang/String;
    .restart local p3  # "enabledFromThisOwner":Z
    :catchall_b2
    move-exception v2

    monitor-exit v1
    :try_end_b4
    .catchall {:try_start_9b .. :try_end_b4} :catchall_b2

    throw v2
.end method

.method public startManagedQuickContact(Ljava/lang/String;JZJLandroid/content/Intent;)V
    .registers 16
    .param p1, "actualLookupKey"  # Ljava/lang/String;
    .param p2, "actualContactId"  # J
    .param p4, "isContactIdIgnored"  # Z
    .param p5, "actualDirectoryId"  # J
    .param p7, "originalIntent"  # Landroid/content/Intent;

    .line 10549
    invoke-static/range {p1 .. p7}, Landroid/provider/ContactsContract$QuickContact;->rebuildManagedQuickContactsIntent(Ljava/lang/String;JZJLandroid/content/Intent;)Landroid/content/Intent;

    move-result-object v0

    .line 10551
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    .line 10553
    .local v1, "callingUserId":I
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2

    .line 10555
    .local v2, "ident":J
    :try_start_e
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v4

    monitor-enter v4
    :try_end_13
    .catchall {:try_start_e .. :try_end_13} :catchall_42

    .line 10556
    :try_start_13
    invoke-virtual {p0, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getManagedUserId(I)I

    move-result v5

    .line 10557
    .local v5, "managedUserId":I
    if-gez v5, :cond_20

    .line 10558
    monitor-exit v4
    :try_end_1a
    .catchall {:try_start_13 .. :try_end_1a} :catchall_3f

    .line 10571
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 10558
    return-void

    .line 10560
    :cond_20
    :try_start_20
    invoke-direct {p0, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCrossProfileQuickContactDisabled(I)Z

    move-result v6

    if-eqz v6, :cond_2d

    .line 10565
    monitor-exit v4
    :try_end_27
    .catchall {:try_start_20 .. :try_end_27} :catchall_3f

    .line 10571
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 10565
    return-void

    .line 10567
    :cond_2d
    :try_start_2d
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    new-instance v7, Landroid/os/UserHandle;

    invoke-direct {v7, v5}, Landroid/os/UserHandle;-><init>(I)V

    invoke-static {v6, v0, v7}, Landroid/provider/ContactsInternal;->startQuickContactWithErrorToastForUser(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 10569
    .end local v5  # "managedUserId":I
    monitor-exit v4
    :try_end_38
    .catchall {:try_start_2d .. :try_end_38} :catchall_3f

    .line 10571
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 10572
    nop

    .line 10573
    return-void

    .line 10569
    :catchall_3f
    move-exception v5

    :try_start_40
    monitor-exit v4
    :try_end_41
    .catchall {:try_start_40 .. :try_end_41} :catchall_3f

    .end local v0  # "intent":Landroid/content/Intent;
    .end local v1  # "callingUserId":I
    .end local v2  # "ident":J
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "actualLookupKey":Ljava/lang/String;
    .end local p2  # "actualContactId":J
    .end local p4  # "isContactIdIgnored":Z
    .end local p5  # "actualDirectoryId":J
    .end local p7  # "originalIntent":Landroid/content/Intent;
    :try_start_41
    throw v5
    :try_end_42
    .catchall {:try_start_41 .. :try_end_42} :catchall_42

    .line 10571
    .restart local v0  # "intent":Landroid/content/Intent;
    .restart local v1  # "callingUserId":I
    .restart local v2  # "ident":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "actualLookupKey":Ljava/lang/String;
    .restart local p2  # "actualContactId":J
    .restart local p4  # "isContactIdIgnored":Z
    .restart local p5  # "actualDirectoryId":J
    .restart local p7  # "originalIntent":Landroid/content/Intent;
    :catchall_42
    move-exception v4

    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v4
.end method

.method public startUserInBackground(Landroid/content/ComponentName;Landroid/os/UserHandle;)I
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # Landroid/os/UserHandle;

    .line 9830
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9831
    const-string v0, "UserHandle is null"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9832
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 9834
    invoke-virtual {p2}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v0

    .line 9835
    .local v0, "userId":I
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v1

    const-string v2, "DevicePolicyManager"

    if-eqz v1, :cond_20

    .line 9836
    const-string v1, "Managed profile cannot be started in background"

    invoke-static {v2, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9837
    const/4 v1, 0x2

    return v1

    .line 9840
    :cond_20
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v3

    .line 9842
    .local v3, "id":J
    const/4 v1, 0x1

    :try_start_27
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getActivityManagerInternal()Landroid/app/ActivityManagerInternal;

    move-result-object v5

    invoke-virtual {v5}, Landroid/app/ActivityManagerInternal;->canStartMoreUsers()Z

    move-result v5

    if-nez v5, :cond_3f

    .line 9843
    const-string v5, "Cannot start more users in background"

    invoke-static {v2, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_38
    .catch Landroid/os/RemoteException; {:try_start_27 .. :try_end_38} :catch_60
    .catchall {:try_start_27 .. :try_end_38} :catchall_59

    .line 9844
    const/4 v1, 0x3

    .line 9856
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9844
    return v1

    .line 9847
    :cond_3f
    :try_start_3f
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v2

    invoke-interface {v2, v0}, Landroid/app/IActivityManager;->startUserInBackground(I)Z

    move-result v2
    :try_end_49
    .catch Landroid/os/RemoteException; {:try_start_3f .. :try_end_49} :catch_60
    .catchall {:try_start_3f .. :try_end_49} :catchall_59

    if-eqz v2, :cond_52

    .line 9848
    const/4 v1, 0x0

    .line 9856
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9848
    return v1

    .line 9850
    :cond_52
    nop

    .line 9856
    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9850
    return v1

    .line 9856
    :catchall_59
    move-exception v1

    iget-object v2, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v1

    .line 9852
    :catch_60
    move-exception v2

    .line 9854
    .local v2, "e":Landroid/os/RemoteException;
    nop

    .line 9856
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v3, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 9854
    return v1
.end method

.method public startViewCalendarEventInManagedProfile(Ljava/lang/String;JJJZI)Z
    .registers 27
    .param p1, "packageName"  # Ljava/lang/String;
    .param p2, "eventId"  # J
    .param p4, "start"  # J
    .param p6, "end"  # J
    .param p8, "allDay"  # Z
    .param p9, "flags"  # I

    .line 14396
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    iget-boolean v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v3, 0x0

    if-nez v0, :cond_a

    .line 14397
    return v3

    .line 14399
    :cond_a
    const-string v0, "Package name is empty"

    invoke-static {v2, v0}, Lcom/android/internal/util/Preconditions;->checkStringNotEmpty(Ljava/lang/CharSequence;Ljava/lang/Object;)Ljava/lang/CharSequence;

    .line 14401
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderGetCallingUid()I

    move-result v4

    .line 14402
    .local v4, "callingUid":I
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v5

    .line 14403
    .local v5, "callingUserId":I
    invoke-direct {v1, v2, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isCallingFromPackage(Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_c8

    .line 14407
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v6

    .line 14409
    .local v6, "identity":J
    :try_start_27
    invoke-virtual {v1, v5}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getManagedUserId(I)I

    move-result v0
    :try_end_2b
    .catchall {:try_start_27 .. :try_end_2b} :catchall_b7

    move v8, v0

    .line 14410
    .local v8, "workProfileUserId":I
    if-gez v8, :cond_35

    .line 14411
    nop

    .line 14433
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v6, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 14411
    return v3

    .line 14413
    :cond_35
    :try_start_35
    invoke-virtual {v1, v2, v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isPackageAllowedToAccessCalendarForUser(Ljava/lang/String;I)Z

    move-result v0
    :try_end_39
    .catchall {:try_start_35 .. :try_end_39} :catchall_b7

    const/4 v9, 0x1

    const-string v10, "DevicePolicyManager"

    if-nez v0, :cond_5e

    .line 14414
    :try_start_3e
    const-string v0, "Package %s is not allowed to access cross-profilecalendar APIs"

    new-array v9, v9, [Ljava/lang/Object;

    aput-object v2, v9, v3

    invoke-static {v0, v9}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v10, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4b
    .catchall {:try_start_3e .. :try_end_4b} :catchall_52

    .line 14416
    nop

    .line 14433
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v6, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 14416
    return v3

    .line 14433
    .end local v8  # "workProfileUserId":I
    :catchall_52
    move-exception v0

    move-wide/from16 v12, p2

    move-wide/from16 v14, p4

    move/from16 v9, p8

    move/from16 v16, v4

    move-wide/from16 v3, p6

    goto :goto_c2

    .line 14418
    .restart local v8  # "workProfileUserId":I
    :cond_5e
    :try_start_5e
    new-instance v0, Landroid/content/Intent;

    const-string v11, "android.provider.calendar.action.VIEW_MANAGED_PROFILE_CALENDAR_EVENT"

    invoke-direct {v0, v11}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    move-object v11, v0

    .line 14420
    .local v11, "intent":Landroid/content/Intent;
    invoke-virtual {v11, v2}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 14421
    const-string/jumbo v0, "id"
    :try_end_6c
    .catchall {:try_start_5e .. :try_end_6c} :catchall_b7

    move-wide/from16 v12, p2

    :try_start_6e
    invoke-virtual {v11, v0, v12, v13}, Landroid/content/Intent;->putExtra(Ljava/lang/String;J)Landroid/content/Intent;

    .line 14422
    const-string v0, "beginTime"
    :try_end_73
    .catchall {:try_start_6e .. :try_end_73} :catchall_b5

    move-wide/from16 v14, p4

    :try_start_75
    invoke-virtual {v11, v0, v14, v15}, Landroid/content/Intent;->putExtra(Ljava/lang/String;J)Landroid/content/Intent;

    .line 14423
    const-string v0, "endTime"
    :try_end_7a
    .catchall {:try_start_75 .. :try_end_7a} :catchall_b3

    move/from16 v16, v4

    move-wide/from16 v3, p6

    .end local v4  # "callingUid":I
    .local v16, "callingUid":I
    :try_start_7e
    invoke-virtual {v11, v0, v3, v4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;J)Landroid/content/Intent;

    .line 14424
    const-string v0, "allDay"
    :try_end_83
    .catchall {:try_start_7e .. :try_end_83} :catchall_af

    move/from16 v9, p8

    :try_start_85
    invoke-virtual {v11, v0, v9}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 14425
    move/from16 v2, p9

    invoke-virtual {v11, v2}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;
    :try_end_8d
    .catchall {:try_start_85 .. :try_end_8d} :catchall_ad

    .line 14427
    :try_start_8d
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {v8}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v2

    invoke-virtual {v0, v11, v2}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_96
    .catch Landroid/content/ActivityNotFoundException; {:try_start_8d .. :try_end_96} :catch_9f
    .catchall {:try_start_8d .. :try_end_96} :catchall_ad

    .line 14431
    nop

    .line 14433
    .end local v8  # "workProfileUserId":I
    .end local v11  # "intent":Landroid/content/Intent;
    iget-object v0, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v6, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 14434
    nop

    .line 14435
    const/4 v0, 0x1

    return v0

    .line 14428
    .restart local v8  # "workProfileUserId":I
    .restart local v11  # "intent":Landroid/content/Intent;
    :catch_9f
    move-exception v0

    .line 14429
    .local v0, "e":Landroid/content/ActivityNotFoundException;
    :try_start_a0
    const-string v2, "View event activity not found"

    invoke-static {v10, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_a5
    .catchall {:try_start_a0 .. :try_end_a5} :catchall_ad

    .line 14430
    nop

    .line 14433
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v6, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 14430
    const/4 v2, 0x0

    return v2

    .line 14433
    .end local v0  # "e":Landroid/content/ActivityNotFoundException;
    .end local v8  # "workProfileUserId":I
    .end local v11  # "intent":Landroid/content/Intent;
    :catchall_ad
    move-exception v0

    goto :goto_c2

    :catchall_af
    move-exception v0

    move/from16 v9, p8

    goto :goto_c2

    .end local v16  # "callingUid":I
    .restart local v4  # "callingUid":I
    :catchall_b3
    move-exception v0

    goto :goto_bc

    :catchall_b5
    move-exception v0

    goto :goto_ba

    :catchall_b7
    move-exception v0

    move-wide/from16 v12, p2

    :goto_ba
    move-wide/from16 v14, p4

    :goto_bc
    move/from16 v9, p8

    move/from16 v16, v4

    move-wide/from16 v3, p6

    .end local v4  # "callingUid":I
    .restart local v16  # "callingUid":I
    :goto_c2
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v6, v7}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0

    .line 14404
    .end local v6  # "identity":J
    .end local v16  # "callingUid":I
    .restart local v4  # "callingUid":I
    :cond_c8
    new-instance v0, Ljava/lang/SecurityException;

    const-string v2, "Input package name doesn\'t align with actual calling package."

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public stopUser(Landroid/content/ComponentName;Landroid/os/UserHandle;)I
    .registers 6
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # Landroid/os/UserHandle;

    .line 9862
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9863
    const-string v0, "UserHandle is null"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9864
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 9866
    invoke-virtual {p2}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v0

    .line 9867
    .local v0, "userId":I
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isManagedProfile(I)Z

    move-result v1

    if-eqz v1, :cond_20

    .line 9868
    const-string v1, "DevicePolicyManager"

    const-string v2, "Managed profile cannot be stopped"

    invoke-static {v1, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9869
    const/4 v1, 0x2

    return v1

    .line 9872
    :cond_20
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->stopUserUnchecked(I)I

    move-result v1

    return v1
.end method

.method public switchUser(Landroid/content/ComponentName;Landroid/os/UserHandle;)Z
    .registers 9
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "userHandle"  # Landroid/os/UserHandle;

    .line 9807
    const-string v0, "ComponentName is null"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9809
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 9810
    const/4 v1, -0x2

    :try_start_b
    invoke-virtual {p0, p1, v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    .line 9812
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1
    :try_end_14
    .catchall {:try_start_b .. :try_end_14} :catchall_45

    .line 9814
    .local v1, "id":J
    const/4 v3, 0x0

    .line 9815
    .local v3, "userId":I
    if-eqz p2, :cond_1c

    .line 9816
    :try_start_17
    invoke-virtual {p2}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v4

    move v3, v4

    .line 9818
    :cond_1c
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->getIActivityManager()Landroid/app/IActivityManager;

    move-result-object v4

    invoke-interface {v4, v3}, Landroid/app/IActivityManager;->switchUser(I)Z

    move-result v4
    :try_end_26
    .catch Landroid/os/RemoteException; {:try_start_17 .. :try_end_26} :catch_2f
    .catchall {:try_start_17 .. :try_end_26} :catchall_2d

    .line 9823
    :try_start_26
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v0
    :try_end_2c
    .catchall {:try_start_26 .. :try_end_2c} :catchall_45

    .line 9818
    return v4

    .line 9823
    .end local v3  # "userId":I
    :catchall_2d
    move-exception v3

    goto :goto_3f

    .line 9819
    :catch_2f
    move-exception v3

    .line 9820
    .local v3, "e":Landroid/os/RemoteException;
    :try_start_30
    const-string v4, "DevicePolicyManager"

    const-string v5, "Couldn\'t switch user"

    invoke-static {v4, v5, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_37
    .catchall {:try_start_30 .. :try_end_37} :catchall_2d

    .line 9821
    const/4 v4, 0x0

    .line 9823
    :try_start_38
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v5, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    monitor-exit v0

    .line 9821
    return v4

    .line 9823
    .end local v3  # "e":Landroid/os/RemoteException;
    :goto_3f
    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "who":Landroid/content/ComponentName;
    .end local p2  # "userHandle":Landroid/os/UserHandle;
    throw v3

    .line 9825
    .end local v1  # "id":J
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "who":Landroid/content/ComponentName;
    .restart local p2  # "userHandle":Landroid/os/UserHandle;
    :catchall_45
    move-exception v1

    monitor-exit v0
    :try_end_47
    .catchall {:try_start_38 .. :try_end_47} :catchall_45

    throw v1
.end method

.method systemReady(I)V
    .registers 3
    .param p1, "phase"  # I
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 3535
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 3536
    return-void

    .line 3538
    :cond_5
    const/16 v0, 0x1e0

    if-eq p1, v0, :cond_1a

    const/16 v0, 0x226

    if-eq p1, v0, :cond_16

    const/16 v0, 0x3e8

    if-eq p1, v0, :cond_12

    goto :goto_26

    .line 3548
    :cond_12
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->ensureDeviceOwnerUserStarted()V

    goto :goto_26

    .line 3545
    :cond_16
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->maybeStartSecurityLogMonitorOnActivityManagerReady()V

    .line 3546
    goto :goto_26

    .line 3540
    :cond_1a
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->onLockSettingsReady()V

    .line 3541
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->loadAdminDataAsync()V

    .line 3542
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mOwners:Lcom/android/server/devicepolicy/Owners;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/Owners;->systemReady()V

    .line 3543
    nop

    .line 3551
    :goto_26
    return-void
.end method

.method public transferOwnership(Landroid/content/ComponentName;Landroid/content/ComponentName;Landroid/os/PersistableBundle;)V
    .registers 23
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "target"  # Landroid/content/ComponentName;
    .param p3, "bundle"  # Landroid/os/PersistableBundle;

    .line 13670
    move-object/from16 v7, p0

    move-object/from16 v8, p1

    move-object/from16 v9, p2

    iget-boolean v0, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_b

    .line 13671
    return-void

    .line 13674
    :cond_b
    const-string v0, "Admin cannot be null."

    invoke-static {v8, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13675
    const-string v0, "Target cannot be null."

    invoke-static {v9, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13677
    invoke-direct/range {p0 .. p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceProfileOrDeviceOwner(Landroid/content/ComponentName;)V

    .line 13679
    invoke-virtual/range {p1 .. p2}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_11e

    .line 13684
    invoke-virtual/range {p1 .. p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual/range {p2 .. p2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_116

    .line 13689
    iget-object v0, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v10

    .line 13690
    .local v10, "callingUserId":I
    invoke-virtual {v7, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v11

    .line 13691
    .local v11, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    const/4 v0, 0x1

    invoke-virtual {v7, v9, v10, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->findAdmin(Landroid/content/ComponentName;IZ)Landroid/app/admin/DeviceAdminInfo;

    move-result-object v12

    .line 13693
    .local v12, "incomingDeviceInfo":Landroid/app/admin/DeviceAdminInfo;
    invoke-direct {v7, v9, v12, v11}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->checkActiveAdminPrecondition(Landroid/content/ComponentName;Landroid/app/admin/DeviceAdminInfo;Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;)V

    .line 13694
    invoke-virtual {v12}, Landroid/app/admin/DeviceAdminInfo;->supportsTransferOwnership()Z

    move-result v1

    if-eqz v1, :cond_10e

    .line 13699
    iget-object v1, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v13

    .line 13700
    .local v13, "id":J
    const/4 v1, 0x0

    .line 13702
    .local v1, "ownerType":Ljava/lang/String;
    :try_start_4b
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v15

    monitor-enter v15
    :try_end_50
    .catchall {:try_start_4b .. :try_end_50} :catchall_103

    .line 13717
    if-nez p3, :cond_60

    .line 13718
    :try_start_52
    new-instance v2, Landroid/os/PersistableBundle;

    invoke-direct {v2}, Landroid/os/PersistableBundle;-><init>()V
    :try_end_57
    .catchall {:try_start_52 .. :try_end_57} :catchall_59

    move-object v6, v2

    .end local p3  # "bundle":Landroid/os/PersistableBundle;
    .local v2, "bundle":Landroid/os/PersistableBundle;
    goto :goto_62

    .line 13740
    .end local v2  # "bundle":Landroid/os/PersistableBundle;
    .restart local p3  # "bundle":Landroid/os/PersistableBundle;
    :catchall_59
    move-exception v0

    move-object/from16 v18, v11

    move-object/from16 v11, p3

    goto/16 :goto_fd

    .line 13717
    :cond_60
    move-object/from16 v6, p3

    .line 13720
    .end local p3  # "bundle":Landroid/os/PersistableBundle;
    .local v6, "bundle":Landroid/os/PersistableBundle;
    :goto_62
    :try_start_62
    invoke-virtual {v7, v8, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isProfileOwner(Landroid/content/ComponentName;I)Z

    move-result v2

    if-eqz v2, :cond_a2

    .line 13721
    const-string/jumbo v2, "profile-owner"
    :try_end_6b
    .catchall {:try_start_62 .. :try_end_6b} :catchall_f9

    move-object/from16 v16, v2

    .line 13722
    .end local v1  # "ownerType":Ljava/lang/String;
    .local v16, "ownerType":Ljava/lang/String;
    :try_start_6d
    const-string/jumbo v17, "profile-owner"
    :try_end_70
    .catchall {:try_start_6d .. :try_end_70} :catchall_9b

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object v4, v6

    move v5, v10

    move-object/from16 v18, v11

    move-object v11, v6

    .end local v6  # "bundle":Landroid/os/PersistableBundle;
    .local v11, "bundle":Landroid/os/PersistableBundle;
    .local v18, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    move-object/from16 v6, v17

    :try_start_7d
    invoke-direct/range {v1 .. v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->prepareTransfer(Landroid/content/ComponentName;Landroid/content/ComponentName;Landroid/os/PersistableBundle;ILjava/lang/String;)V

    .line 13724
    invoke-direct {v7, v8, v9, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->transferProfileOwnershipLocked(Landroid/content/ComponentName;Landroid/content/ComponentName;I)V

    .line 13725
    const-string v1, "android.app.action.TRANSFER_OWNERSHIP_COMPLETE"

    .line 13726
    invoke-direct {v7, v11}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTransferOwnershipAdminExtras(Landroid/os/PersistableBundle;)Landroid/os/Bundle;

    move-result-object v2

    .line 13725
    invoke-direct {v7, v1, v2, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendProfileOwnerCommand(Ljava/lang/String;Landroid/os/Bundle;I)V

    .line 13727
    const-string v1, "android.app.action.PROFILE_OWNER_CHANGED"

    invoke-direct {v7, v1, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->postTransfer(Ljava/lang/String;I)V

    .line 13728
    invoke-direct {v7, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isUserAffiliatedWithDeviceLocked(I)Z

    move-result v1

    if-eqz v1, :cond_d0

    .line 13729
    invoke-direct {v7, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->notifyAffiliatedProfileTransferOwnershipComplete(I)V
    :try_end_9a
    .catchall {:try_start_7d .. :try_end_9a} :catchall_f5

    goto :goto_d0

    .line 13740
    .end local v18  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .restart local v6  # "bundle":Landroid/os/PersistableBundle;
    .local v11, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :catchall_9b
    move-exception v0

    move-object/from16 v18, v11

    move-object v11, v6

    move-object/from16 v1, v16

    .end local v6  # "bundle":Landroid/os/PersistableBundle;
    .local v11, "bundle":Landroid/os/PersistableBundle;
    .restart local v18  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    goto :goto_fd

    .line 13731
    .end local v16  # "ownerType":Ljava/lang/String;
    .end local v18  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .restart local v1  # "ownerType":Ljava/lang/String;
    .restart local v6  # "bundle":Landroid/os/PersistableBundle;
    .local v11, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :cond_a2
    move-object/from16 v18, v11

    move-object v11, v6

    .end local v6  # "bundle":Landroid/os/PersistableBundle;
    .local v11, "bundle":Landroid/os/PersistableBundle;
    .restart local v18  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :try_start_a5
    invoke-virtual {v7, v8, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->isDeviceOwner(Landroid/content/ComponentName;I)Z

    move-result v2

    if-eqz v2, :cond_ce

    .line 13732
    const-string v2, "device-owner"
    :try_end_ad
    .catchall {:try_start_a5 .. :try_end_ad} :catchall_101

    move-object/from16 v16, v2

    .line 13733
    .end local v1  # "ownerType":Ljava/lang/String;
    .restart local v16  # "ownerType":Ljava/lang/String;
    :try_start_af
    const-string v6, "device-owner"

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object v4, v11

    move v5, v10

    invoke-direct/range {v1 .. v6}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->prepareTransfer(Landroid/content/ComponentName;Landroid/content/ComponentName;Landroid/os/PersistableBundle;ILjava/lang/String;)V

    .line 13735
    invoke-direct {v7, v8, v9, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->transferDeviceOwnershipLocked(Landroid/content/ComponentName;Landroid/content/ComponentName;I)V

    .line 13736
    const-string v1, "android.app.action.TRANSFER_OWNERSHIP_COMPLETE"

    .line 13737
    invoke-direct {v7, v11}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getTransferOwnershipAdminExtras(Landroid/os/PersistableBundle;)Landroid/os/Bundle;

    move-result-object v2

    .line 13736
    invoke-virtual {v7, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->sendDeviceOwnerCommand(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 13738
    const-string v1, "android.app.action.DEVICE_OWNER_CHANGED"

    invoke-direct {v7, v1, v10}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->postTransfer(Ljava/lang/String;I)V

    goto :goto_d0

    .line 13731
    .end local v16  # "ownerType":Ljava/lang/String;
    .restart local v1  # "ownerType":Ljava/lang/String;
    :cond_ce
    move-object/from16 v16, v1

    .line 13740
    .end local v1  # "ownerType":Ljava/lang/String;
    .restart local v16  # "ownerType":Ljava/lang/String;
    :cond_d0
    :goto_d0
    monitor-exit v15
    :try_end_d1
    .catchall {:try_start_af .. :try_end_d1} :catchall_f5

    .line 13742
    iget-object v1, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v13, v14}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13743
    nop

    .line 13744
    const/16 v1, 0x3a

    .line 13745
    invoke-static {v1}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    .line 13746
    invoke-virtual {v1, v8}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v1

    const/4 v2, 0x2

    new-array v2, v2, [Ljava/lang/String;

    const/4 v3, 0x0

    .line 13747
    invoke-virtual/range {p2 .. p2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    aput-object v4, v2, v3

    aput-object v16, v2, v0

    invoke-virtual {v1, v2}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 13748
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 13749
    return-void

    .line 13740
    :catchall_f5
    move-exception v0

    move-object/from16 v1, v16

    goto :goto_fd

    .end local v16  # "ownerType":Ljava/lang/String;
    .end local v18  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .restart local v1  # "ownerType":Ljava/lang/String;
    .restart local v6  # "bundle":Landroid/os/PersistableBundle;
    .local v11, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :catchall_f9
    move-exception v0

    move-object/from16 v18, v11

    move-object v11, v6

    .end local v6  # "bundle":Landroid/os/PersistableBundle;
    .local v11, "bundle":Landroid/os/PersistableBundle;
    .restart local v18  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :goto_fd
    :try_start_fd
    monitor-exit v15
    :try_end_fe
    .catchall {:try_start_fd .. :try_end_fe} :catchall_101

    .end local v1  # "ownerType":Ljava/lang/String;
    .end local v10  # "callingUserId":I
    .end local v11  # "bundle":Landroid/os/PersistableBundle;
    .end local v12  # "incomingDeviceInfo":Landroid/app/admin/DeviceAdminInfo;
    .end local v13  # "id":J
    .end local v18  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .end local p1  # "admin":Landroid/content/ComponentName;
    .end local p2  # "target":Landroid/content/ComponentName;
    :try_start_fe
    throw v0
    :try_end_ff
    .catchall {:try_start_fe .. :try_end_ff} :catchall_ff

    .line 13742
    .restart local v1  # "ownerType":Ljava/lang/String;
    .restart local v10  # "callingUserId":I
    .restart local v11  # "bundle":Landroid/os/PersistableBundle;
    .restart local v12  # "incomingDeviceInfo":Landroid/app/admin/DeviceAdminInfo;
    .restart local v13  # "id":J
    .restart local v18  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .restart local p0  # "this":Lcom/android/server/devicepolicy/DevicePolicyManagerService;
    .restart local p1  # "admin":Landroid/content/ComponentName;
    .restart local p2  # "target":Landroid/content/ComponentName;
    :catchall_ff
    move-exception v0

    goto :goto_108

    .line 13740
    :catchall_101
    move-exception v0

    goto :goto_fd

    .line 13742
    .end local v18  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .local v11, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .restart local p3  # "bundle":Landroid/os/PersistableBundle;
    :catchall_103
    move-exception v0

    move-object/from16 v18, v11

    move-object/from16 v11, p3

    .end local p3  # "bundle":Landroid/os/PersistableBundle;
    .local v11, "bundle":Landroid/os/PersistableBundle;
    .restart local v18  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :goto_108
    iget-object v2, v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v2, v13, v14}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0

    .line 13695
    .end local v1  # "ownerType":Ljava/lang/String;
    .end local v13  # "id":J
    .end local v18  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .local v11, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .restart local p3  # "bundle":Landroid/os/PersistableBundle;
    :cond_10e
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Provided target does not support ownership transfer."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 13685
    .end local v10  # "callingUserId":I
    .end local v11  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    .end local v12  # "incomingDeviceInfo":Landroid/app/admin/DeviceAdminInfo;
    :cond_116
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Provided administrator and target have the same package name."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 13680
    :cond_11e
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Provided administrator and target are the same object."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public uninstallCaCerts(Landroid/content/ComponentName;Ljava/lang/String;[Ljava/lang/String;)V
    .registers 10
    .param p1, "admin"  # Landroid/content/ComponentName;
    .param p2, "callerPackage"  # Ljava/lang/String;
    .param p3, "aliases"  # [Ljava/lang/String;

    .line 5618
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 5619
    return-void

    .line 5621
    :cond_5
    invoke-virtual {p0, p1, p2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageCaCerts(Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 5623
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 5624
    .local v0, "userId":I
    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v1

    .line 5626
    .local v1, "id":J
    :try_start_14
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mCertificateMonitor:Lcom/android/server/devicepolicy/CertificateMonitor;

    invoke-static {v0}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v4

    invoke-virtual {v3, v4, p3}, Lcom/android/server/devicepolicy/CertificateMonitor;->uninstallCaCerts(Landroid/os/UserHandle;[Ljava/lang/String;)V

    .line 5627
    if-nez p1, :cond_21

    const/4 v3, 0x1

    goto :goto_22

    :cond_21
    const/4 v3, 0x0

    .line 5628
    .local v3, "isDelegate":Z
    :goto_22
    const/16 v4, 0x18

    .line 5629
    invoke-static {v4}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 5630
    invoke-virtual {v4, p2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 5631
    invoke-virtual {v4, v3}, Landroid/app/admin/DevicePolicyEventLogger;->setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v4

    .line 5632
    invoke-virtual {v4}, Landroid/app/admin/DevicePolicyEventLogger;->write()V
    :try_end_33
    .catchall {:try_start_14 .. :try_end_33} :catchall_56

    .line 5634
    .end local v3  # "isDelegate":Z
    iget-object v3, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 5635
    nop

    .line 5637
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v3

    monitor-enter v3

    .line 5638
    :try_start_3e
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v4

    iget-object v4, v4, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mOwnerInstalledCaCerts:Ljava/util/Set;

    invoke-static {p3}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v5

    invoke-interface {v4, v5}, Ljava/util/Set;->removeAll(Ljava/util/Collection;)Z

    move-result v4

    if-eqz v4, :cond_51

    .line 5639
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 5641
    :cond_51
    monitor-exit v3

    .line 5642
    return-void

    .line 5641
    :catchall_53
    move-exception v4

    monitor-exit v3
    :try_end_55
    .catchall {:try_start_3e .. :try_end_55} :catchall_53

    throw v4

    .line 5634
    :catchall_56
    move-exception v3

    iget-object v4, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v3
.end method

.method public uninstallPackageWithActiveAdmins(Ljava/lang/String;)V
    .registers 12
    .param p1, "packageName"  # Ljava/lang/String;

    .line 12798
    invoke-direct {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceCanManageDeviceAdmin()V

    .line 12799
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    xor-int/lit8 v0, v0, 0x1

    invoke-static {v0}, Lcom/android/internal/util/Preconditions;->checkArgument(Z)V

    .line 12801
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    .line 12803
    .local v0, "userId":I
    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceUserUnlocked(I)V

    .line 12805
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getProfileOwner(I)Landroid/content/ComponentName;

    move-result-object v1

    .line 12806
    .local v1, "profileOwner":Landroid/content/ComponentName;
    if-eqz v1, :cond_2e

    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_26

    goto :goto_2e

    .line 12807
    :cond_26
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "Cannot uninstall a package with a profile owner"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 12810
    :cond_2e
    :goto_2e
    const/4 v2, 0x0

    invoke-virtual {p0, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerComponent(Z)Landroid/content/ComponentName;

    move-result-object v2

    .line 12811
    .local v2, "deviceOwner":Landroid/content/ComponentName;
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getDeviceOwnerUserId()I

    move-result v3

    if-ne v3, v0, :cond_4e

    if-eqz v2, :cond_4e

    .line 12812
    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_46

    goto :goto_4e

    .line 12813
    :cond_46
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "Cannot uninstall a package with a device owner"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 12816
    :cond_4e
    :goto_4e
    new-instance v3, Landroid/util/Pair;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-direct {v3, p1, v4}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 12817
    .local v3, "packageUserPair":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/String;Ljava/lang/Integer;>;"
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v4

    monitor-enter v4

    .line 12818
    :try_start_5c
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mPackagesToRemove:Ljava/util/Set;

    invoke-interface {v5, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 12819
    monitor-exit v4
    :try_end_62
    .catchall {:try_start_5c .. :try_end_62} :catchall_a5

    .line 12822
    invoke-virtual {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdmins(I)Ljava/util/List;

    move-result-object v4

    .line 12825
    .local v4, "allActiveAdmins":Ljava/util/List;, "Ljava/util/List<Landroid/content/ComponentName;>;"
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    .line 12826
    .local v5, "packageActiveAdmins":Ljava/util/List;, "Ljava/util/List<Landroid/content/ComponentName;>;"
    if-eqz v4, :cond_8e

    .line 12827
    invoke-interface {v4}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v6

    :goto_71
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_8e

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/ComponentName;

    .line 12828
    .local v7, "activeAdmin":Landroid/content/ComponentName;
    invoke-virtual {v7}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {p1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_8d

    .line 12829
    invoke-interface {v5, v7}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 12830
    invoke-virtual {p0, v7, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->removeActiveAdmin(Landroid/content/ComponentName;I)V

    .line 12832
    .end local v7  # "activeAdmin":Landroid/content/ComponentName;
    :cond_8d
    goto :goto_71

    .line 12834
    :cond_8e
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v6

    if-nez v6, :cond_98

    .line 12835
    invoke-direct {p0, p1, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->startUninstallIntent(Ljava/lang/String;I)V

    goto :goto_a4

    .line 12837
    :cond_98
    iget-object v6, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHandler:Landroid/os/Handler;

    new-instance v7, Lcom/android/server/devicepolicy/DevicePolicyManagerService$9;

    invoke-direct {v7, p0, v5, v0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$9;-><init>(Lcom/android/server/devicepolicy/DevicePolicyManagerService;Ljava/util/List;ILjava/lang/String;)V

    const-wide/16 v8, 0x2710

    invoke-virtual {v6, v7, v8, v9}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 12847
    :goto_a4
    return-void

    .line 12819
    .end local v4  # "allActiveAdmins":Ljava/util/List;, "Ljava/util/List<Landroid/content/ComponentName;>;"
    .end local v5  # "packageActiveAdmins":Ljava/util/List;, "Ljava/util/List<Landroid/content/ComponentName;>;"
    :catchall_a5
    move-exception v5

    :try_start_a6
    monitor-exit v4
    :try_end_a7
    .catchall {:try_start_a6 .. :try_end_a7} :catchall_a5

    throw v5
.end method

.method public updateOverrideApn(Landroid/content/ComponentName;ILandroid/telephony/data/ApnSetting;)Z
    .registers 11
    .param p1, "who"  # Landroid/content/ComponentName;
    .param p2, "apnId"  # I
    .param p3, "apnSetting"  # Landroid/telephony/data/ApnSetting;

    .line 13943
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_49

    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasTelephonyFeature:Z

    if-nez v0, :cond_a

    goto :goto_49

    .line 13946
    :cond_a
    const-string v0, "ComponentName is null in updateOverrideApn"

    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13947
    const-string v0, "ApnSetting is null in updateOverrideApn"

    invoke-static {p3, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13948
    invoke-direct {p0, p1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceDeviceOwner(Landroid/content/ComponentName;)V

    .line 13950
    if-gez p2, :cond_1a

    .line 13951
    return v1

    .line 13953
    :cond_1a
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderClearCallingIdentity()J

    move-result-wide v2

    .line 13955
    .local v2, "id":J
    :try_start_20
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    sget-object v4, Landroid/provider/Telephony$Carriers;->DPC_URI:Landroid/net/Uri;

    .line 13956
    invoke-static {p2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/net/Uri;->withAppendedPath(Landroid/net/Uri;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v4

    .line 13957
    invoke-virtual {p3}, Landroid/telephony/data/ApnSetting;->toContentValues()Landroid/content/ContentValues;

    move-result-object v5

    .line 13955
    const/4 v6, 0x0

    invoke-virtual {v0, v4, v5, v6, v6}, Landroid/content/ContentResolver;->update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I

    move-result v0
    :try_end_39
    .catchall {:try_start_20 .. :try_end_39} :catchall_42

    if-lez v0, :cond_3c

    const/4 v1, 0x1

    .line 13959
    :cond_3c
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    .line 13955
    return v1

    .line 13959
    :catchall_42
    move-exception v0

    iget-object v1, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v1, v2, v3}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->binderRestoreCallingIdentity(J)V

    throw v0

    .line 13944
    .end local v2  # "id":J
    :cond_49
    :goto_49
    return v1
.end method

.method updateUserSetupCompleteAndPaired()V
    .registers 9

    .line 11107
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Landroid/os/UserManager;->getUsers(Z)Ljava/util/List;

    move-result-object v0

    .line 11108
    .local v0, "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    .line 11109
    .local v2, "N":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_c
    if-ge v3, v2, :cond_61

    .line 11110
    invoke-interface {v0, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/pm/UserInfo;

    iget v4, v4, Landroid/content/pm/UserInfo;->id:I

    .line 11111
    .local v4, "userHandle":I
    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const/4 v6, 0x0

    const-string/jumbo v7, "user_setup_complete"

    invoke-virtual {v5, v7, v6, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsSecureGetIntForUser(Ljava/lang/String;II)I

    move-result v5

    if-eqz v5, :cond_39

    .line 11113
    invoke-virtual {p0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v5

    .line 11114
    .local v5, "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-boolean v7, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserSetupComplete:Z

    if-nez v7, :cond_39

    .line 11115
    iput-boolean v1, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mUserSetupComplete:Z

    .line 11116
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v7

    monitor-enter v7

    .line 11117
    :try_start_31
    invoke-direct {p0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 11118
    monitor-exit v7

    goto :goto_39

    :catchall_36
    move-exception v1

    monitor-exit v7
    :try_end_38
    .catchall {:try_start_31 .. :try_end_38} :catchall_36

    throw v1

    .line 11121
    .end local v5  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :cond_39
    :goto_39
    iget-boolean v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mIsWatch:Z

    if-eqz v5, :cond_5e

    iget-object v5, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    const-string v7, "device_paired"

    invoke-virtual {v5, v7, v6, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->settingsSecureGetIntForUser(Ljava/lang/String;II)I

    move-result v5

    if-eqz v5, :cond_5e

    .line 11123
    invoke-virtual {p0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getUserData(I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    move-result-object v5

    .line 11124
    .restart local v5  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    iget-boolean v6, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPaired:Z

    if-nez v6, :cond_5e

    .line 11125
    iput-boolean v1, v5, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPaired:Z

    .line 11126
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v6

    monitor-enter v6

    .line 11127
    :try_start_56
    invoke-direct {p0, v4}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->saveSettingsLocked(I)V

    .line 11128
    monitor-exit v6

    goto :goto_5e

    :catchall_5b
    move-exception v1

    monitor-exit v6
    :try_end_5d
    .catchall {:try_start_56 .. :try_end_5d} :catchall_5b

    throw v1

    .line 11109
    .end local v4  # "userHandle":I
    .end local v5  # "policy":Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;
    :cond_5e
    :goto_5e
    add-int/lit8 v3, v3, 0x1

    goto :goto_c

    .line 11132
    .end local v3  # "i":I
    :cond_61
    return-void
.end method

.method validatePasswordOwnerLocked(Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;)V
    .registers 6
    .param p1, "policy"  # Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;

    .line 3516
    iget v0, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    if-ltz v0, :cond_46

    .line 3517
    const/4 v0, 0x0

    .line 3518
    .local v0, "haveOwner":Z
    iget-object v1, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "i":I
    :goto_d
    if-ltz v1, :cond_24

    .line 3519
    iget-object v2, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mAdminList:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    invoke-virtual {v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUid()I

    move-result v2

    iget v3, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    if-ne v2, v3, :cond_21

    .line 3520
    const/4 v0, 0x1

    .line 3521
    goto :goto_24

    .line 3518
    :cond_21
    add-int/lit8 v1, v1, -0x1

    goto :goto_d

    .line 3524
    .end local v1  # "i":I
    :cond_24
    :goto_24
    if-nez v0, :cond_46

    .line 3525
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Previous password owner "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " no longer active; disabling"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "DevicePolicyManager"

    invoke-static {v2, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3527
    const/4 v1, -0x1

    iput v1, p1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$DevicePolicyData;->mPasswordOwner:I

    .line 3530
    .end local v0  # "haveOwner":Z
    :cond_46
    return-void
.end method

.method public wipeDataWithReason(ILjava/lang/String;)V
    .registers 12
    .param p1, "flags"  # I
    .param p2, "wipeReasonForUser"  # Ljava/lang/String;

    .line 6536
    iget-boolean v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mHasFeature:Z

    if-nez v0, :cond_5

    .line 6537
    return-void

    .line 6539
    :cond_5
    const-string/jumbo v0, "wipeReasonForUser is null or empty"

    invoke-static {p2, v0}, Lcom/android/internal/util/Preconditions;->checkStringNotEmpty(Ljava/lang/CharSequence;Ljava/lang/Object;)Ljava/lang/CharSequence;

    .line 6540
    iget-object v0, p0, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->mInjector:Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;

    invoke-virtual {v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$Injector;->userHandleGetCallingUserId()I

    move-result v0

    invoke-direct {p0, v0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->enforceFullCrossUsersPermission(I)V

    .line 6543
    invoke-virtual {p0}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getLockObject()Ljava/lang/Object;

    move-result-object v0

    monitor-enter v0

    .line 6544
    const/4 v1, 0x0

    const/4 v2, 0x4

    :try_start_1b
    invoke-virtual {p0, v1, v2}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;

    move-result-object v1

    .line 6545
    .local v1, "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    monitor-exit v0
    :try_end_20
    .catchall {:try_start_1b .. :try_end_20} :catchall_68

    .line 6546
    const/16 v0, 0xb

    .line 6547
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    .line 6548
    invoke-virtual {v2}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    invoke-virtual {v0, v2}, Landroid/app/admin/DevicePolicyEventLogger;->setAdmin(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 6549
    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyEventLogger;->setInt(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 6550
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 6551
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "DevicePolicyManager.wipeDataWithReason() from "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    .line 6552
    invoke-virtual {v2}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    invoke-virtual {v2}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 6553
    .local v0, "internalReason":Ljava/lang/String;
    iget-object v2, v1, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->info:Landroid/app/admin/DeviceAdminInfo;

    .line 6554
    invoke-virtual {v2}, Landroid/app/admin/DeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    .line 6555
    invoke-virtual {v1}, Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v2

    invoke-virtual {v2}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v8

    .line 6553
    move-object v3, p0

    move v5, p1

    move-object v6, v0

    move-object v7, p2

    invoke-direct/range {v3 .. v8}, Lcom/android/server/devicepolicy/DevicePolicyManagerService;->wipeDataNoLock(Landroid/content/ComponentName;ILjava/lang/String;Ljava/lang/String;I)V

    .line 6556
    return-void

    .line 6545
    .end local v0  # "internalReason":Ljava/lang/String;
    .end local v1  # "admin":Lcom/android/server/devicepolicy/DevicePolicyManagerService$ActiveAdmin;
    :catchall_68
    move-exception v1

    :try_start_69
    monitor-exit v0
    :try_end_6a
    .catchall {:try_start_69 .. :try_end_6a} :catchall_68

    throw v1
.end method
